{"ast":null,"code":"\"use strict\";\n/* tslint:disable */\n\n/* eslint-disable */\n\n/**\n * VRChat API Documentation\n *\n * The version of the OpenAPI document: 1.7.2\n * Contact: me@ariesclark.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WorldsApi = exports.WorldsApiFactory = exports.WorldsApiFp = exports.WorldsApiAxiosParamCreator = exports.UsersApi = exports.UsersApiFactory = exports.UsersApiFp = exports.UsersApiAxiosParamCreator = exports.SystemApi = exports.SystemApiFactory = exports.SystemApiFp = exports.SystemApiAxiosParamCreator = exports.PlayermoderationApi = exports.PlayermoderationApiFactory = exports.PlayermoderationApiFp = exports.PlayermoderationApiAxiosParamCreator = exports.PermissionsApi = exports.PermissionsApiFactory = exports.PermissionsApiFp = exports.PermissionsApiAxiosParamCreator = exports.NotificationsApi = exports.NotificationsApiFactory = exports.NotificationsApiFp = exports.NotificationsApiAxiosParamCreator = exports.InviteApi = exports.InviteApiFactory = exports.InviteApiFp = exports.InviteApiAxiosParamCreator = exports.InstancesApi = exports.InstancesApiFactory = exports.InstancesApiFp = exports.InstancesApiAxiosParamCreator = exports.FriendsApi = exports.FriendsApiFactory = exports.FriendsApiFp = exports.FriendsApiAxiosParamCreator = exports.FilesApi = exports.FilesApiFactory = exports.FilesApiFp = exports.FilesApiAxiosParamCreator = exports.FavoritesApi = exports.FavoritesApiFactory = exports.FavoritesApiFp = exports.FavoritesApiAxiosParamCreator = exports.EconomyApi = exports.EconomyApiFactory = exports.EconomyApiFp = exports.EconomyApiAxiosParamCreator = exports.AvatarsApi = exports.AvatarsApiFactory = exports.AvatarsApiFp = exports.AvatarsApiAxiosParamCreator = exports.AuthenticationApi = exports.AuthenticationApiFactory = exports.AuthenticationApiFp = exports.AuthenticationApiAxiosParamCreator = exports.UserStatus = exports.UserState = exports.TransactionStatus = exports.SubscriptionPeriod = exports.ReleaseStatus = exports.Region = exports.PlayerModerationType = exports.NotificationType = exports.MIMEType = exports.LicenseType = exports.LicenseAction = exports.InviteMessageType = exports.InstanceType = exports.InfoPushDataClickableCommandEnum = exports.FileStatus = exports.FileDataCategoryEnum = exports.FavoriteType = exports.FavoriteGroupVisibility = exports.DeveloperType = exports.DeploymentGroup = void 0;\n\nvar axios_1 = require(\"axios\"); // Some imports not used depending on template conditions\n// @ts-ignore\n\n\nvar common_1 = require(\"./common\"); // @ts-ignore\n\n\nvar base_1 = require(\"./base\");\n\nvar axios_cookiejar_support_1 = require(\"axios-cookiejar-support\");\n\naxios_cookiejar_support_1.default(axios_1.default);\n\nvar tough_cookie_1 = require(\"tough-cookie\");\n\naxios_1.default.defaults.jar = new tough_cookie_1.CookieJar();\naxios_1.default.defaults.withCredentials = true;\n/**\n * Used to identify which API deployment cluster is currently responding.  `blue` and `green` are used by Production. `grape`and `cherry` are used during Development.  [Blue Green Deployment by Martin Fowler](https://martinfowler.com/bliki/BlueGreenDeployment.html)\n * @export\n * @enum {string}\n */\n\nvar DeploymentGroup;\n\n(function (DeploymentGroup) {\n  DeploymentGroup[\"Blue\"] = \"blue\";\n  DeploymentGroup[\"Green\"] = \"green\";\n  DeploymentGroup[\"Grape\"] = \"grape\";\n  DeploymentGroup[\"Cherry\"] = \"cherry\";\n})(DeploymentGroup = exports.DeploymentGroup || (exports.DeploymentGroup = {}));\n/**\n * \\\"none\\\" User is a normal user \\\"trusted\\\" Unknown \\\"internal\\\" Is a VRChat Developer \\\"moderator\\\" Is a VRChat Moderator  Staff can hide their developerType at will.\n * @export\n * @enum {string}\n */\n\n\nvar DeveloperType;\n\n(function (DeveloperType) {\n  DeveloperType[\"None\"] = \"none\";\n  DeveloperType[\"Trusted\"] = \"trusted\";\n  DeveloperType[\"Internal\"] = \"internal\";\n  DeveloperType[\"Moderator\"] = \"moderator\";\n})(DeveloperType = exports.DeveloperType || (exports.DeveloperType = {}));\n/**\n *\n * @export\n * @enum {string}\n */\n\n\nvar FavoriteGroupVisibility;\n\n(function (FavoriteGroupVisibility) {\n  FavoriteGroupVisibility[\"Private\"] = \"private\";\n  FavoriteGroupVisibility[\"Friends\"] = \"friends\";\n  FavoriteGroupVisibility[\"Public\"] = \"public\";\n})(FavoriteGroupVisibility = exports.FavoriteGroupVisibility || (exports.FavoriteGroupVisibility = {}));\n/**\n *\n * @export\n * @enum {string}\n */\n\n\nvar FavoriteType;\n\n(function (FavoriteType) {\n  FavoriteType[\"World\"] = \"world\";\n  FavoriteType[\"Friend\"] = \"friend\";\n  FavoriteType[\"Avatar\"] = \"avatar\";\n})(FavoriteType = exports.FavoriteType || (exports.FavoriteType = {}));\n/**\n    * @export\n    * @enum {string}\n    */\n\n\nvar FileDataCategoryEnum;\n\n(function (FileDataCategoryEnum) {\n  FileDataCategoryEnum[\"Multipart\"] = \"multipart\";\n  FileDataCategoryEnum[\"Queued\"] = \"queued\";\n  FileDataCategoryEnum[\"Simple\"] = \"simple\";\n})(FileDataCategoryEnum = exports.FileDataCategoryEnum || (exports.FileDataCategoryEnum = {}));\n/**\n *\n * @export\n * @enum {string}\n */\n\n\nvar FileStatus;\n\n(function (FileStatus) {\n  FileStatus[\"Waiting\"] = \"waiting\";\n  FileStatus[\"Complete\"] = \"complete\";\n  FileStatus[\"None\"] = \"none\";\n  FileStatus[\"Queued\"] = \"queued\";\n})(FileStatus = exports.FileStatus || (exports.FileStatus = {}));\n/**\n    * @export\n    * @enum {string}\n    */\n\n\nvar InfoPushDataClickableCommandEnum;\n\n(function (InfoPushDataClickableCommandEnum) {\n  InfoPushDataClickableCommandEnum[\"OpenUrl\"] = \"OpenURL\";\n  InfoPushDataClickableCommandEnum[\"OpenVrcPlusMenu\"] = \"OpenVRCPlusMenu\";\n  InfoPushDataClickableCommandEnum[\"OpenSafetyMenu\"] = \"OpenSafetyMenu\";\n  InfoPushDataClickableCommandEnum[\"CannedWorldSearch\"] = \"CannedWorldSearch\";\n})(InfoPushDataClickableCommandEnum = exports.InfoPushDataClickableCommandEnum || (exports.InfoPushDataClickableCommandEnum = {}));\n/**\n *\n * @export\n * @enum {string}\n */\n\n\nvar InstanceType;\n\n(function (InstanceType) {\n  InstanceType[\"Public\"] = \"public\";\n  InstanceType[\"Hidden\"] = \"hidden\";\n  InstanceType[\"Friends\"] = \"friends\";\n  InstanceType[\"Private\"] = \"private\";\n})(InstanceType = exports.InstanceType || (exports.InstanceType = {}));\n/**\n *\n * @export\n * @enum {string}\n */\n\n\nvar InviteMessageType;\n\n(function (InviteMessageType) {\n  InviteMessageType[\"Message\"] = \"message\";\n  InviteMessageType[\"Response\"] = \"response\";\n  InviteMessageType[\"Request\"] = \"request\";\n  InviteMessageType[\"RequestResponse\"] = \"requestResponse\";\n})(InviteMessageType = exports.InviteMessageType || (exports.InviteMessageType = {}));\n/**\n *\n * @export\n * @enum {string}\n */\n\n\nvar LicenseAction;\n\n(function (LicenseAction) {\n  LicenseAction[\"Wear\"] = \"wear\";\n  LicenseAction[\"Have\"] = \"have\";\n})(LicenseAction = exports.LicenseAction || (exports.LicenseAction = {}));\n/**\n *\n * @export\n * @enum {string}\n */\n\n\nvar LicenseType;\n\n(function (LicenseType) {\n  LicenseType[\"Avatar\"] = \"avatar\";\n  LicenseType[\"LicenseGroup\"] = \"licenseGroup\";\n  LicenseType[\"Permission\"] = \"permission\";\n  LicenseType[\"Product\"] = \"product\";\n})(LicenseType = exports.LicenseType || (exports.LicenseType = {}));\n/**\n *\n * @export\n * @enum {string}\n */\n\n\nvar MIMEType;\n\n(function (MIMEType) {\n  MIMEType[\"ImageJpeg\"] = \"image/jpeg\";\n  MIMEType[\"ImageJpg\"] = \"image/jpg\";\n  MIMEType[\"ImagePng\"] = \"image/png\";\n  MIMEType[\"ImageWebp\"] = \"image/webp\";\n  MIMEType[\"ImageGif\"] = \"image/gif\";\n  MIMEType[\"ImageBmp\"] = \"image/bmp\";\n  MIMEType[\"ImageSvgxml\"] = \"image/svg\\uFF0Bxml\";\n  MIMEType[\"ImageTiff\"] = \"image/tiff\";\n  MIMEType[\"ApplicationXAvatar\"] = \"application/x-avatar\";\n  MIMEType[\"ApplicationXWorld\"] = \"application/x-world\";\n  MIMEType[\"ApplicationGzip\"] = \"application/gzip\";\n  MIMEType[\"ApplicationXRsyncSignature\"] = \"application/x-rsync-signature\";\n  MIMEType[\"ApplicationXRsyncDelta\"] = \"application/x-rsync-delta\";\n  MIMEType[\"ApplicationOctetStream\"] = \"application/octet-stream\";\n})(MIMEType = exports.MIMEType || (exports.MIMEType = {}));\n/**\n *\n * @export\n * @enum {string}\n */\n\n\nvar NotificationType;\n\n(function (NotificationType) {\n  NotificationType[\"FriendRequest\"] = \"friendRequest\";\n  NotificationType[\"Invite\"] = \"invite\";\n  NotificationType[\"InviteResponse\"] = \"inviteResponse\";\n  NotificationType[\"RequestInvite\"] = \"requestInvite\";\n  NotificationType[\"RequestInviteResponse\"] = \"requestInviteResponse\";\n  NotificationType[\"Votetokick\"] = \"votetokick\";\n})(NotificationType = exports.NotificationType || (exports.NotificationType = {}));\n/**\n *\n * @export\n * @enum {string}\n */\n\n\nvar PlayerModerationType;\n\n(function (PlayerModerationType) {\n  PlayerModerationType[\"Mute\"] = \"mute\";\n  PlayerModerationType[\"Unmute\"] = \"unmute\";\n  PlayerModerationType[\"Block\"] = \"block\";\n  PlayerModerationType[\"Unblock\"] = \"unblock\";\n  PlayerModerationType[\"HideAvatar\"] = \"hideAvatar\";\n  PlayerModerationType[\"ShowAvatar\"] = \"showAvatar\";\n  PlayerModerationType[\"InteractOn\"] = \"interactOn\";\n  PlayerModerationType[\"InteractOff\"] = \"interactOff\";\n})(PlayerModerationType = exports.PlayerModerationType || (exports.PlayerModerationType = {}));\n/**\n * API/Photon region.\n * @export\n * @enum {string}\n */\n\n\nvar Region;\n\n(function (Region) {\n  Region[\"Us\"] = \"us\";\n  Region[\"Use\"] = \"use\";\n  Region[\"Usw\"] = \"usw\";\n  Region[\"Eu\"] = \"eu\";\n  Region[\"Jp\"] = \"jp\";\n  Region[\"Unknown\"] = \"unknown\";\n})(Region = exports.Region || (exports.Region = {}));\n/**\n *\n * @export\n * @enum {string}\n */\n\n\nvar ReleaseStatus;\n\n(function (ReleaseStatus) {\n  ReleaseStatus[\"Public\"] = \"public\";\n  ReleaseStatus[\"Private\"] = \"private\";\n  ReleaseStatus[\"Hidden\"] = \"hidden\";\n})(ReleaseStatus = exports.ReleaseStatus || (exports.ReleaseStatus = {}));\n/**\n *\n * @export\n * @enum {string}\n */\n\n\nvar SubscriptionPeriod;\n\n(function (SubscriptionPeriod) {\n  SubscriptionPeriod[\"Hour\"] = \"hour\";\n  SubscriptionPeriod[\"Day\"] = \"day\";\n  SubscriptionPeriod[\"Week\"] = \"week\";\n  SubscriptionPeriod[\"Month\"] = \"month\";\n  SubscriptionPeriod[\"Year\"] = \"year\";\n})(SubscriptionPeriod = exports.SubscriptionPeriod || (exports.SubscriptionPeriod = {}));\n/**\n *\n * @export\n * @enum {string}\n */\n\n\nvar TransactionStatus;\n\n(function (TransactionStatus) {\n  TransactionStatus[\"Active\"] = \"active\";\n  TransactionStatus[\"Failed\"] = \"failed\";\n  TransactionStatus[\"Expired\"] = \"expired\";\n  TransactionStatus[\"Chargeback\"] = \"chargeback\";\n})(TransactionStatus = exports.TransactionStatus || (exports.TransactionStatus = {}));\n/**\n * * \\\"online\\\" User is online in VRChat * \\\"active\\\" User is online, but not in VRChat * \\\"offline\\\" User is offline  Always offline when returned through `getCurrentUser` (/auth/user).\n * @export\n * @enum {string}\n */\n\n\nvar UserState;\n\n(function (UserState) {\n  UserState[\"Offline\"] = \"offline\";\n  UserState[\"Active\"] = \"active\";\n  UserState[\"Online\"] = \"online\";\n})(UserState = exports.UserState || (exports.UserState = {}));\n/**\n * Defines the User\\'s current status, for example \\\"ask me\\\", \\\"join me\\\" or \\\"offline. This status is a combined indicator of their online activity and privacy preference.\n * @export\n * @enum {string}\n */\n\n\nvar UserStatus;\n\n(function (UserStatus) {\n  UserStatus[\"Active\"] = \"active\";\n  UserStatus[\"JoinMe\"] = \"join me\";\n  UserStatus[\"AskMe\"] = \"ask me\";\n  UserStatus[\"Busy\"] = \"busy\";\n  UserStatus[\"Offline\"] = \"offline\";\n})(UserStatus = exports.UserStatus || (exports.UserStatus = {}));\n/**\n * AuthenticationApi - axios parameter creator\n * @export\n */\n\n\nexports.AuthenticationApiAxiosParamCreator = function (configuration) {\n  var _this = this;\n\n  return {\n    /**\n     * Checks if a user by a given `username`, `displayName` or `email` exist. This is used during registration to check if a username has already been taken, during change of displayName to check if a displayName is available, and during change of email to check if the email is already used. In the later two cases the `excludeUserId` is used to exclude oneself, otherwise the result would always be true.  It is **REQUIRED** to include **AT LEAST** `username`, `displayName` **or** `email` query parameter. Although they can be combined - in addition with `excludeUserId` (generally to exclude yourself) - to further fine-tune the search.\n     * @summary Check User Exists\n     * @param {string} [email] Filter by email.\n     * @param {string} [displayName] Filter by displayName.\n     * @param {string} [userId] Filter by UserID.\n     * @param {string} [excludeUserId] Exclude by UserID.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    checkUserExists: function (email, displayName, userId, excludeUserId, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          localVarPath = \"/auth/exists\";\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'GET'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {}; // authentication apiKeyCookie required\n\n          if (email !== undefined) {\n            localVarQueryParameter['email'] = email;\n          }\n\n          if (displayName !== undefined) {\n            localVarQueryParameter['displayName'] = displayName;\n          }\n\n          if (userId !== undefined) {\n            localVarQueryParameter['userId'] = userId;\n          }\n\n          if (excludeUserId !== undefined) {\n            localVarQueryParameter['excludeUserId'] = excludeUserId;\n          }\n\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    },\n\n    /**\n     * Deletes the account with given ID. Normal users only have permission to delete their own account. Account deletion is 14 days from this request, and will be cancelled if you do an authenticated request with the account afterwards.  **VRC+ NOTE:** Despite the 14-days cooldown, any VRC+ subscription will be cancelled **immediately**.  **METHOD NOTE:** Despite this being a Delete action, the method type required is PUT.\n     * @summary Delete User\n     * @param {string} userId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteUser: function (userId, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          // verify required parameter 'userId' is not null or undefined\n          common_1.assertParamExists('deleteUser', 'userId', userId);\n          localVarPath = \"/user/{userId}/delete\".replace(\"{\" + \"userId\" + \"}\", encodeURIComponent(String(userId)));\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'PUT'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {}; // authentication apiKeyCookie required\n          // authentication authCookie required\n\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    },\n\n    /**\n     * This endpoint does the following two operations:   1) Checks if you are already logged in by looking for a valid `auth` cookie. If you are have a valid auth cookie then no additional auth-related actions are taken. If you are **not** logged in then it will log you in with the `Authorization` header and set the `auth` cookie. The `auth` cookie will only be sent once.   2) If logged in, this function will also return the CurrentUser object containing detailed information about the currently logged in user.  **WARNING: Session Limit:** Each authentication with login credentials counts as a separate session, out of which you have a limited amount. Make sure to save and reuse the `auth` cookie if you are often restarting the program. The provided API libraries automatically save cookies during runtime, but does not persist during restart. While it can be fine to use username/password during development, expect in production to very fast run into the rate-limit and be temporarily blocked from making new sessions until older ones expire. The exact number of simultaneous sessions is unknown/undisclosed.\n     * @summary Login and/or Get Current User Info\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getCurrentUser: function (options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          localVarPath = \"/auth/user\";\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'GET'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {}; // authentication authCookie required\n          // authentication authHeader required\n          // http basic authentication required\n\n          common_1.setBasicAuthToObject(localVarRequestOptions, configuration); // authentication twoFactorAuthCookie required\n\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    },\n\n    /**\n     * Invalidates the login session.\n     * @summary Logout\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    logout: function (options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          localVarPath = \"/logout\";\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'PUT'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {}; // authentication authCookie required\n\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    },\n\n    /**\n     * Finishes the login sequence with a normal 2FA-generated code for accounts with 2FA-protection enabled.\n     * @summary Verify 2FA code\n     * @param {TwoFactorAuthCode} [twoFactorAuthCode]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    verify2FA: function (twoFactorAuthCode, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          localVarPath = \"/auth/twofactorauth/totp/verify\";\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'POST'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {}; // authentication authCookie required\n\n          localVarHeaderParameter['Content-Type'] = 'application/json';\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          localVarRequestOptions.data = common_1.serializeDataIfNeeded(twoFactorAuthCode, localVarRequestOptions, configuration);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    },\n\n    /**\n     * Verify whether the currently provided Auth Token is valid.\n     * @summary Verify Auth Token\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    verifyAuthToken: function (options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          localVarPath = \"/auth\";\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'GET'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {}; // authentication authCookie required\n\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    },\n\n    /**\n     * Finishes the login sequence with an OTP (One Time Password) recovery code for accounts with 2FA-protection enabled.\n     * @summary Verify 2FA code with Recovery code\n     * @param {TwoFactorAuthCode} [twoFactorAuthCode]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    verifyRecoveryCode: function (twoFactorAuthCode, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          localVarPath = \"/auth/twofactorauth/otp/verify\";\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'POST'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {}; // authentication authCookie required\n\n          localVarHeaderParameter['Content-Type'] = 'application/json';\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          localVarRequestOptions.data = common_1.serializeDataIfNeeded(twoFactorAuthCode, localVarRequestOptions, configuration);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    }\n  };\n};\n/**\n * AuthenticationApi - functional programming interface\n * @export\n */\n\n\nexports.AuthenticationApiFp = function (configuration) {\n  var localVarAxiosParamCreator = exports.AuthenticationApiAxiosParamCreator(configuration);\n  return {\n    /**\n     * Checks if a user by a given `username`, `displayName` or `email` exist. This is used during registration to check if a username has already been taken, during change of displayName to check if a displayName is available, and during change of email to check if the email is already used. In the later two cases the `excludeUserId` is used to exclude oneself, otherwise the result would always be true.  It is **REQUIRED** to include **AT LEAST** `username`, `displayName` **or** `email` query parameter. Although they can be combined - in addition with `excludeUserId` (generally to exclude yourself) - to further fine-tune the search.\n     * @summary Check User Exists\n     * @param {string} [email] Filter by email.\n     * @param {string} [displayName] Filter by displayName.\n     * @param {string} [userId] Filter by UserID.\n     * @param {string} [excludeUserId] Exclude by UserID.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    checkUserExists: function (email, displayName, userId, excludeUserId, options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.checkUserExists(email, displayName, userId, excludeUserId, options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    },\n\n    /**\n     * Deletes the account with given ID. Normal users only have permission to delete their own account. Account deletion is 14 days from this request, and will be cancelled if you do an authenticated request with the account afterwards.  **VRC+ NOTE:** Despite the 14-days cooldown, any VRC+ subscription will be cancelled **immediately**.  **METHOD NOTE:** Despite this being a Delete action, the method type required is PUT.\n     * @summary Delete User\n     * @param {string} userId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteUser: function (userId, options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.deleteUser(userId, options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    },\n\n    /**\n     * This endpoint does the following two operations:   1) Checks if you are already logged in by looking for a valid `auth` cookie. If you are have a valid auth cookie then no additional auth-related actions are taken. If you are **not** logged in then it will log you in with the `Authorization` header and set the `auth` cookie. The `auth` cookie will only be sent once.   2) If logged in, this function will also return the CurrentUser object containing detailed information about the currently logged in user.  **WARNING: Session Limit:** Each authentication with login credentials counts as a separate session, out of which you have a limited amount. Make sure to save and reuse the `auth` cookie if you are often restarting the program. The provided API libraries automatically save cookies during runtime, but does not persist during restart. While it can be fine to use username/password during development, expect in production to very fast run into the rate-limit and be temporarily blocked from making new sessions until older ones expire. The exact number of simultaneous sessions is unknown/undisclosed.\n     * @summary Login and/or Get Current User Info\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getCurrentUser: function (options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.getCurrentUser(options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    },\n\n    /**\n     * Invalidates the login session.\n     * @summary Logout\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    logout: function (options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.logout(options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    },\n\n    /**\n     * Finishes the login sequence with a normal 2FA-generated code for accounts with 2FA-protection enabled.\n     * @summary Verify 2FA code\n     * @param {TwoFactorAuthCode} [twoFactorAuthCode]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    verify2FA: function (twoFactorAuthCode, options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.verify2FA(twoFactorAuthCode, options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    },\n\n    /**\n     * Verify whether the currently provided Auth Token is valid.\n     * @summary Verify Auth Token\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    verifyAuthToken: function (options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.verifyAuthToken(options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    },\n\n    /**\n     * Finishes the login sequence with an OTP (One Time Password) recovery code for accounts with 2FA-protection enabled.\n     * @summary Verify 2FA code with Recovery code\n     * @param {TwoFactorAuthCode} [twoFactorAuthCode]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    verifyRecoveryCode: function (twoFactorAuthCode, options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.verifyRecoveryCode(twoFactorAuthCode, options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    }\n  };\n};\n/**\n * AuthenticationApi - factory interface\n * @export\n */\n\n\nexports.AuthenticationApiFactory = function (configuration, basePath, axios) {\n  var localVarFp = exports.AuthenticationApiFp(configuration);\n  return {\n    /**\n     * Checks if a user by a given `username`, `displayName` or `email` exist. This is used during registration to check if a username has already been taken, during change of displayName to check if a displayName is available, and during change of email to check if the email is already used. In the later two cases the `excludeUserId` is used to exclude oneself, otherwise the result would always be true.  It is **REQUIRED** to include **AT LEAST** `username`, `displayName` **or** `email` query parameter. Although they can be combined - in addition with `excludeUserId` (generally to exclude yourself) - to further fine-tune the search.\n     * @summary Check User Exists\n     * @param {string} [email] Filter by email.\n     * @param {string} [displayName] Filter by displayName.\n     * @param {string} [userId] Filter by UserID.\n     * @param {string} [excludeUserId] Exclude by UserID.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    checkUserExists: function (email, displayName, userId, excludeUserId, options) {\n      return localVarFp.checkUserExists(email, displayName, userId, excludeUserId, options).then(function (request) {\n        return request(axios, basePath);\n      });\n    },\n\n    /**\n     * Deletes the account with given ID. Normal users only have permission to delete their own account. Account deletion is 14 days from this request, and will be cancelled if you do an authenticated request with the account afterwards.  **VRC+ NOTE:** Despite the 14-days cooldown, any VRC+ subscription will be cancelled **immediately**.  **METHOD NOTE:** Despite this being a Delete action, the method type required is PUT.\n     * @summary Delete User\n     * @param {string} userId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteUser: function (userId, options) {\n      return localVarFp.deleteUser(userId, options).then(function (request) {\n        return request(axios, basePath);\n      });\n    },\n\n    /**\n     * This endpoint does the following two operations:   1) Checks if you are already logged in by looking for a valid `auth` cookie. If you are have a valid auth cookie then no additional auth-related actions are taken. If you are **not** logged in then it will log you in with the `Authorization` header and set the `auth` cookie. The `auth` cookie will only be sent once.   2) If logged in, this function will also return the CurrentUser object containing detailed information about the currently logged in user.  **WARNING: Session Limit:** Each authentication with login credentials counts as a separate session, out of which you have a limited amount. Make sure to save and reuse the `auth` cookie if you are often restarting the program. The provided API libraries automatically save cookies during runtime, but does not persist during restart. While it can be fine to use username/password during development, expect in production to very fast run into the rate-limit and be temporarily blocked from making new sessions until older ones expire. The exact number of simultaneous sessions is unknown/undisclosed.\n     * @summary Login and/or Get Current User Info\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getCurrentUser: function (options) {\n      return localVarFp.getCurrentUser(options).then(function (request) {\n        return request(axios, basePath);\n      });\n    },\n\n    /**\n     * Invalidates the login session.\n     * @summary Logout\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    logout: function (options) {\n      return localVarFp.logout(options).then(function (request) {\n        return request(axios, basePath);\n      });\n    },\n\n    /**\n     * Finishes the login sequence with a normal 2FA-generated code for accounts with 2FA-protection enabled.\n     * @summary Verify 2FA code\n     * @param {TwoFactorAuthCode} [twoFactorAuthCode]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    verify2FA: function (twoFactorAuthCode, options) {\n      return localVarFp.verify2FA(twoFactorAuthCode, options).then(function (request) {\n        return request(axios, basePath);\n      });\n    },\n\n    /**\n     * Verify whether the currently provided Auth Token is valid.\n     * @summary Verify Auth Token\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    verifyAuthToken: function (options) {\n      return localVarFp.verifyAuthToken(options).then(function (request) {\n        return request(axios, basePath);\n      });\n    },\n\n    /**\n     * Finishes the login sequence with an OTP (One Time Password) recovery code for accounts with 2FA-protection enabled.\n     * @summary Verify 2FA code with Recovery code\n     * @param {TwoFactorAuthCode} [twoFactorAuthCode]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    verifyRecoveryCode: function (twoFactorAuthCode, options) {\n      return localVarFp.verifyRecoveryCode(twoFactorAuthCode, options).then(function (request) {\n        return request(axios, basePath);\n      });\n    }\n  };\n};\n/**\n * AuthenticationApi - object-oriented interface\n * @export\n * @class AuthenticationApi\n * @extends {BaseAPI}\n */\n\n\nvar AuthenticationApi =\n/** @class */\nfunction (_super) {\n  __extends(AuthenticationApi, _super);\n\n  function AuthenticationApi() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * Checks if a user by a given `username`, `displayName` or `email` exist. This is used during registration to check if a username has already been taken, during change of displayName to check if a displayName is available, and during change of email to check if the email is already used. In the later two cases the `excludeUserId` is used to exclude oneself, otherwise the result would always be true.  It is **REQUIRED** to include **AT LEAST** `username`, `displayName` **or** `email` query parameter. Although they can be combined - in addition with `excludeUserId` (generally to exclude yourself) - to further fine-tune the search.\n   * @summary Check User Exists\n   * @param {string} [email] Filter by email.\n   * @param {string} [displayName] Filter by displayName.\n   * @param {string} [userId] Filter by UserID.\n   * @param {string} [excludeUserId] Exclude by UserID.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof AuthenticationApi\n   */\n\n\n  AuthenticationApi.prototype.checkUserExists = function (email, displayName, userId, excludeUserId, options) {\n    var _this = this;\n\n    return exports.AuthenticationApiFp(this.configuration).checkUserExists(email, displayName, userId, excludeUserId, options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n  /**\n   * Deletes the account with given ID. Normal users only have permission to delete their own account. Account deletion is 14 days from this request, and will be cancelled if you do an authenticated request with the account afterwards.  **VRC+ NOTE:** Despite the 14-days cooldown, any VRC+ subscription will be cancelled **immediately**.  **METHOD NOTE:** Despite this being a Delete action, the method type required is PUT.\n   * @summary Delete User\n   * @param {string} userId\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof AuthenticationApi\n   */\n\n\n  AuthenticationApi.prototype.deleteUser = function (userId, options) {\n    var _this = this;\n\n    return exports.AuthenticationApiFp(this.configuration).deleteUser(userId, options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n  /**\n   * This endpoint does the following two operations:   1) Checks if you are already logged in by looking for a valid `auth` cookie. If you are have a valid auth cookie then no additional auth-related actions are taken. If you are **not** logged in then it will log you in with the `Authorization` header and set the `auth` cookie. The `auth` cookie will only be sent once.   2) If logged in, this function will also return the CurrentUser object containing detailed information about the currently logged in user.  **WARNING: Session Limit:** Each authentication with login credentials counts as a separate session, out of which you have a limited amount. Make sure to save and reuse the `auth` cookie if you are often restarting the program. The provided API libraries automatically save cookies during runtime, but does not persist during restart. While it can be fine to use username/password during development, expect in production to very fast run into the rate-limit and be temporarily blocked from making new sessions until older ones expire. The exact number of simultaneous sessions is unknown/undisclosed.\n   * @summary Login and/or Get Current User Info\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof AuthenticationApi\n   */\n\n\n  AuthenticationApi.prototype.getCurrentUser = function (options) {\n    var _this = this;\n\n    return exports.AuthenticationApiFp(this.configuration).getCurrentUser(options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n  /**\n   * Invalidates the login session.\n   * @summary Logout\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof AuthenticationApi\n   */\n\n\n  AuthenticationApi.prototype.logout = function (options) {\n    var _this = this;\n\n    return exports.AuthenticationApiFp(this.configuration).logout(options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n  /**\n   * Finishes the login sequence with a normal 2FA-generated code for accounts with 2FA-protection enabled.\n   * @summary Verify 2FA code\n   * @param {TwoFactorAuthCode} [twoFactorAuthCode]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof AuthenticationApi\n   */\n\n\n  AuthenticationApi.prototype.verify2FA = function (twoFactorAuthCode, options) {\n    var _this = this;\n\n    return exports.AuthenticationApiFp(this.configuration).verify2FA(twoFactorAuthCode, options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n  /**\n   * Verify whether the currently provided Auth Token is valid.\n   * @summary Verify Auth Token\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof AuthenticationApi\n   */\n\n\n  AuthenticationApi.prototype.verifyAuthToken = function (options) {\n    var _this = this;\n\n    return exports.AuthenticationApiFp(this.configuration).verifyAuthToken(options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n  /**\n   * Finishes the login sequence with an OTP (One Time Password) recovery code for accounts with 2FA-protection enabled.\n   * @summary Verify 2FA code with Recovery code\n   * @param {TwoFactorAuthCode} [twoFactorAuthCode]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof AuthenticationApi\n   */\n\n\n  AuthenticationApi.prototype.verifyRecoveryCode = function (twoFactorAuthCode, options) {\n    var _this = this;\n\n    return exports.AuthenticationApiFp(this.configuration).verifyRecoveryCode(twoFactorAuthCode, options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n\n  return AuthenticationApi;\n}(base_1.BaseAPI);\n\nexports.AuthenticationApi = AuthenticationApi;\n/**\n * AvatarsApi - axios parameter creator\n * @export\n */\n\nexports.AvatarsApiAxiosParamCreator = function (configuration) {\n  var _this = this;\n\n  return {\n    /**\n     * Create an avatar. It\\'s possible to optionally specify a ID if you want a custom one. Attempting to create an Avatar with an already claimed ID will result in a DB error.\n     * @summary Create Avatar\n     * @param {CreateAvatarRequest} [createAvatarRequest]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createAvatar: function (createAvatarRequest, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          localVarPath = \"/avatars\";\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'POST'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {}; // authentication apiKeyCookie required\n          // authentication authCookie required\n\n          localVarHeaderParameter['Content-Type'] = 'application/json';\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          localVarRequestOptions.data = common_1.serializeDataIfNeeded(createAvatarRequest, localVarRequestOptions, configuration);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    },\n\n    /**\n     * Delete an avatar. Notice an avatar is never fully \\\"deleted\\\", only its ReleaseStatus is set to \\\"hidden\\\" and the linked Files are deleted. The AvatarID is permanently reserved.\n     * @summary Delete Avatar\n     * @param {string} avatarId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteAvatar: function (avatarId, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          // verify required parameter 'avatarId' is not null or undefined\n          common_1.assertParamExists('deleteAvatar', 'avatarId', avatarId);\n          localVarPath = \"/avatars/{avatarId}\".replace(\"{\" + \"avatarId\" + \"}\", encodeURIComponent(String(avatarId)));\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'DELETE'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {}; // authentication apiKeyCookie required\n          // authentication authCookie required\n\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    },\n\n    /**\n     * Get information about a specific Avatar.\n     * @summary Get Avatar\n     * @param {string} avatarId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getAvatar: function (avatarId, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          // verify required parameter 'avatarId' is not null or undefined\n          common_1.assertParamExists('getAvatar', 'avatarId', avatarId);\n          localVarPath = \"/avatars/{avatarId}\".replace(\"{\" + \"avatarId\" + \"}\", encodeURIComponent(String(avatarId)));\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'GET'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {}; // authentication apiKeyCookie required\n          // authentication authCookie required\n\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    },\n\n    /**\n     * Search and list favorited avatars by query filters.\n     * @summary List Favorited Avatars\n     * @param {boolean} [featured] Filters on featured results.\n     * @param {'popularity' | 'heat' | 'trust' | 'shuffle' | 'random' | 'favorites' | 'reportScore' | 'reportCount' | 'publicationDate' | 'labsPublicationDate' | 'created' | '_created_at' | 'updated' | '_updated_at' | 'order' | 'relevance' | 'magic' | 'name'} [sort]\n     * @param {number} [n] The number of objects to return.\n     * @param {'ascending' | 'descending'} [order]\n     * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n     * @param {string} [search] Filters by world name.\n     * @param {string} [tag] Tags to include (comma-separated). Any of the tags needs to be present.\n     * @param {string} [notag] Tags to exclude (comma-separated).\n     * @param {'public' | 'private' | 'hidden' | 'all'} [releaseStatus] Filter by ReleaseStatus.\n     * @param {string} [maxUnityVersion] The maximum Unity version supported by the asset.\n     * @param {string} [minUnityVersion] The minimum Unity version supported by the asset.\n     * @param {string} [platform] The platform the asset supports.\n     * @param {string} [userId] Target user to see information on, admin-only.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getFavoritedAvatars: function (featured, sort, n, order, offset, search, tag, notag, releaseStatus, maxUnityVersion, minUnityVersion, platform, userId, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          localVarPath = \"/avatars/favorites\";\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'GET'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {}; // authentication apiKeyCookie required\n          // authentication authCookie required\n\n          if (featured !== undefined) {\n            localVarQueryParameter['featured'] = featured;\n          }\n\n          if (sort !== undefined) {\n            localVarQueryParameter['sort'] = sort;\n          }\n\n          if (n !== undefined) {\n            localVarQueryParameter['n'] = n;\n          }\n\n          if (order !== undefined) {\n            localVarQueryParameter['order'] = order;\n          }\n\n          if (offset !== undefined) {\n            localVarQueryParameter['offset'] = offset;\n          }\n\n          if (search !== undefined) {\n            localVarQueryParameter['search'] = search;\n          }\n\n          if (tag !== undefined) {\n            localVarQueryParameter['tag'] = tag;\n          }\n\n          if (notag !== undefined) {\n            localVarQueryParameter['notag'] = notag;\n          }\n\n          if (releaseStatus !== undefined) {\n            localVarQueryParameter['releaseStatus'] = releaseStatus;\n          }\n\n          if (maxUnityVersion !== undefined) {\n            localVarQueryParameter['maxUnityVersion'] = maxUnityVersion;\n          }\n\n          if (minUnityVersion !== undefined) {\n            localVarQueryParameter['minUnityVersion'] = minUnityVersion;\n          }\n\n          if (platform !== undefined) {\n            localVarQueryParameter['platform'] = platform;\n          }\n\n          if (userId !== undefined) {\n            localVarQueryParameter['userId'] = userId;\n          }\n\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    },\n\n    /**\n     * Search and list avatars by query filters. You can only search your own or featured avatars. It is not possible as a normal user to search other peoples avatars.\n     * @summary Search Avatars\n     * @param {boolean} [featured] Filters on featured results.\n     * @param {'popularity' | 'heat' | 'trust' | 'shuffle' | 'random' | 'favorites' | 'reportScore' | 'reportCount' | 'publicationDate' | 'labsPublicationDate' | 'created' | '_created_at' | 'updated' | '_updated_at' | 'order' | 'relevance' | 'magic' | 'name'} [sort]\n     * @param {'me'} [user] Set to &#x60;me&#x60; for searching own avatars.\n     * @param {string} [userId] Filter by UserID.\n     * @param {number} [n] The number of objects to return.\n     * @param {'ascending' | 'descending'} [order]\n     * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n     * @param {string} [tag] Tags to include (comma-separated). Any of the tags needs to be present.\n     * @param {string} [notag] Tags to exclude (comma-separated).\n     * @param {'public' | 'private' | 'hidden' | 'all'} [releaseStatus] Filter by ReleaseStatus.\n     * @param {string} [maxUnityVersion] The maximum Unity version supported by the asset.\n     * @param {string} [minUnityVersion] The minimum Unity version supported by the asset.\n     * @param {string} [platform] The platform the asset supports.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchAvatars: function (featured, sort, user, userId, n, order, offset, tag, notag, releaseStatus, maxUnityVersion, minUnityVersion, platform, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          localVarPath = \"/avatars\";\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'GET'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {}; // authentication apiKeyCookie required\n          // authentication authCookie required\n\n          if (featured !== undefined) {\n            localVarQueryParameter['featured'] = featured;\n          }\n\n          if (sort !== undefined) {\n            localVarQueryParameter['sort'] = sort;\n          }\n\n          if (user !== undefined) {\n            localVarQueryParameter['user'] = user;\n          }\n\n          if (userId !== undefined) {\n            localVarQueryParameter['userId'] = userId;\n          }\n\n          if (n !== undefined) {\n            localVarQueryParameter['n'] = n;\n          }\n\n          if (order !== undefined) {\n            localVarQueryParameter['order'] = order;\n          }\n\n          if (offset !== undefined) {\n            localVarQueryParameter['offset'] = offset;\n          }\n\n          if (tag !== undefined) {\n            localVarQueryParameter['tag'] = tag;\n          }\n\n          if (notag !== undefined) {\n            localVarQueryParameter['notag'] = notag;\n          }\n\n          if (releaseStatus !== undefined) {\n            localVarQueryParameter['releaseStatus'] = releaseStatus;\n          }\n\n          if (maxUnityVersion !== undefined) {\n            localVarQueryParameter['maxUnityVersion'] = maxUnityVersion;\n          }\n\n          if (minUnityVersion !== undefined) {\n            localVarQueryParameter['minUnityVersion'] = minUnityVersion;\n          }\n\n          if (platform !== undefined) {\n            localVarQueryParameter['platform'] = platform;\n          }\n\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    },\n\n    /**\n     * Switches into that avatar.\n     * @summary Select Avatar\n     * @param {string} avatarId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    selectAvatar: function (avatarId, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          // verify required parameter 'avatarId' is not null or undefined\n          common_1.assertParamExists('selectAvatar', 'avatarId', avatarId);\n          localVarPath = \"/avatars/{avatarId}/select\".replace(\"{\" + \"avatarId\" + \"}\", encodeURIComponent(String(avatarId)));\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'PUT'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {}; // authentication apiKeyCookie required\n          // authentication authCookie required\n\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    },\n\n    /**\n     * Switches into that avatar as your fallback avatar.\n     * @summary Select Fallback Avatar\n     * @param {string} avatarId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    selectFallbackAvatar: function (avatarId, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          // verify required parameter 'avatarId' is not null or undefined\n          common_1.assertParamExists('selectFallbackAvatar', 'avatarId', avatarId);\n          localVarPath = \"/avatars/{avatarId}/selectFallback\".replace(\"{\" + \"avatarId\" + \"}\", encodeURIComponent(String(avatarId)));\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'PUT'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {}; // authentication apiKeyCookie required\n          // authentication authCookie required\n\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    },\n\n    /**\n     * Update information about a specific avatar.\n     * @summary Update Avatar\n     * @param {string} avatarId\n     * @param {UpdateAvatarRequest} [updateAvatarRequest]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateAvatar: function (avatarId, updateAvatarRequest, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          // verify required parameter 'avatarId' is not null or undefined\n          common_1.assertParamExists('updateAvatar', 'avatarId', avatarId);\n          localVarPath = \"/avatars/{avatarId}\".replace(\"{\" + \"avatarId\" + \"}\", encodeURIComponent(String(avatarId)));\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'PUT'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {}; // authentication apiKeyCookie required\n          // authentication authCookie required\n\n          localVarHeaderParameter['Content-Type'] = 'application/json';\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          localVarRequestOptions.data = common_1.serializeDataIfNeeded(updateAvatarRequest, localVarRequestOptions, configuration);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    }\n  };\n};\n/**\n * AvatarsApi - functional programming interface\n * @export\n */\n\n\nexports.AvatarsApiFp = function (configuration) {\n  var localVarAxiosParamCreator = exports.AvatarsApiAxiosParamCreator(configuration);\n  return {\n    /**\n     * Create an avatar. It\\'s possible to optionally specify a ID if you want a custom one. Attempting to create an Avatar with an already claimed ID will result in a DB error.\n     * @summary Create Avatar\n     * @param {CreateAvatarRequest} [createAvatarRequest]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createAvatar: function (createAvatarRequest, options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.createAvatar(createAvatarRequest, options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    },\n\n    /**\n     * Delete an avatar. Notice an avatar is never fully \\\"deleted\\\", only its ReleaseStatus is set to \\\"hidden\\\" and the linked Files are deleted. The AvatarID is permanently reserved.\n     * @summary Delete Avatar\n     * @param {string} avatarId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteAvatar: function (avatarId, options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.deleteAvatar(avatarId, options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    },\n\n    /**\n     * Get information about a specific Avatar.\n     * @summary Get Avatar\n     * @param {string} avatarId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getAvatar: function (avatarId, options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.getAvatar(avatarId, options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    },\n\n    /**\n     * Search and list favorited avatars by query filters.\n     * @summary List Favorited Avatars\n     * @param {boolean} [featured] Filters on featured results.\n     * @param {'popularity' | 'heat' | 'trust' | 'shuffle' | 'random' | 'favorites' | 'reportScore' | 'reportCount' | 'publicationDate' | 'labsPublicationDate' | 'created' | '_created_at' | 'updated' | '_updated_at' | 'order' | 'relevance' | 'magic' | 'name'} [sort]\n     * @param {number} [n] The number of objects to return.\n     * @param {'ascending' | 'descending'} [order]\n     * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n     * @param {string} [search] Filters by world name.\n     * @param {string} [tag] Tags to include (comma-separated). Any of the tags needs to be present.\n     * @param {string} [notag] Tags to exclude (comma-separated).\n     * @param {'public' | 'private' | 'hidden' | 'all'} [releaseStatus] Filter by ReleaseStatus.\n     * @param {string} [maxUnityVersion] The maximum Unity version supported by the asset.\n     * @param {string} [minUnityVersion] The minimum Unity version supported by the asset.\n     * @param {string} [platform] The platform the asset supports.\n     * @param {string} [userId] Target user to see information on, admin-only.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getFavoritedAvatars: function (featured, sort, n, order, offset, search, tag, notag, releaseStatus, maxUnityVersion, minUnityVersion, platform, userId, options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.getFavoritedAvatars(featured, sort, n, order, offset, search, tag, notag, releaseStatus, maxUnityVersion, minUnityVersion, platform, userId, options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    },\n\n    /**\n     * Search and list avatars by query filters. You can only search your own or featured avatars. It is not possible as a normal user to search other peoples avatars.\n     * @summary Search Avatars\n     * @param {boolean} [featured] Filters on featured results.\n     * @param {'popularity' | 'heat' | 'trust' | 'shuffle' | 'random' | 'favorites' | 'reportScore' | 'reportCount' | 'publicationDate' | 'labsPublicationDate' | 'created' | '_created_at' | 'updated' | '_updated_at' | 'order' | 'relevance' | 'magic' | 'name'} [sort]\n     * @param {'me'} [user] Set to &#x60;me&#x60; for searching own avatars.\n     * @param {string} [userId] Filter by UserID.\n     * @param {number} [n] The number of objects to return.\n     * @param {'ascending' | 'descending'} [order]\n     * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n     * @param {string} [tag] Tags to include (comma-separated). Any of the tags needs to be present.\n     * @param {string} [notag] Tags to exclude (comma-separated).\n     * @param {'public' | 'private' | 'hidden' | 'all'} [releaseStatus] Filter by ReleaseStatus.\n     * @param {string} [maxUnityVersion] The maximum Unity version supported by the asset.\n     * @param {string} [minUnityVersion] The minimum Unity version supported by the asset.\n     * @param {string} [platform] The platform the asset supports.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchAvatars: function (featured, sort, user, userId, n, order, offset, tag, notag, releaseStatus, maxUnityVersion, minUnityVersion, platform, options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.searchAvatars(featured, sort, user, userId, n, order, offset, tag, notag, releaseStatus, maxUnityVersion, minUnityVersion, platform, options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    },\n\n    /**\n     * Switches into that avatar.\n     * @summary Select Avatar\n     * @param {string} avatarId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    selectAvatar: function (avatarId, options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.selectAvatar(avatarId, options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    },\n\n    /**\n     * Switches into that avatar as your fallback avatar.\n     * @summary Select Fallback Avatar\n     * @param {string} avatarId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    selectFallbackAvatar: function (avatarId, options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.selectFallbackAvatar(avatarId, options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    },\n\n    /**\n     * Update information about a specific avatar.\n     * @summary Update Avatar\n     * @param {string} avatarId\n     * @param {UpdateAvatarRequest} [updateAvatarRequest]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateAvatar: function (avatarId, updateAvatarRequest, options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.updateAvatar(avatarId, updateAvatarRequest, options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    }\n  };\n};\n/**\n * AvatarsApi - factory interface\n * @export\n */\n\n\nexports.AvatarsApiFactory = function (configuration, basePath, axios) {\n  var localVarFp = exports.AvatarsApiFp(configuration);\n  return {\n    /**\n     * Create an avatar. It\\'s possible to optionally specify a ID if you want a custom one. Attempting to create an Avatar with an already claimed ID will result in a DB error.\n     * @summary Create Avatar\n     * @param {CreateAvatarRequest} [createAvatarRequest]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createAvatar: function (createAvatarRequest, options) {\n      return localVarFp.createAvatar(createAvatarRequest, options).then(function (request) {\n        return request(axios, basePath);\n      });\n    },\n\n    /**\n     * Delete an avatar. Notice an avatar is never fully \\\"deleted\\\", only its ReleaseStatus is set to \\\"hidden\\\" and the linked Files are deleted. The AvatarID is permanently reserved.\n     * @summary Delete Avatar\n     * @param {string} avatarId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteAvatar: function (avatarId, options) {\n      return localVarFp.deleteAvatar(avatarId, options).then(function (request) {\n        return request(axios, basePath);\n      });\n    },\n\n    /**\n     * Get information about a specific Avatar.\n     * @summary Get Avatar\n     * @param {string} avatarId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getAvatar: function (avatarId, options) {\n      return localVarFp.getAvatar(avatarId, options).then(function (request) {\n        return request(axios, basePath);\n      });\n    },\n\n    /**\n     * Search and list favorited avatars by query filters.\n     * @summary List Favorited Avatars\n     * @param {boolean} [featured] Filters on featured results.\n     * @param {'popularity' | 'heat' | 'trust' | 'shuffle' | 'random' | 'favorites' | 'reportScore' | 'reportCount' | 'publicationDate' | 'labsPublicationDate' | 'created' | '_created_at' | 'updated' | '_updated_at' | 'order' | 'relevance' | 'magic' | 'name'} [sort]\n     * @param {number} [n] The number of objects to return.\n     * @param {'ascending' | 'descending'} [order]\n     * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n     * @param {string} [search] Filters by world name.\n     * @param {string} [tag] Tags to include (comma-separated). Any of the tags needs to be present.\n     * @param {string} [notag] Tags to exclude (comma-separated).\n     * @param {'public' | 'private' | 'hidden' | 'all'} [releaseStatus] Filter by ReleaseStatus.\n     * @param {string} [maxUnityVersion] The maximum Unity version supported by the asset.\n     * @param {string} [minUnityVersion] The minimum Unity version supported by the asset.\n     * @param {string} [platform] The platform the asset supports.\n     * @param {string} [userId] Target user to see information on, admin-only.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getFavoritedAvatars: function (featured, sort, n, order, offset, search, tag, notag, releaseStatus, maxUnityVersion, minUnityVersion, platform, userId, options) {\n      return localVarFp.getFavoritedAvatars(featured, sort, n, order, offset, search, tag, notag, releaseStatus, maxUnityVersion, minUnityVersion, platform, userId, options).then(function (request) {\n        return request(axios, basePath);\n      });\n    },\n\n    /**\n     * Search and list avatars by query filters. You can only search your own or featured avatars. It is not possible as a normal user to search other peoples avatars.\n     * @summary Search Avatars\n     * @param {boolean} [featured] Filters on featured results.\n     * @param {'popularity' | 'heat' | 'trust' | 'shuffle' | 'random' | 'favorites' | 'reportScore' | 'reportCount' | 'publicationDate' | 'labsPublicationDate' | 'created' | '_created_at' | 'updated' | '_updated_at' | 'order' | 'relevance' | 'magic' | 'name'} [sort]\n     * @param {'me'} [user] Set to &#x60;me&#x60; for searching own avatars.\n     * @param {string} [userId] Filter by UserID.\n     * @param {number} [n] The number of objects to return.\n     * @param {'ascending' | 'descending'} [order]\n     * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n     * @param {string} [tag] Tags to include (comma-separated). Any of the tags needs to be present.\n     * @param {string} [notag] Tags to exclude (comma-separated).\n     * @param {'public' | 'private' | 'hidden' | 'all'} [releaseStatus] Filter by ReleaseStatus.\n     * @param {string} [maxUnityVersion] The maximum Unity version supported by the asset.\n     * @param {string} [minUnityVersion] The minimum Unity version supported by the asset.\n     * @param {string} [platform] The platform the asset supports.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchAvatars: function (featured, sort, user, userId, n, order, offset, tag, notag, releaseStatus, maxUnityVersion, minUnityVersion, platform, options) {\n      return localVarFp.searchAvatars(featured, sort, user, userId, n, order, offset, tag, notag, releaseStatus, maxUnityVersion, minUnityVersion, platform, options).then(function (request) {\n        return request(axios, basePath);\n      });\n    },\n\n    /**\n     * Switches into that avatar.\n     * @summary Select Avatar\n     * @param {string} avatarId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    selectAvatar: function (avatarId, options) {\n      return localVarFp.selectAvatar(avatarId, options).then(function (request) {\n        return request(axios, basePath);\n      });\n    },\n\n    /**\n     * Switches into that avatar as your fallback avatar.\n     * @summary Select Fallback Avatar\n     * @param {string} avatarId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    selectFallbackAvatar: function (avatarId, options) {\n      return localVarFp.selectFallbackAvatar(avatarId, options).then(function (request) {\n        return request(axios, basePath);\n      });\n    },\n\n    /**\n     * Update information about a specific avatar.\n     * @summary Update Avatar\n     * @param {string} avatarId\n     * @param {UpdateAvatarRequest} [updateAvatarRequest]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateAvatar: function (avatarId, updateAvatarRequest, options) {\n      return localVarFp.updateAvatar(avatarId, updateAvatarRequest, options).then(function (request) {\n        return request(axios, basePath);\n      });\n    }\n  };\n};\n/**\n * AvatarsApi - object-oriented interface\n * @export\n * @class AvatarsApi\n * @extends {BaseAPI}\n */\n\n\nvar AvatarsApi =\n/** @class */\nfunction (_super) {\n  __extends(AvatarsApi, _super);\n\n  function AvatarsApi() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * Create an avatar. It\\'s possible to optionally specify a ID if you want a custom one. Attempting to create an Avatar with an already claimed ID will result in a DB error.\n   * @summary Create Avatar\n   * @param {CreateAvatarRequest} [createAvatarRequest]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof AvatarsApi\n   */\n\n\n  AvatarsApi.prototype.createAvatar = function (createAvatarRequest, options) {\n    var _this = this;\n\n    return exports.AvatarsApiFp(this.configuration).createAvatar(createAvatarRequest, options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n  /**\n   * Delete an avatar. Notice an avatar is never fully \\\"deleted\\\", only its ReleaseStatus is set to \\\"hidden\\\" and the linked Files are deleted. The AvatarID is permanently reserved.\n   * @summary Delete Avatar\n   * @param {string} avatarId\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof AvatarsApi\n   */\n\n\n  AvatarsApi.prototype.deleteAvatar = function (avatarId, options) {\n    var _this = this;\n\n    return exports.AvatarsApiFp(this.configuration).deleteAvatar(avatarId, options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n  /**\n   * Get information about a specific Avatar.\n   * @summary Get Avatar\n   * @param {string} avatarId\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof AvatarsApi\n   */\n\n\n  AvatarsApi.prototype.getAvatar = function (avatarId, options) {\n    var _this = this;\n\n    return exports.AvatarsApiFp(this.configuration).getAvatar(avatarId, options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n  /**\n   * Search and list favorited avatars by query filters.\n   * @summary List Favorited Avatars\n   * @param {boolean} [featured] Filters on featured results.\n   * @param {'popularity' | 'heat' | 'trust' | 'shuffle' | 'random' | 'favorites' | 'reportScore' | 'reportCount' | 'publicationDate' | 'labsPublicationDate' | 'created' | '_created_at' | 'updated' | '_updated_at' | 'order' | 'relevance' | 'magic' | 'name'} [sort]\n   * @param {number} [n] The number of objects to return.\n   * @param {'ascending' | 'descending'} [order]\n   * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n   * @param {string} [search] Filters by world name.\n   * @param {string} [tag] Tags to include (comma-separated). Any of the tags needs to be present.\n   * @param {string} [notag] Tags to exclude (comma-separated).\n   * @param {'public' | 'private' | 'hidden' | 'all'} [releaseStatus] Filter by ReleaseStatus.\n   * @param {string} [maxUnityVersion] The maximum Unity version supported by the asset.\n   * @param {string} [minUnityVersion] The minimum Unity version supported by the asset.\n   * @param {string} [platform] The platform the asset supports.\n   * @param {string} [userId] Target user to see information on, admin-only.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof AvatarsApi\n   */\n\n\n  AvatarsApi.prototype.getFavoritedAvatars = function (featured, sort, n, order, offset, search, tag, notag, releaseStatus, maxUnityVersion, minUnityVersion, platform, userId, options) {\n    var _this = this;\n\n    return exports.AvatarsApiFp(this.configuration).getFavoritedAvatars(featured, sort, n, order, offset, search, tag, notag, releaseStatus, maxUnityVersion, minUnityVersion, platform, userId, options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n  /**\n   * Search and list avatars by query filters. You can only search your own or featured avatars. It is not possible as a normal user to search other peoples avatars.\n   * @summary Search Avatars\n   * @param {boolean} [featured] Filters on featured results.\n   * @param {'popularity' | 'heat' | 'trust' | 'shuffle' | 'random' | 'favorites' | 'reportScore' | 'reportCount' | 'publicationDate' | 'labsPublicationDate' | 'created' | '_created_at' | 'updated' | '_updated_at' | 'order' | 'relevance' | 'magic' | 'name'} [sort]\n   * @param {'me'} [user] Set to &#x60;me&#x60; for searching own avatars.\n   * @param {string} [userId] Filter by UserID.\n   * @param {number} [n] The number of objects to return.\n   * @param {'ascending' | 'descending'} [order]\n   * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n   * @param {string} [tag] Tags to include (comma-separated). Any of the tags needs to be present.\n   * @param {string} [notag] Tags to exclude (comma-separated).\n   * @param {'public' | 'private' | 'hidden' | 'all'} [releaseStatus] Filter by ReleaseStatus.\n   * @param {string} [maxUnityVersion] The maximum Unity version supported by the asset.\n   * @param {string} [minUnityVersion] The minimum Unity version supported by the asset.\n   * @param {string} [platform] The platform the asset supports.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof AvatarsApi\n   */\n\n\n  AvatarsApi.prototype.searchAvatars = function (featured, sort, user, userId, n, order, offset, tag, notag, releaseStatus, maxUnityVersion, minUnityVersion, platform, options) {\n    var _this = this;\n\n    return exports.AvatarsApiFp(this.configuration).searchAvatars(featured, sort, user, userId, n, order, offset, tag, notag, releaseStatus, maxUnityVersion, minUnityVersion, platform, options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n  /**\n   * Switches into that avatar.\n   * @summary Select Avatar\n   * @param {string} avatarId\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof AvatarsApi\n   */\n\n\n  AvatarsApi.prototype.selectAvatar = function (avatarId, options) {\n    var _this = this;\n\n    return exports.AvatarsApiFp(this.configuration).selectAvatar(avatarId, options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n  /**\n   * Switches into that avatar as your fallback avatar.\n   * @summary Select Fallback Avatar\n   * @param {string} avatarId\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof AvatarsApi\n   */\n\n\n  AvatarsApi.prototype.selectFallbackAvatar = function (avatarId, options) {\n    var _this = this;\n\n    return exports.AvatarsApiFp(this.configuration).selectFallbackAvatar(avatarId, options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n  /**\n   * Update information about a specific avatar.\n   * @summary Update Avatar\n   * @param {string} avatarId\n   * @param {UpdateAvatarRequest} [updateAvatarRequest]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof AvatarsApi\n   */\n\n\n  AvatarsApi.prototype.updateAvatar = function (avatarId, updateAvatarRequest, options) {\n    var _this = this;\n\n    return exports.AvatarsApiFp(this.configuration).updateAvatar(avatarId, updateAvatarRequest, options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n\n  return AvatarsApi;\n}(base_1.BaseAPI);\n\nexports.AvatarsApi = AvatarsApi;\n/**\n * EconomyApi - axios parameter creator\n * @export\n */\n\nexports.EconomyApiAxiosParamCreator = function (configuration) {\n  var _this = this;\n\n  return {\n    /**\n     * Get a list of all current user subscriptions.\n     * @summary Get Current Subscriptions\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getCurrentSubscriptions: function (options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          localVarPath = \"/auth/user/subscription\";\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'GET'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {}; // authentication apiKeyCookie required\n          // authentication authCookie required\n\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    },\n\n    /**\n     * Get a single License Group by given ID.\n     * @summary Get License Group\n     * @param {string} licenseGroupId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getLicenseGroup: function (licenseGroupId, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          // verify required parameter 'licenseGroupId' is not null or undefined\n          common_1.assertParamExists('getLicenseGroup', 'licenseGroupId', licenseGroupId);\n          localVarPath = \"/licenseGroups/{licenseGroupId}\".replace(\"{\" + \"licenseGroupId\" + \"}\", encodeURIComponent(String(licenseGroupId)));\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'GET'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {}; // authentication apiKeyCookie required\n          // authentication authCookie required\n\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    },\n\n    /**\n     * Get a single Steam transactions by ID. This returns the exact same information as `getSteamTransactions`, so no point in using this endpoint.\n     * @summary Get Steam Transaction\n     * @param {string} transactionId\n     * @param {*} [options] Override http request option.\n     * @deprecated\n     * @throws {RequiredError}\n     */\n    getSteamTransaction: function (transactionId, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          // verify required parameter 'transactionId' is not null or undefined\n          common_1.assertParamExists('getSteamTransaction', 'transactionId', transactionId);\n          localVarPath = \"/Steam/transactions/{transactionId}\".replace(\"{\" + \"transactionId\" + \"}\", encodeURIComponent(String(transactionId)));\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'GET'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {}; // authentication apiKeyCookie required\n          // authentication authCookie required\n\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    },\n\n    /**\n     * Get all own Steam transactions.\n     * @summary List Steam Transactions\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getSteamTransactions: function (options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          localVarPath = \"/Steam/transactions\";\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'GET'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {}; // authentication apiKeyCookie required\n          // authentication authCookie required\n\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    },\n\n    /**\n     * List all existing Subscriptions. For example, \\\"vrchatplus-monthly\\\" and \\\"vrchatplus-yearly\\\".\n     * @summary List Subscriptions\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getSubscriptions: function (options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          localVarPath = \"/subscriptions\";\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'GET'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {}; // authentication apiKeyCookie required\n          // authentication authCookie required\n\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    }\n  };\n};\n/**\n * EconomyApi - functional programming interface\n * @export\n */\n\n\nexports.EconomyApiFp = function (configuration) {\n  var localVarAxiosParamCreator = exports.EconomyApiAxiosParamCreator(configuration);\n  return {\n    /**\n     * Get a list of all current user subscriptions.\n     * @summary Get Current Subscriptions\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getCurrentSubscriptions: function (options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.getCurrentSubscriptions(options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    },\n\n    /**\n     * Get a single License Group by given ID.\n     * @summary Get License Group\n     * @param {string} licenseGroupId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getLicenseGroup: function (licenseGroupId, options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.getLicenseGroup(licenseGroupId, options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    },\n\n    /**\n     * Get a single Steam transactions by ID. This returns the exact same information as `getSteamTransactions`, so no point in using this endpoint.\n     * @summary Get Steam Transaction\n     * @param {string} transactionId\n     * @param {*} [options] Override http request option.\n     * @deprecated\n     * @throws {RequiredError}\n     */\n    getSteamTransaction: function (transactionId, options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.getSteamTransaction(transactionId, options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    },\n\n    /**\n     * Get all own Steam transactions.\n     * @summary List Steam Transactions\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getSteamTransactions: function (options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.getSteamTransactions(options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    },\n\n    /**\n     * List all existing Subscriptions. For example, \\\"vrchatplus-monthly\\\" and \\\"vrchatplus-yearly\\\".\n     * @summary List Subscriptions\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getSubscriptions: function (options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.getSubscriptions(options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    }\n  };\n};\n/**\n * EconomyApi - factory interface\n * @export\n */\n\n\nexports.EconomyApiFactory = function (configuration, basePath, axios) {\n  var localVarFp = exports.EconomyApiFp(configuration);\n  return {\n    /**\n     * Get a list of all current user subscriptions.\n     * @summary Get Current Subscriptions\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getCurrentSubscriptions: function (options) {\n      return localVarFp.getCurrentSubscriptions(options).then(function (request) {\n        return request(axios, basePath);\n      });\n    },\n\n    /**\n     * Get a single License Group by given ID.\n     * @summary Get License Group\n     * @param {string} licenseGroupId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getLicenseGroup: function (licenseGroupId, options) {\n      return localVarFp.getLicenseGroup(licenseGroupId, options).then(function (request) {\n        return request(axios, basePath);\n      });\n    },\n\n    /**\n     * Get a single Steam transactions by ID. This returns the exact same information as `getSteamTransactions`, so no point in using this endpoint.\n     * @summary Get Steam Transaction\n     * @param {string} transactionId\n     * @param {*} [options] Override http request option.\n     * @deprecated\n     * @throws {RequiredError}\n     */\n    getSteamTransaction: function (transactionId, options) {\n      return localVarFp.getSteamTransaction(transactionId, options).then(function (request) {\n        return request(axios, basePath);\n      });\n    },\n\n    /**\n     * Get all own Steam transactions.\n     * @summary List Steam Transactions\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getSteamTransactions: function (options) {\n      return localVarFp.getSteamTransactions(options).then(function (request) {\n        return request(axios, basePath);\n      });\n    },\n\n    /**\n     * List all existing Subscriptions. For example, \\\"vrchatplus-monthly\\\" and \\\"vrchatplus-yearly\\\".\n     * @summary List Subscriptions\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getSubscriptions: function (options) {\n      return localVarFp.getSubscriptions(options).then(function (request) {\n        return request(axios, basePath);\n      });\n    }\n  };\n};\n/**\n * EconomyApi - object-oriented interface\n * @export\n * @class EconomyApi\n * @extends {BaseAPI}\n */\n\n\nvar EconomyApi =\n/** @class */\nfunction (_super) {\n  __extends(EconomyApi, _super);\n\n  function EconomyApi() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * Get a list of all current user subscriptions.\n   * @summary Get Current Subscriptions\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof EconomyApi\n   */\n\n\n  EconomyApi.prototype.getCurrentSubscriptions = function (options) {\n    var _this = this;\n\n    return exports.EconomyApiFp(this.configuration).getCurrentSubscriptions(options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n  /**\n   * Get a single License Group by given ID.\n   * @summary Get License Group\n   * @param {string} licenseGroupId\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof EconomyApi\n   */\n\n\n  EconomyApi.prototype.getLicenseGroup = function (licenseGroupId, options) {\n    var _this = this;\n\n    return exports.EconomyApiFp(this.configuration).getLicenseGroup(licenseGroupId, options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n  /**\n   * Get a single Steam transactions by ID. This returns the exact same information as `getSteamTransactions`, so no point in using this endpoint.\n   * @summary Get Steam Transaction\n   * @param {string} transactionId\n   * @param {*} [options] Override http request option.\n   * @deprecated\n   * @throws {RequiredError}\n   * @memberof EconomyApi\n   */\n\n\n  EconomyApi.prototype.getSteamTransaction = function (transactionId, options) {\n    var _this = this;\n\n    return exports.EconomyApiFp(this.configuration).getSteamTransaction(transactionId, options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n  /**\n   * Get all own Steam transactions.\n   * @summary List Steam Transactions\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof EconomyApi\n   */\n\n\n  EconomyApi.prototype.getSteamTransactions = function (options) {\n    var _this = this;\n\n    return exports.EconomyApiFp(this.configuration).getSteamTransactions(options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n  /**\n   * List all existing Subscriptions. For example, \\\"vrchatplus-monthly\\\" and \\\"vrchatplus-yearly\\\".\n   * @summary List Subscriptions\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof EconomyApi\n   */\n\n\n  EconomyApi.prototype.getSubscriptions = function (options) {\n    var _this = this;\n\n    return exports.EconomyApiFp(this.configuration).getSubscriptions(options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n\n  return EconomyApi;\n}(base_1.BaseAPI);\n\nexports.EconomyApi = EconomyApi;\n/**\n * FavoritesApi - axios parameter creator\n * @export\n */\n\nexports.FavoritesApiAxiosParamCreator = function (configuration) {\n  var _this = this;\n\n  return {\n    /**\n     * Add a new favorite.  Friend groups are named `group_0` through `group_3`. Avatar and World groups are named `avatars1` to `avatars4` and `worlds1` to `worlds4`.  You cannot add people whom you are not friends with to your friends list. Destroying a friendship removes the person as favorite on both sides.\n     * @summary Add Favorite\n     * @param {AddFavoriteRequest} [addFavoriteRequest]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    addFavorite: function (addFavoriteRequest, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          localVarPath = \"/favorites\";\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'POST'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {}; // authentication apiKeyCookie required\n          // authentication authCookie required\n\n          localVarHeaderParameter['Content-Type'] = 'application/json';\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          localVarRequestOptions.data = common_1.serializeDataIfNeeded(addFavoriteRequest, localVarRequestOptions, configuration);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    },\n\n    /**\n     * Clear ALL contents of a specific favorite group.\n     * @summary Clear Favorite Group\n     * @param {'world' | 'friend' | 'avatar'} favoriteGroupType The type of group to fetch, must be a valid FavoriteType.\n     * @param {string} favoriteGroupName\n     * @param {string} userId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    clearFavoriteGroup: function (favoriteGroupType, favoriteGroupName, userId, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          // verify required parameter 'favoriteGroupType' is not null or undefined\n          common_1.assertParamExists('clearFavoriteGroup', 'favoriteGroupType', favoriteGroupType); // verify required parameter 'favoriteGroupName' is not null or undefined\n\n          common_1.assertParamExists('clearFavoriteGroup', 'favoriteGroupName', favoriteGroupName); // verify required parameter 'userId' is not null or undefined\n\n          common_1.assertParamExists('clearFavoriteGroup', 'userId', userId);\n          localVarPath = \"/favorite/group/{favoriteGroupType}/{favoriteGroupName}/{userId}\".replace(\"{\" + \"favoriteGroupType\" + \"}\", encodeURIComponent(String(favoriteGroupType))).replace(\"{\" + \"favoriteGroupName\" + \"}\", encodeURIComponent(String(favoriteGroupName))).replace(\"{\" + \"userId\" + \"}\", encodeURIComponent(String(userId)));\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'DELETE'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {}; // authentication apiKeyCookie required\n          // authentication authCookie required\n\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    },\n\n    /**\n     * Return information about a specific Favorite.\n     * @summary Show Favorite\n     * @param {string} favoriteId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getFavorite: function (favoriteId, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          // verify required parameter 'favoriteId' is not null or undefined\n          common_1.assertParamExists('getFavorite', 'favoriteId', favoriteId);\n          localVarPath = \"/favorites/{favoriteId}\".replace(\"{\" + \"favoriteId\" + \"}\", encodeURIComponent(String(favoriteId)));\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'GET'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {}; // authentication apiKeyCookie required\n          // authentication authCookie required\n\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    },\n\n    /**\n     * Fetch information about a specific favorite group.\n     * @summary Show Favorite Group\n     * @param {'world' | 'friend' | 'avatar'} favoriteGroupType The type of group to fetch, must be a valid FavoriteType.\n     * @param {string} favoriteGroupName\n     * @param {string} userId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getFavoriteGroup: function (favoriteGroupType, favoriteGroupName, userId, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          // verify required parameter 'favoriteGroupType' is not null or undefined\n          common_1.assertParamExists('getFavoriteGroup', 'favoriteGroupType', favoriteGroupType); // verify required parameter 'favoriteGroupName' is not null or undefined\n\n          common_1.assertParamExists('getFavoriteGroup', 'favoriteGroupName', favoriteGroupName); // verify required parameter 'userId' is not null or undefined\n\n          common_1.assertParamExists('getFavoriteGroup', 'userId', userId);\n          localVarPath = \"/favorite/group/{favoriteGroupType}/{favoriteGroupName}/{userId}\".replace(\"{\" + \"favoriteGroupType\" + \"}\", encodeURIComponent(String(favoriteGroupType))).replace(\"{\" + \"favoriteGroupName\" + \"}\", encodeURIComponent(String(favoriteGroupName))).replace(\"{\" + \"userId\" + \"}\", encodeURIComponent(String(userId)));\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'GET'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {}; // authentication apiKeyCookie required\n          // authentication authCookie required\n\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    },\n\n    /**\n     * Return a list of favorite groups owned by a user. Returns the same information as `getFavoriteGroups`.\n     * @summary List Favorite Groups\n     * @param {number} [n] The number of objects to return.\n     * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n     * @param {string} [ownerId] The owner of whoms favorite groups to return. Must be a UserID.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getFavoriteGroups: function (n, offset, ownerId, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          localVarPath = \"/favorite/groups\";\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'GET'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {}; // authentication apiKeyCookie required\n          // authentication authCookie required\n\n          if (n !== undefined) {\n            localVarQueryParameter['n'] = n;\n          }\n\n          if (offset !== undefined) {\n            localVarQueryParameter['offset'] = offset;\n          }\n\n          if (ownerId !== undefined) {\n            localVarQueryParameter['ownerId'] = ownerId;\n          }\n\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    },\n\n    /**\n     * Returns a list of favorites.\n     * @summary List Favorites\n     * @param {number} [n] The number of objects to return.\n     * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n     * @param {string} [type] The type of favorites to return, FavoriteType.\n     * @param {string} [tag] Tags to include (comma-separated). Any of the tags needs to be present.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getFavorites: function (n, offset, type, tag, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          localVarPath = \"/favorites\";\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'GET'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {}; // authentication apiKeyCookie required\n          // authentication authCookie required\n\n          if (n !== undefined) {\n            localVarQueryParameter['n'] = n;\n          }\n\n          if (offset !== undefined) {\n            localVarQueryParameter['offset'] = offset;\n          }\n\n          if (type !== undefined) {\n            localVarQueryParameter['type'] = type;\n          }\n\n          if (tag !== undefined) {\n            localVarQueryParameter['tag'] = tag;\n          }\n\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    },\n\n    /**\n     * Remove a favorite from your favorites list.\n     * @summary Remove Favorite\n     * @param {string} favoriteId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    removeFavorite: function (favoriteId, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          // verify required parameter 'favoriteId' is not null or undefined\n          common_1.assertParamExists('removeFavorite', 'favoriteId', favoriteId);\n          localVarPath = \"/favorites/{favoriteId}\".replace(\"{\" + \"favoriteId\" + \"}\", encodeURIComponent(String(favoriteId)));\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'DELETE'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {}; // authentication apiKeyCookie required\n          // authentication authCookie required\n\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    },\n\n    /**\n     * Update information about a specific favorite group.\n     * @summary Update Favorite Group\n     * @param {'world' | 'friend' | 'avatar'} favoriteGroupType The type of group to fetch, must be a valid FavoriteType.\n     * @param {string} favoriteGroupName\n     * @param {string} userId\n     * @param {UpdateFavoriteGroupRequest} [updateFavoriteGroupRequest]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateFavoriteGroup: function (favoriteGroupType, favoriteGroupName, userId, updateFavoriteGroupRequest, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          // verify required parameter 'favoriteGroupType' is not null or undefined\n          common_1.assertParamExists('updateFavoriteGroup', 'favoriteGroupType', favoriteGroupType); // verify required parameter 'favoriteGroupName' is not null or undefined\n\n          common_1.assertParamExists('updateFavoriteGroup', 'favoriteGroupName', favoriteGroupName); // verify required parameter 'userId' is not null or undefined\n\n          common_1.assertParamExists('updateFavoriteGroup', 'userId', userId);\n          localVarPath = \"/favorite/group/{favoriteGroupType}/{favoriteGroupName}/{userId}\".replace(\"{\" + \"favoriteGroupType\" + \"}\", encodeURIComponent(String(favoriteGroupType))).replace(\"{\" + \"favoriteGroupName\" + \"}\", encodeURIComponent(String(favoriteGroupName))).replace(\"{\" + \"userId\" + \"}\", encodeURIComponent(String(userId)));\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'PUT'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {}; // authentication apiKeyCookie required\n          // authentication authCookie required\n\n          localVarHeaderParameter['Content-Type'] = 'application/json';\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          localVarRequestOptions.data = common_1.serializeDataIfNeeded(updateFavoriteGroupRequest, localVarRequestOptions, configuration);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    }\n  };\n};\n/**\n * FavoritesApi - functional programming interface\n * @export\n */\n\n\nexports.FavoritesApiFp = function (configuration) {\n  var localVarAxiosParamCreator = exports.FavoritesApiAxiosParamCreator(configuration);\n  return {\n    /**\n     * Add a new favorite.  Friend groups are named `group_0` through `group_3`. Avatar and World groups are named `avatars1` to `avatars4` and `worlds1` to `worlds4`.  You cannot add people whom you are not friends with to your friends list. Destroying a friendship removes the person as favorite on both sides.\n     * @summary Add Favorite\n     * @param {AddFavoriteRequest} [addFavoriteRequest]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    addFavorite: function (addFavoriteRequest, options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.addFavorite(addFavoriteRequest, options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    },\n\n    /**\n     * Clear ALL contents of a specific favorite group.\n     * @summary Clear Favorite Group\n     * @param {'world' | 'friend' | 'avatar'} favoriteGroupType The type of group to fetch, must be a valid FavoriteType.\n     * @param {string} favoriteGroupName\n     * @param {string} userId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    clearFavoriteGroup: function (favoriteGroupType, favoriteGroupName, userId, options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.clearFavoriteGroup(favoriteGroupType, favoriteGroupName, userId, options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    },\n\n    /**\n     * Return information about a specific Favorite.\n     * @summary Show Favorite\n     * @param {string} favoriteId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getFavorite: function (favoriteId, options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.getFavorite(favoriteId, options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    },\n\n    /**\n     * Fetch information about a specific favorite group.\n     * @summary Show Favorite Group\n     * @param {'world' | 'friend' | 'avatar'} favoriteGroupType The type of group to fetch, must be a valid FavoriteType.\n     * @param {string} favoriteGroupName\n     * @param {string} userId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getFavoriteGroup: function (favoriteGroupType, favoriteGroupName, userId, options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.getFavoriteGroup(favoriteGroupType, favoriteGroupName, userId, options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    },\n\n    /**\n     * Return a list of favorite groups owned by a user. Returns the same information as `getFavoriteGroups`.\n     * @summary List Favorite Groups\n     * @param {number} [n] The number of objects to return.\n     * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n     * @param {string} [ownerId] The owner of whoms favorite groups to return. Must be a UserID.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getFavoriteGroups: function (n, offset, ownerId, options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.getFavoriteGroups(n, offset, ownerId, options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    },\n\n    /**\n     * Returns a list of favorites.\n     * @summary List Favorites\n     * @param {number} [n] The number of objects to return.\n     * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n     * @param {string} [type] The type of favorites to return, FavoriteType.\n     * @param {string} [tag] Tags to include (comma-separated). Any of the tags needs to be present.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getFavorites: function (n, offset, type, tag, options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.getFavorites(n, offset, type, tag, options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    },\n\n    /**\n     * Remove a favorite from your favorites list.\n     * @summary Remove Favorite\n     * @param {string} favoriteId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    removeFavorite: function (favoriteId, options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.removeFavorite(favoriteId, options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    },\n\n    /**\n     * Update information about a specific favorite group.\n     * @summary Update Favorite Group\n     * @param {'world' | 'friend' | 'avatar'} favoriteGroupType The type of group to fetch, must be a valid FavoriteType.\n     * @param {string} favoriteGroupName\n     * @param {string} userId\n     * @param {UpdateFavoriteGroupRequest} [updateFavoriteGroupRequest]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateFavoriteGroup: function (favoriteGroupType, favoriteGroupName, userId, updateFavoriteGroupRequest, options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.updateFavoriteGroup(favoriteGroupType, favoriteGroupName, userId, updateFavoriteGroupRequest, options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    }\n  };\n};\n/**\n * FavoritesApi - factory interface\n * @export\n */\n\n\nexports.FavoritesApiFactory = function (configuration, basePath, axios) {\n  var localVarFp = exports.FavoritesApiFp(configuration);\n  return {\n    /**\n     * Add a new favorite.  Friend groups are named `group_0` through `group_3`. Avatar and World groups are named `avatars1` to `avatars4` and `worlds1` to `worlds4`.  You cannot add people whom you are not friends with to your friends list. Destroying a friendship removes the person as favorite on both sides.\n     * @summary Add Favorite\n     * @param {AddFavoriteRequest} [addFavoriteRequest]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    addFavorite: function (addFavoriteRequest, options) {\n      return localVarFp.addFavorite(addFavoriteRequest, options).then(function (request) {\n        return request(axios, basePath);\n      });\n    },\n\n    /**\n     * Clear ALL contents of a specific favorite group.\n     * @summary Clear Favorite Group\n     * @param {'world' | 'friend' | 'avatar'} favoriteGroupType The type of group to fetch, must be a valid FavoriteType.\n     * @param {string} favoriteGroupName\n     * @param {string} userId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    clearFavoriteGroup: function (favoriteGroupType, favoriteGroupName, userId, options) {\n      return localVarFp.clearFavoriteGroup(favoriteGroupType, favoriteGroupName, userId, options).then(function (request) {\n        return request(axios, basePath);\n      });\n    },\n\n    /**\n     * Return information about a specific Favorite.\n     * @summary Show Favorite\n     * @param {string} favoriteId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getFavorite: function (favoriteId, options) {\n      return localVarFp.getFavorite(favoriteId, options).then(function (request) {\n        return request(axios, basePath);\n      });\n    },\n\n    /**\n     * Fetch information about a specific favorite group.\n     * @summary Show Favorite Group\n     * @param {'world' | 'friend' | 'avatar'} favoriteGroupType The type of group to fetch, must be a valid FavoriteType.\n     * @param {string} favoriteGroupName\n     * @param {string} userId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getFavoriteGroup: function (favoriteGroupType, favoriteGroupName, userId, options) {\n      return localVarFp.getFavoriteGroup(favoriteGroupType, favoriteGroupName, userId, options).then(function (request) {\n        return request(axios, basePath);\n      });\n    },\n\n    /**\n     * Return a list of favorite groups owned by a user. Returns the same information as `getFavoriteGroups`.\n     * @summary List Favorite Groups\n     * @param {number} [n] The number of objects to return.\n     * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n     * @param {string} [ownerId] The owner of whoms favorite groups to return. Must be a UserID.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getFavoriteGroups: function (n, offset, ownerId, options) {\n      return localVarFp.getFavoriteGroups(n, offset, ownerId, options).then(function (request) {\n        return request(axios, basePath);\n      });\n    },\n\n    /**\n     * Returns a list of favorites.\n     * @summary List Favorites\n     * @param {number} [n] The number of objects to return.\n     * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n     * @param {string} [type] The type of favorites to return, FavoriteType.\n     * @param {string} [tag] Tags to include (comma-separated). Any of the tags needs to be present.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getFavorites: function (n, offset, type, tag, options) {\n      return localVarFp.getFavorites(n, offset, type, tag, options).then(function (request) {\n        return request(axios, basePath);\n      });\n    },\n\n    /**\n     * Remove a favorite from your favorites list.\n     * @summary Remove Favorite\n     * @param {string} favoriteId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    removeFavorite: function (favoriteId, options) {\n      return localVarFp.removeFavorite(favoriteId, options).then(function (request) {\n        return request(axios, basePath);\n      });\n    },\n\n    /**\n     * Update information about a specific favorite group.\n     * @summary Update Favorite Group\n     * @param {'world' | 'friend' | 'avatar'} favoriteGroupType The type of group to fetch, must be a valid FavoriteType.\n     * @param {string} favoriteGroupName\n     * @param {string} userId\n     * @param {UpdateFavoriteGroupRequest} [updateFavoriteGroupRequest]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateFavoriteGroup: function (favoriteGroupType, favoriteGroupName, userId, updateFavoriteGroupRequest, options) {\n      return localVarFp.updateFavoriteGroup(favoriteGroupType, favoriteGroupName, userId, updateFavoriteGroupRequest, options).then(function (request) {\n        return request(axios, basePath);\n      });\n    }\n  };\n};\n/**\n * FavoritesApi - object-oriented interface\n * @export\n * @class FavoritesApi\n * @extends {BaseAPI}\n */\n\n\nvar FavoritesApi =\n/** @class */\nfunction (_super) {\n  __extends(FavoritesApi, _super);\n\n  function FavoritesApi() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * Add a new favorite.  Friend groups are named `group_0` through `group_3`. Avatar and World groups are named `avatars1` to `avatars4` and `worlds1` to `worlds4`.  You cannot add people whom you are not friends with to your friends list. Destroying a friendship removes the person as favorite on both sides.\n   * @summary Add Favorite\n   * @param {AddFavoriteRequest} [addFavoriteRequest]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof FavoritesApi\n   */\n\n\n  FavoritesApi.prototype.addFavorite = function (addFavoriteRequest, options) {\n    var _this = this;\n\n    return exports.FavoritesApiFp(this.configuration).addFavorite(addFavoriteRequest, options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n  /**\n   * Clear ALL contents of a specific favorite group.\n   * @summary Clear Favorite Group\n   * @param {'world' | 'friend' | 'avatar'} favoriteGroupType The type of group to fetch, must be a valid FavoriteType.\n   * @param {string} favoriteGroupName\n   * @param {string} userId\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof FavoritesApi\n   */\n\n\n  FavoritesApi.prototype.clearFavoriteGroup = function (favoriteGroupType, favoriteGroupName, userId, options) {\n    var _this = this;\n\n    return exports.FavoritesApiFp(this.configuration).clearFavoriteGroup(favoriteGroupType, favoriteGroupName, userId, options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n  /**\n   * Return information about a specific Favorite.\n   * @summary Show Favorite\n   * @param {string} favoriteId\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof FavoritesApi\n   */\n\n\n  FavoritesApi.prototype.getFavorite = function (favoriteId, options) {\n    var _this = this;\n\n    return exports.FavoritesApiFp(this.configuration).getFavorite(favoriteId, options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n  /**\n   * Fetch information about a specific favorite group.\n   * @summary Show Favorite Group\n   * @param {'world' | 'friend' | 'avatar'} favoriteGroupType The type of group to fetch, must be a valid FavoriteType.\n   * @param {string} favoriteGroupName\n   * @param {string} userId\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof FavoritesApi\n   */\n\n\n  FavoritesApi.prototype.getFavoriteGroup = function (favoriteGroupType, favoriteGroupName, userId, options) {\n    var _this = this;\n\n    return exports.FavoritesApiFp(this.configuration).getFavoriteGroup(favoriteGroupType, favoriteGroupName, userId, options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n  /**\n   * Return a list of favorite groups owned by a user. Returns the same information as `getFavoriteGroups`.\n   * @summary List Favorite Groups\n   * @param {number} [n] The number of objects to return.\n   * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n   * @param {string} [ownerId] The owner of whoms favorite groups to return. Must be a UserID.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof FavoritesApi\n   */\n\n\n  FavoritesApi.prototype.getFavoriteGroups = function (n, offset, ownerId, options) {\n    var _this = this;\n\n    return exports.FavoritesApiFp(this.configuration).getFavoriteGroups(n, offset, ownerId, options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n  /**\n   * Returns a list of favorites.\n   * @summary List Favorites\n   * @param {number} [n] The number of objects to return.\n   * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n   * @param {string} [type] The type of favorites to return, FavoriteType.\n   * @param {string} [tag] Tags to include (comma-separated). Any of the tags needs to be present.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof FavoritesApi\n   */\n\n\n  FavoritesApi.prototype.getFavorites = function (n, offset, type, tag, options) {\n    var _this = this;\n\n    return exports.FavoritesApiFp(this.configuration).getFavorites(n, offset, type, tag, options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n  /**\n   * Remove a favorite from your favorites list.\n   * @summary Remove Favorite\n   * @param {string} favoriteId\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof FavoritesApi\n   */\n\n\n  FavoritesApi.prototype.removeFavorite = function (favoriteId, options) {\n    var _this = this;\n\n    return exports.FavoritesApiFp(this.configuration).removeFavorite(favoriteId, options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n  /**\n   * Update information about a specific favorite group.\n   * @summary Update Favorite Group\n   * @param {'world' | 'friend' | 'avatar'} favoriteGroupType The type of group to fetch, must be a valid FavoriteType.\n   * @param {string} favoriteGroupName\n   * @param {string} userId\n   * @param {UpdateFavoriteGroupRequest} [updateFavoriteGroupRequest]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof FavoritesApi\n   */\n\n\n  FavoritesApi.prototype.updateFavoriteGroup = function (favoriteGroupType, favoriteGroupName, userId, updateFavoriteGroupRequest, options) {\n    var _this = this;\n\n    return exports.FavoritesApiFp(this.configuration).updateFavoriteGroup(favoriteGroupType, favoriteGroupName, userId, updateFavoriteGroupRequest, options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n\n  return FavoritesApi;\n}(base_1.BaseAPI);\n\nexports.FavoritesApi = FavoritesApi;\n/**\n * FilesApi - axios parameter creator\n * @export\n */\n\nexports.FilesApiAxiosParamCreator = function (configuration) {\n  var _this = this;\n\n  return {\n    /**\n     * Creates a new File object\n     * @summary Create File\n     * @param {CreateFileRequest} [createFileRequest]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createFile: function (createFileRequest, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          localVarPath = \"/file\";\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'POST'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {}; // authentication apiKeyCookie required\n          // authentication authCookie required\n\n          localVarHeaderParameter['Content-Type'] = 'application/json';\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          localVarRequestOptions.data = common_1.serializeDataIfNeeded(createFileRequest, localVarRequestOptions, configuration);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    },\n\n    /**\n     * Creates a new FileVersion. Once a Version has been created, proceed to the `/file/{fileId}/{versionId}/file/start` endpoint to start a file upload.\n     * @summary Create File Version\n     * @param {string} fileId\n     * @param {CreateFileVersionRequest} [createFileVersionRequest]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createFileVersion: function (fileId, createFileVersionRequest, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          // verify required parameter 'fileId' is not null or undefined\n          common_1.assertParamExists('createFileVersion', 'fileId', fileId);\n          localVarPath = \"/file/{fileId}\".replace(\"{\" + \"fileId\" + \"}\", encodeURIComponent(String(fileId)));\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'POST'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {}; // authentication apiKeyCookie required\n          // authentication authCookie required\n\n          localVarHeaderParameter['Content-Type'] = 'application/json';\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          localVarRequestOptions.data = common_1.serializeDataIfNeeded(createFileVersionRequest, localVarRequestOptions, configuration);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    },\n\n    /**\n     * Deletes a File object.\n     * @summary Delete File\n     * @param {string} fileId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteFile: function (fileId, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          // verify required parameter 'fileId' is not null or undefined\n          common_1.assertParamExists('deleteFile', 'fileId', fileId);\n          localVarPath = \"/file/{fileId}\".replace(\"{\" + \"fileId\" + \"}\", encodeURIComponent(String(fileId)));\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'DELETE'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {}; // authentication apiKeyCookie required\n          // authentication authCookie required\n\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    },\n\n    /**\n     * Delete a specific version of a file. You can only delete the latest version.\n     * @summary Delete File Version\n     * @param {string} fileId\n     * @param {number} versionId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteFileVersion: function (fileId, versionId, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          // verify required parameter 'fileId' is not null or undefined\n          common_1.assertParamExists('deleteFileVersion', 'fileId', fileId); // verify required parameter 'versionId' is not null or undefined\n\n          common_1.assertParamExists('deleteFileVersion', 'versionId', versionId);\n          localVarPath = \"/file/{fileId}/{versionId}\".replace(\"{\" + \"fileId\" + \"}\", encodeURIComponent(String(fileId))).replace(\"{\" + \"versionId\" + \"}\", encodeURIComponent(String(versionId)));\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'DELETE'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {}; // authentication apiKeyCookie required\n          // authentication authCookie required\n\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    },\n\n    /**\n     * Downloads the file with the provided version number.  **Version Note:** Version 0 is always when the file was created. The real data is usually always located in version 1 and up.  **Extension Note:** Files are not guaranteed to have a file extensions. UnityPackage files tends to have it, images through this endpoint do not. You are responsible for appending file extension from the `extension` field when neccesary.\n     * @summary Download File Version\n     * @param {string} fileId\n     * @param {number} versionId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    downloadFileVersion: function (fileId, versionId, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          // verify required parameter 'fileId' is not null or undefined\n          common_1.assertParamExists('downloadFileVersion', 'fileId', fileId); // verify required parameter 'versionId' is not null or undefined\n\n          common_1.assertParamExists('downloadFileVersion', 'versionId', versionId);\n          localVarPath = \"/file/{fileId}/{versionId}\".replace(\"{\" + \"fileId\" + \"}\", encodeURIComponent(String(fileId))).replace(\"{\" + \"versionId\" + \"}\", encodeURIComponent(String(versionId)));\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'GET'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {}; // authentication apiKeyCookie required\n          // authentication authCookie required\n\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    },\n\n    /**\n     * Finish an upload of a FileData. This will mark it as \\\"complete\\\". After uploading the `file` for Avatars and Worlds you then have to upload a `signature` file.\n     * @summary Finish FileData Upload\n     * @param {string} fileId\n     * @param {number} versionId\n     * @param {'file' | 'signature' | 'delta'} fileType\n     * @param {FinishFileDataUploadRequest} [finishFileDataUploadRequest] Please see documentation on ETag\\&#39;s: [https://teppen.io/2018/06/23/aws_s3_etags/](https://teppen.io/2018/06/23/aws_s3_etags/)  ETag\\&#39;s should NOT be present when uploading a &#x60;signature&#x60;.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    finishFileDataUpload: function (fileId, versionId, fileType, finishFileDataUploadRequest, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          // verify required parameter 'fileId' is not null or undefined\n          common_1.assertParamExists('finishFileDataUpload', 'fileId', fileId); // verify required parameter 'versionId' is not null or undefined\n\n          common_1.assertParamExists('finishFileDataUpload', 'versionId', versionId); // verify required parameter 'fileType' is not null or undefined\n\n          common_1.assertParamExists('finishFileDataUpload', 'fileType', fileType);\n          localVarPath = \"/file/{fileId}/{versionId}/{fileType}/finish\".replace(\"{\" + \"fileId\" + \"}\", encodeURIComponent(String(fileId))).replace(\"{\" + \"versionId\" + \"}\", encodeURIComponent(String(versionId))).replace(\"{\" + \"fileType\" + \"}\", encodeURIComponent(String(fileType)));\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'PUT'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {}; // authentication apiKeyCookie required\n          // authentication authCookie required\n\n          localVarHeaderParameter['Content-Type'] = 'application/json';\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          localVarRequestOptions.data = common_1.serializeDataIfNeeded(finishFileDataUploadRequest, localVarRequestOptions, configuration);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    },\n\n    /**\n     * Shows general information about the \\\"File\\\" object. Each File can have several \\\"Version\\\"\\'s, and each Version can have multiple real files or \\\"Data\\\" blobs.\n     * @summary Show File\n     * @param {string} fileId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getFile: function (fileId, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          // verify required parameter 'fileId' is not null or undefined\n          common_1.assertParamExists('getFile', 'fileId', fileId);\n          localVarPath = \"/file/{fileId}\".replace(\"{\" + \"fileId\" + \"}\", encodeURIComponent(String(fileId)));\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'GET'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {}; // authentication apiKeyCookie required\n          // authentication authCookie required\n\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    },\n\n    /**\n     * Retrieves the upload status for file upload. Can currently only be accessed when `status` is `waiting`. Trying to access it on a file version already uploaded currently times out.\n     * @summary Check FileData Upload Status\n     * @param {string} fileId\n     * @param {number} versionId\n     * @param {'file' | 'signature' | 'delta'} fileType\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getFileDataUploadStatus: function (fileId, versionId, fileType, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          // verify required parameter 'fileId' is not null or undefined\n          common_1.assertParamExists('getFileDataUploadStatus', 'fileId', fileId); // verify required parameter 'versionId' is not null or undefined\n\n          common_1.assertParamExists('getFileDataUploadStatus', 'versionId', versionId); // verify required parameter 'fileType' is not null or undefined\n\n          common_1.assertParamExists('getFileDataUploadStatus', 'fileType', fileType);\n          localVarPath = \"/file/{fileId}/{versionId}/{fileType}/status\".replace(\"{\" + \"fileId\" + \"}\", encodeURIComponent(String(fileId))).replace(\"{\" + \"versionId\" + \"}\", encodeURIComponent(String(versionId))).replace(\"{\" + \"fileType\" + \"}\", encodeURIComponent(String(fileType)));\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'GET'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {}; // authentication apiKeyCookie required\n          // authentication authCookie required\n\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    },\n\n    /**\n     * Returns a list of files\n     * @summary List Files\n     * @param {string} [tag] Tag, for example \\&quot;icon\\&quot; or \\&quot;gallery\\&quot;, not included by default.\n     * @param {string} [userId] UserID, will always generate a 500 permission error.\n     * @param {number} [n] The number of objects to return.\n     * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getFiles: function (tag, userId, n, offset, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          localVarPath = \"/files\";\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'GET'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {}; // authentication apiKeyCookie required\n          // authentication authCookie required\n\n          if (tag !== undefined) {\n            localVarQueryParameter['tag'] = tag;\n          }\n\n          if (userId !== undefined) {\n            localVarQueryParameter['userId'] = userId;\n          }\n\n          if (n !== undefined) {\n            localVarQueryParameter['n'] = n;\n          }\n\n          if (offset !== undefined) {\n            localVarQueryParameter['offset'] = offset;\n          }\n\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    },\n\n    /**\n     * Starts an upload of a specific FilePart. This endpoint will return an AWS URL which you can PUT data to. You need to call this and receive a new AWS API URL for each `partNumber`. Please see AWS\\'s REST documentation on \\\"PUT Object to S3\\\" on how to upload. Once all parts has been uploaded, proceed to `/finish` endpoint.  **Note:** `nextPartNumber` seems like it is always ignored. Despite it returning 0, first partNumber is always 1.\n     * @summary Start FileData Upload\n     * @param {string} fileId\n     * @param {number} versionId\n     * @param {'file' | 'signature' | 'delta'} fileType\n     * @param {number} [partNumber]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    startFileDataUpload: function (fileId, versionId, fileType, partNumber, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          // verify required parameter 'fileId' is not null or undefined\n          common_1.assertParamExists('startFileDataUpload', 'fileId', fileId); // verify required parameter 'versionId' is not null or undefined\n\n          common_1.assertParamExists('startFileDataUpload', 'versionId', versionId); // verify required parameter 'fileType' is not null or undefined\n\n          common_1.assertParamExists('startFileDataUpload', 'fileType', fileType);\n          localVarPath = \"/file/{fileId}/{versionId}/{fileType}/start\".replace(\"{\" + \"fileId\" + \"}\", encodeURIComponent(String(fileId))).replace(\"{\" + \"versionId\" + \"}\", encodeURIComponent(String(versionId))).replace(\"{\" + \"fileType\" + \"}\", encodeURIComponent(String(fileType)));\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'PUT'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {}; // authentication apiKeyCookie required\n          // authentication authCookie required\n\n          if (partNumber !== undefined) {\n            localVarQueryParameter['partNumber'] = partNumber;\n          }\n\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    }\n  };\n};\n/**\n * FilesApi - functional programming interface\n * @export\n */\n\n\nexports.FilesApiFp = function (configuration) {\n  var localVarAxiosParamCreator = exports.FilesApiAxiosParamCreator(configuration);\n  return {\n    /**\n     * Creates a new File object\n     * @summary Create File\n     * @param {CreateFileRequest} [createFileRequest]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createFile: function (createFileRequest, options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.createFile(createFileRequest, options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    },\n\n    /**\n     * Creates a new FileVersion. Once a Version has been created, proceed to the `/file/{fileId}/{versionId}/file/start` endpoint to start a file upload.\n     * @summary Create File Version\n     * @param {string} fileId\n     * @param {CreateFileVersionRequest} [createFileVersionRequest]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createFileVersion: function (fileId, createFileVersionRequest, options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.createFileVersion(fileId, createFileVersionRequest, options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    },\n\n    /**\n     * Deletes a File object.\n     * @summary Delete File\n     * @param {string} fileId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteFile: function (fileId, options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.deleteFile(fileId, options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    },\n\n    /**\n     * Delete a specific version of a file. You can only delete the latest version.\n     * @summary Delete File Version\n     * @param {string} fileId\n     * @param {number} versionId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteFileVersion: function (fileId, versionId, options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.deleteFileVersion(fileId, versionId, options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    },\n\n    /**\n     * Downloads the file with the provided version number.  **Version Note:** Version 0 is always when the file was created. The real data is usually always located in version 1 and up.  **Extension Note:** Files are not guaranteed to have a file extensions. UnityPackage files tends to have it, images through this endpoint do not. You are responsible for appending file extension from the `extension` field when neccesary.\n     * @summary Download File Version\n     * @param {string} fileId\n     * @param {number} versionId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    downloadFileVersion: function (fileId, versionId, options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.downloadFileVersion(fileId, versionId, options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    },\n\n    /**\n     * Finish an upload of a FileData. This will mark it as \\\"complete\\\". After uploading the `file` for Avatars and Worlds you then have to upload a `signature` file.\n     * @summary Finish FileData Upload\n     * @param {string} fileId\n     * @param {number} versionId\n     * @param {'file' | 'signature' | 'delta'} fileType\n     * @param {FinishFileDataUploadRequest} [finishFileDataUploadRequest] Please see documentation on ETag\\&#39;s: [https://teppen.io/2018/06/23/aws_s3_etags/](https://teppen.io/2018/06/23/aws_s3_etags/)  ETag\\&#39;s should NOT be present when uploading a &#x60;signature&#x60;.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    finishFileDataUpload: function (fileId, versionId, fileType, finishFileDataUploadRequest, options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.finishFileDataUpload(fileId, versionId, fileType, finishFileDataUploadRequest, options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    },\n\n    /**\n     * Shows general information about the \\\"File\\\" object. Each File can have several \\\"Version\\\"\\'s, and each Version can have multiple real files or \\\"Data\\\" blobs.\n     * @summary Show File\n     * @param {string} fileId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getFile: function (fileId, options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.getFile(fileId, options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    },\n\n    /**\n     * Retrieves the upload status for file upload. Can currently only be accessed when `status` is `waiting`. Trying to access it on a file version already uploaded currently times out.\n     * @summary Check FileData Upload Status\n     * @param {string} fileId\n     * @param {number} versionId\n     * @param {'file' | 'signature' | 'delta'} fileType\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getFileDataUploadStatus: function (fileId, versionId, fileType, options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.getFileDataUploadStatus(fileId, versionId, fileType, options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    },\n\n    /**\n     * Returns a list of files\n     * @summary List Files\n     * @param {string} [tag] Tag, for example \\&quot;icon\\&quot; or \\&quot;gallery\\&quot;, not included by default.\n     * @param {string} [userId] UserID, will always generate a 500 permission error.\n     * @param {number} [n] The number of objects to return.\n     * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getFiles: function (tag, userId, n, offset, options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.getFiles(tag, userId, n, offset, options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    },\n\n    /**\n     * Starts an upload of a specific FilePart. This endpoint will return an AWS URL which you can PUT data to. You need to call this and receive a new AWS API URL for each `partNumber`. Please see AWS\\'s REST documentation on \\\"PUT Object to S3\\\" on how to upload. Once all parts has been uploaded, proceed to `/finish` endpoint.  **Note:** `nextPartNumber` seems like it is always ignored. Despite it returning 0, first partNumber is always 1.\n     * @summary Start FileData Upload\n     * @param {string} fileId\n     * @param {number} versionId\n     * @param {'file' | 'signature' | 'delta'} fileType\n     * @param {number} [partNumber]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    startFileDataUpload: function (fileId, versionId, fileType, partNumber, options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.startFileDataUpload(fileId, versionId, fileType, partNumber, options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    }\n  };\n};\n/**\n * FilesApi - factory interface\n * @export\n */\n\n\nexports.FilesApiFactory = function (configuration, basePath, axios) {\n  var localVarFp = exports.FilesApiFp(configuration);\n  return {\n    /**\n     * Creates a new File object\n     * @summary Create File\n     * @param {CreateFileRequest} [createFileRequest]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createFile: function (createFileRequest, options) {\n      return localVarFp.createFile(createFileRequest, options).then(function (request) {\n        return request(axios, basePath);\n      });\n    },\n\n    /**\n     * Creates a new FileVersion. Once a Version has been created, proceed to the `/file/{fileId}/{versionId}/file/start` endpoint to start a file upload.\n     * @summary Create File Version\n     * @param {string} fileId\n     * @param {CreateFileVersionRequest} [createFileVersionRequest]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createFileVersion: function (fileId, createFileVersionRequest, options) {\n      return localVarFp.createFileVersion(fileId, createFileVersionRequest, options).then(function (request) {\n        return request(axios, basePath);\n      });\n    },\n\n    /**\n     * Deletes a File object.\n     * @summary Delete File\n     * @param {string} fileId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteFile: function (fileId, options) {\n      return localVarFp.deleteFile(fileId, options).then(function (request) {\n        return request(axios, basePath);\n      });\n    },\n\n    /**\n     * Delete a specific version of a file. You can only delete the latest version.\n     * @summary Delete File Version\n     * @param {string} fileId\n     * @param {number} versionId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteFileVersion: function (fileId, versionId, options) {\n      return localVarFp.deleteFileVersion(fileId, versionId, options).then(function (request) {\n        return request(axios, basePath);\n      });\n    },\n\n    /**\n     * Downloads the file with the provided version number.  **Version Note:** Version 0 is always when the file was created. The real data is usually always located in version 1 and up.  **Extension Note:** Files are not guaranteed to have a file extensions. UnityPackage files tends to have it, images through this endpoint do not. You are responsible for appending file extension from the `extension` field when neccesary.\n     * @summary Download File Version\n     * @param {string} fileId\n     * @param {number} versionId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    downloadFileVersion: function (fileId, versionId, options) {\n      return localVarFp.downloadFileVersion(fileId, versionId, options).then(function (request) {\n        return request(axios, basePath);\n      });\n    },\n\n    /**\n     * Finish an upload of a FileData. This will mark it as \\\"complete\\\". After uploading the `file` for Avatars and Worlds you then have to upload a `signature` file.\n     * @summary Finish FileData Upload\n     * @param {string} fileId\n     * @param {number} versionId\n     * @param {'file' | 'signature' | 'delta'} fileType\n     * @param {FinishFileDataUploadRequest} [finishFileDataUploadRequest] Please see documentation on ETag\\&#39;s: [https://teppen.io/2018/06/23/aws_s3_etags/](https://teppen.io/2018/06/23/aws_s3_etags/)  ETag\\&#39;s should NOT be present when uploading a &#x60;signature&#x60;.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    finishFileDataUpload: function (fileId, versionId, fileType, finishFileDataUploadRequest, options) {\n      return localVarFp.finishFileDataUpload(fileId, versionId, fileType, finishFileDataUploadRequest, options).then(function (request) {\n        return request(axios, basePath);\n      });\n    },\n\n    /**\n     * Shows general information about the \\\"File\\\" object. Each File can have several \\\"Version\\\"\\'s, and each Version can have multiple real files or \\\"Data\\\" blobs.\n     * @summary Show File\n     * @param {string} fileId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getFile: function (fileId, options) {\n      return localVarFp.getFile(fileId, options).then(function (request) {\n        return request(axios, basePath);\n      });\n    },\n\n    /**\n     * Retrieves the upload status for file upload. Can currently only be accessed when `status` is `waiting`. Trying to access it on a file version already uploaded currently times out.\n     * @summary Check FileData Upload Status\n     * @param {string} fileId\n     * @param {number} versionId\n     * @param {'file' | 'signature' | 'delta'} fileType\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getFileDataUploadStatus: function (fileId, versionId, fileType, options) {\n      return localVarFp.getFileDataUploadStatus(fileId, versionId, fileType, options).then(function (request) {\n        return request(axios, basePath);\n      });\n    },\n\n    /**\n     * Returns a list of files\n     * @summary List Files\n     * @param {string} [tag] Tag, for example \\&quot;icon\\&quot; or \\&quot;gallery\\&quot;, not included by default.\n     * @param {string} [userId] UserID, will always generate a 500 permission error.\n     * @param {number} [n] The number of objects to return.\n     * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getFiles: function (tag, userId, n, offset, options) {\n      return localVarFp.getFiles(tag, userId, n, offset, options).then(function (request) {\n        return request(axios, basePath);\n      });\n    },\n\n    /**\n     * Starts an upload of a specific FilePart. This endpoint will return an AWS URL which you can PUT data to. You need to call this and receive a new AWS API URL for each `partNumber`. Please see AWS\\'s REST documentation on \\\"PUT Object to S3\\\" on how to upload. Once all parts has been uploaded, proceed to `/finish` endpoint.  **Note:** `nextPartNumber` seems like it is always ignored. Despite it returning 0, first partNumber is always 1.\n     * @summary Start FileData Upload\n     * @param {string} fileId\n     * @param {number} versionId\n     * @param {'file' | 'signature' | 'delta'} fileType\n     * @param {number} [partNumber]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    startFileDataUpload: function (fileId, versionId, fileType, partNumber, options) {\n      return localVarFp.startFileDataUpload(fileId, versionId, fileType, partNumber, options).then(function (request) {\n        return request(axios, basePath);\n      });\n    }\n  };\n};\n/**\n * FilesApi - object-oriented interface\n * @export\n * @class FilesApi\n * @extends {BaseAPI}\n */\n\n\nvar FilesApi =\n/** @class */\nfunction (_super) {\n  __extends(FilesApi, _super);\n\n  function FilesApi() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * Creates a new File object\n   * @summary Create File\n   * @param {CreateFileRequest} [createFileRequest]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof FilesApi\n   */\n\n\n  FilesApi.prototype.createFile = function (createFileRequest, options) {\n    var _this = this;\n\n    return exports.FilesApiFp(this.configuration).createFile(createFileRequest, options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n  /**\n   * Creates a new FileVersion. Once a Version has been created, proceed to the `/file/{fileId}/{versionId}/file/start` endpoint to start a file upload.\n   * @summary Create File Version\n   * @param {string} fileId\n   * @param {CreateFileVersionRequest} [createFileVersionRequest]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof FilesApi\n   */\n\n\n  FilesApi.prototype.createFileVersion = function (fileId, createFileVersionRequest, options) {\n    var _this = this;\n\n    return exports.FilesApiFp(this.configuration).createFileVersion(fileId, createFileVersionRequest, options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n  /**\n   * Deletes a File object.\n   * @summary Delete File\n   * @param {string} fileId\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof FilesApi\n   */\n\n\n  FilesApi.prototype.deleteFile = function (fileId, options) {\n    var _this = this;\n\n    return exports.FilesApiFp(this.configuration).deleteFile(fileId, options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n  /**\n   * Delete a specific version of a file. You can only delete the latest version.\n   * @summary Delete File Version\n   * @param {string} fileId\n   * @param {number} versionId\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof FilesApi\n   */\n\n\n  FilesApi.prototype.deleteFileVersion = function (fileId, versionId, options) {\n    var _this = this;\n\n    return exports.FilesApiFp(this.configuration).deleteFileVersion(fileId, versionId, options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n  /**\n   * Downloads the file with the provided version number.  **Version Note:** Version 0 is always when the file was created. The real data is usually always located in version 1 and up.  **Extension Note:** Files are not guaranteed to have a file extensions. UnityPackage files tends to have it, images through this endpoint do not. You are responsible for appending file extension from the `extension` field when neccesary.\n   * @summary Download File Version\n   * @param {string} fileId\n   * @param {number} versionId\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof FilesApi\n   */\n\n\n  FilesApi.prototype.downloadFileVersion = function (fileId, versionId, options) {\n    var _this = this;\n\n    return exports.FilesApiFp(this.configuration).downloadFileVersion(fileId, versionId, options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n  /**\n   * Finish an upload of a FileData. This will mark it as \\\"complete\\\". After uploading the `file` for Avatars and Worlds you then have to upload a `signature` file.\n   * @summary Finish FileData Upload\n   * @param {string} fileId\n   * @param {number} versionId\n   * @param {'file' | 'signature' | 'delta'} fileType\n   * @param {FinishFileDataUploadRequest} [finishFileDataUploadRequest] Please see documentation on ETag\\&#39;s: [https://teppen.io/2018/06/23/aws_s3_etags/](https://teppen.io/2018/06/23/aws_s3_etags/)  ETag\\&#39;s should NOT be present when uploading a &#x60;signature&#x60;.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof FilesApi\n   */\n\n\n  FilesApi.prototype.finishFileDataUpload = function (fileId, versionId, fileType, finishFileDataUploadRequest, options) {\n    var _this = this;\n\n    return exports.FilesApiFp(this.configuration).finishFileDataUpload(fileId, versionId, fileType, finishFileDataUploadRequest, options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n  /**\n   * Shows general information about the \\\"File\\\" object. Each File can have several \\\"Version\\\"\\'s, and each Version can have multiple real files or \\\"Data\\\" blobs.\n   * @summary Show File\n   * @param {string} fileId\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof FilesApi\n   */\n\n\n  FilesApi.prototype.getFile = function (fileId, options) {\n    var _this = this;\n\n    return exports.FilesApiFp(this.configuration).getFile(fileId, options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n  /**\n   * Retrieves the upload status for file upload. Can currently only be accessed when `status` is `waiting`. Trying to access it on a file version already uploaded currently times out.\n   * @summary Check FileData Upload Status\n   * @param {string} fileId\n   * @param {number} versionId\n   * @param {'file' | 'signature' | 'delta'} fileType\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof FilesApi\n   */\n\n\n  FilesApi.prototype.getFileDataUploadStatus = function (fileId, versionId, fileType, options) {\n    var _this = this;\n\n    return exports.FilesApiFp(this.configuration).getFileDataUploadStatus(fileId, versionId, fileType, options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n  /**\n   * Returns a list of files\n   * @summary List Files\n   * @param {string} [tag] Tag, for example \\&quot;icon\\&quot; or \\&quot;gallery\\&quot;, not included by default.\n   * @param {string} [userId] UserID, will always generate a 500 permission error.\n   * @param {number} [n] The number of objects to return.\n   * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof FilesApi\n   */\n\n\n  FilesApi.prototype.getFiles = function (tag, userId, n, offset, options) {\n    var _this = this;\n\n    return exports.FilesApiFp(this.configuration).getFiles(tag, userId, n, offset, options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n  /**\n   * Starts an upload of a specific FilePart. This endpoint will return an AWS URL which you can PUT data to. You need to call this and receive a new AWS API URL for each `partNumber`. Please see AWS\\'s REST documentation on \\\"PUT Object to S3\\\" on how to upload. Once all parts has been uploaded, proceed to `/finish` endpoint.  **Note:** `nextPartNumber` seems like it is always ignored. Despite it returning 0, first partNumber is always 1.\n   * @summary Start FileData Upload\n   * @param {string} fileId\n   * @param {number} versionId\n   * @param {'file' | 'signature' | 'delta'} fileType\n   * @param {number} [partNumber]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof FilesApi\n   */\n\n\n  FilesApi.prototype.startFileDataUpload = function (fileId, versionId, fileType, partNumber, options) {\n    var _this = this;\n\n    return exports.FilesApiFp(this.configuration).startFileDataUpload(fileId, versionId, fileType, partNumber, options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n\n  return FilesApi;\n}(base_1.BaseAPI);\n\nexports.FilesApi = FilesApi;\n/**\n * FriendsApi - axios parameter creator\n * @export\n */\n\nexports.FriendsApiAxiosParamCreator = function (configuration) {\n  var _this = this;\n\n  return {\n    /**\n     * Deletes an outgoing pending friend request to another user. To delete an incoming friend request, use the `deleteNotification` endpoint instead.\n     * @summary Delete Friend Request\n     * @param {string} userId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteFriendRequest: function (userId, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          // verify required parameter 'userId' is not null or undefined\n          common_1.assertParamExists('deleteFriendRequest', 'userId', userId);\n          localVarPath = \"/user/{userId}/friendRequest\".replace(\"{\" + \"userId\" + \"}\", encodeURIComponent(String(userId)));\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'DELETE'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {}; // authentication apiKeyCookie required\n          // authentication authCookie required\n\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    },\n\n    /**\n     * Send a friend request to another user.\n     * @summary Send Friend Request\n     * @param {string} userId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    friend: function (userId, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          // verify required parameter 'userId' is not null or undefined\n          common_1.assertParamExists('friend', 'userId', userId);\n          localVarPath = \"/user/{userId}/friendRequest\".replace(\"{\" + \"userId\" + \"}\", encodeURIComponent(String(userId)));\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'POST'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {}; // authentication apiKeyCookie required\n          // authentication authCookie required\n\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    },\n\n    /**\n     * Retrieve if the user is currently a friend with a given user, if they have an outgoing friend request, and if they have an incoming friend request. The proper way to receive and accept friend request is by checking if the user has an incoming `Notification` of type `friendRequest`, and then accepting that notification.\n     * @summary Check Friend Status\n     * @param {string} userId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getFriendStatus: function (userId, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          // verify required parameter 'userId' is not null or undefined\n          common_1.assertParamExists('getFriendStatus', 'userId', userId);\n          localVarPath = \"/user/{userId}/friendStatus\".replace(\"{\" + \"userId\" + \"}\", encodeURIComponent(String(userId)));\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'GET'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {}; // authentication apiKeyCookie required\n          // authentication authCookie required\n\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    },\n\n    /**\n     * List information about friends.\n     * @summary List Friends\n     * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n     * @param {number} [n] The number of objects to return.\n     * @param {boolean} [offline] Returns *only* offline users if true, returns only online and active users if false\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getFriends: function (offset, n, offline, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          localVarPath = \"/auth/user/friends\";\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'GET'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {}; // authentication apiKeyCookie required\n          // authentication authCookie required\n\n          if (offset !== undefined) {\n            localVarQueryParameter['offset'] = offset;\n          }\n\n          if (n !== undefined) {\n            localVarQueryParameter['n'] = n;\n          }\n\n          if (offline !== undefined) {\n            localVarQueryParameter['offline'] = offline;\n          }\n\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    },\n\n    /**\n     * Unfriend a user by ID.\n     * @summary Unfriend\n     * @param {string} userId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    unfriend: function (userId, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          // verify required parameter 'userId' is not null or undefined\n          common_1.assertParamExists('unfriend', 'userId', userId);\n          localVarPath = \"/auth/user/friends/{userId}\".replace(\"{\" + \"userId\" + \"}\", encodeURIComponent(String(userId)));\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'DELETE'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {}; // authentication apiKeyCookie required\n          // authentication authCookie required\n\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    }\n  };\n};\n/**\n * FriendsApi - functional programming interface\n * @export\n */\n\n\nexports.FriendsApiFp = function (configuration) {\n  var localVarAxiosParamCreator = exports.FriendsApiAxiosParamCreator(configuration);\n  return {\n    /**\n     * Deletes an outgoing pending friend request to another user. To delete an incoming friend request, use the `deleteNotification` endpoint instead.\n     * @summary Delete Friend Request\n     * @param {string} userId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteFriendRequest: function (userId, options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.deleteFriendRequest(userId, options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    },\n\n    /**\n     * Send a friend request to another user.\n     * @summary Send Friend Request\n     * @param {string} userId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    friend: function (userId, options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.friend(userId, options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    },\n\n    /**\n     * Retrieve if the user is currently a friend with a given user, if they have an outgoing friend request, and if they have an incoming friend request. The proper way to receive and accept friend request is by checking if the user has an incoming `Notification` of type `friendRequest`, and then accepting that notification.\n     * @summary Check Friend Status\n     * @param {string} userId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getFriendStatus: function (userId, options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.getFriendStatus(userId, options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    },\n\n    /**\n     * List information about friends.\n     * @summary List Friends\n     * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n     * @param {number} [n] The number of objects to return.\n     * @param {boolean} [offline] Returns *only* offline users if true, returns only online and active users if false\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getFriends: function (offset, n, offline, options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.getFriends(offset, n, offline, options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    },\n\n    /**\n     * Unfriend a user by ID.\n     * @summary Unfriend\n     * @param {string} userId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    unfriend: function (userId, options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.unfriend(userId, options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    }\n  };\n};\n/**\n * FriendsApi - factory interface\n * @export\n */\n\n\nexports.FriendsApiFactory = function (configuration, basePath, axios) {\n  var localVarFp = exports.FriendsApiFp(configuration);\n  return {\n    /**\n     * Deletes an outgoing pending friend request to another user. To delete an incoming friend request, use the `deleteNotification` endpoint instead.\n     * @summary Delete Friend Request\n     * @param {string} userId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteFriendRequest: function (userId, options) {\n      return localVarFp.deleteFriendRequest(userId, options).then(function (request) {\n        return request(axios, basePath);\n      });\n    },\n\n    /**\n     * Send a friend request to another user.\n     * @summary Send Friend Request\n     * @param {string} userId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    friend: function (userId, options) {\n      return localVarFp.friend(userId, options).then(function (request) {\n        return request(axios, basePath);\n      });\n    },\n\n    /**\n     * Retrieve if the user is currently a friend with a given user, if they have an outgoing friend request, and if they have an incoming friend request. The proper way to receive and accept friend request is by checking if the user has an incoming `Notification` of type `friendRequest`, and then accepting that notification.\n     * @summary Check Friend Status\n     * @param {string} userId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getFriendStatus: function (userId, options) {\n      return localVarFp.getFriendStatus(userId, options).then(function (request) {\n        return request(axios, basePath);\n      });\n    },\n\n    /**\n     * List information about friends.\n     * @summary List Friends\n     * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n     * @param {number} [n] The number of objects to return.\n     * @param {boolean} [offline] Returns *only* offline users if true, returns only online and active users if false\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getFriends: function (offset, n, offline, options) {\n      return localVarFp.getFriends(offset, n, offline, options).then(function (request) {\n        return request(axios, basePath);\n      });\n    },\n\n    /**\n     * Unfriend a user by ID.\n     * @summary Unfriend\n     * @param {string} userId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    unfriend: function (userId, options) {\n      return localVarFp.unfriend(userId, options).then(function (request) {\n        return request(axios, basePath);\n      });\n    }\n  };\n};\n/**\n * FriendsApi - object-oriented interface\n * @export\n * @class FriendsApi\n * @extends {BaseAPI}\n */\n\n\nvar FriendsApi =\n/** @class */\nfunction (_super) {\n  __extends(FriendsApi, _super);\n\n  function FriendsApi() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * Deletes an outgoing pending friend request to another user. To delete an incoming friend request, use the `deleteNotification` endpoint instead.\n   * @summary Delete Friend Request\n   * @param {string} userId\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof FriendsApi\n   */\n\n\n  FriendsApi.prototype.deleteFriendRequest = function (userId, options) {\n    var _this = this;\n\n    return exports.FriendsApiFp(this.configuration).deleteFriendRequest(userId, options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n  /**\n   * Send a friend request to another user.\n   * @summary Send Friend Request\n   * @param {string} userId\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof FriendsApi\n   */\n\n\n  FriendsApi.prototype.friend = function (userId, options) {\n    var _this = this;\n\n    return exports.FriendsApiFp(this.configuration).friend(userId, options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n  /**\n   * Retrieve if the user is currently a friend with a given user, if they have an outgoing friend request, and if they have an incoming friend request. The proper way to receive and accept friend request is by checking if the user has an incoming `Notification` of type `friendRequest`, and then accepting that notification.\n   * @summary Check Friend Status\n   * @param {string} userId\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof FriendsApi\n   */\n\n\n  FriendsApi.prototype.getFriendStatus = function (userId, options) {\n    var _this = this;\n\n    return exports.FriendsApiFp(this.configuration).getFriendStatus(userId, options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n  /**\n   * List information about friends.\n   * @summary List Friends\n   * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n   * @param {number} [n] The number of objects to return.\n   * @param {boolean} [offline] Returns *only* offline users if true, returns only online and active users if false\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof FriendsApi\n   */\n\n\n  FriendsApi.prototype.getFriends = function (offset, n, offline, options) {\n    var _this = this;\n\n    return exports.FriendsApiFp(this.configuration).getFriends(offset, n, offline, options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n  /**\n   * Unfriend a user by ID.\n   * @summary Unfriend\n   * @param {string} userId\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof FriendsApi\n   */\n\n\n  FriendsApi.prototype.unfriend = function (userId, options) {\n    var _this = this;\n\n    return exports.FriendsApiFp(this.configuration).unfriend(userId, options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n\n  return FriendsApi;\n}(base_1.BaseAPI);\n\nexports.FriendsApi = FriendsApi;\n/**\n * InstancesApi - axios parameter creator\n * @export\n */\n\nexports.InstancesApiAxiosParamCreator = function (configuration) {\n  var _this = this;\n\n  return {\n    /**\n     * Returns an instance. Please read [Instances Tutorial](https://vrchatapi.github.io/tutorials/instances/) for more information on Instances.  If an invalid instanceId is provided, this endpoint will simply return \\\"null\\\"!\n     * @summary Get Instance\n     * @param {string} worldId\n     * @param {string} instanceId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getInstance: function (worldId, instanceId, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          // verify required parameter 'worldId' is not null or undefined\n          common_1.assertParamExists('getInstance', 'worldId', worldId); // verify required parameter 'instanceId' is not null or undefined\n\n          common_1.assertParamExists('getInstance', 'instanceId', instanceId);\n          localVarPath = \"/instances/{worldId}:{instanceId}\".replace(\"{\" + \"worldId\" + \"}\", encodeURIComponent(String(worldId))).replace(\"{\" + \"instanceId\" + \"}\", encodeURIComponent(String(instanceId)));\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'GET'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {}; // authentication apiKeyCookie required\n          // authentication authCookie required\n\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    },\n\n    /**\n     * Returns an instance short name.\n     * @summary Get Instance Short Name\n     * @param {string} worldId\n     * @param {string} instanceId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getShortName: function (worldId, instanceId, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          // verify required parameter 'worldId' is not null or undefined\n          common_1.assertParamExists('getShortName', 'worldId', worldId); // verify required parameter 'instanceId' is not null or undefined\n\n          common_1.assertParamExists('getShortName', 'instanceId', instanceId);\n          localVarPath = \"/instances/{worldId}:{instanceId}/shortName\".replace(\"{\" + \"worldId\" + \"}\", encodeURIComponent(String(worldId))).replace(\"{\" + \"instanceId\" + \"}\", encodeURIComponent(String(instanceId)));\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'GET'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {}; // authentication apiKeyCookie required\n          // authentication authCookie required\n\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    },\n\n    /**\n     * Sends an invite to the instance to yourself.\n     * @summary Send Self Invite\n     * @param {string} worldId\n     * @param {string} instanceId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    sendSelfInvite: function (worldId, instanceId, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          // verify required parameter 'worldId' is not null or undefined\n          common_1.assertParamExists('sendSelfInvite', 'worldId', worldId); // verify required parameter 'instanceId' is not null or undefined\n\n          common_1.assertParamExists('sendSelfInvite', 'instanceId', instanceId);\n          localVarPath = \"/instances/{worldId}:{instanceId}/invite\".replace(\"{\" + \"worldId\" + \"}\", encodeURIComponent(String(worldId))).replace(\"{\" + \"instanceId\" + \"}\", encodeURIComponent(String(instanceId)));\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'POST'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {}; // authentication apiKeyCookie required\n          // authentication authCookie required\n\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    }\n  };\n};\n/**\n * InstancesApi - functional programming interface\n * @export\n */\n\n\nexports.InstancesApiFp = function (configuration) {\n  var localVarAxiosParamCreator = exports.InstancesApiAxiosParamCreator(configuration);\n  return {\n    /**\n     * Returns an instance. Please read [Instances Tutorial](https://vrchatapi.github.io/tutorials/instances/) for more information on Instances.  If an invalid instanceId is provided, this endpoint will simply return \\\"null\\\"!\n     * @summary Get Instance\n     * @param {string} worldId\n     * @param {string} instanceId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getInstance: function (worldId, instanceId, options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.getInstance(worldId, instanceId, options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    },\n\n    /**\n     * Returns an instance short name.\n     * @summary Get Instance Short Name\n     * @param {string} worldId\n     * @param {string} instanceId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getShortName: function (worldId, instanceId, options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.getShortName(worldId, instanceId, options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    },\n\n    /**\n     * Sends an invite to the instance to yourself.\n     * @summary Send Self Invite\n     * @param {string} worldId\n     * @param {string} instanceId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    sendSelfInvite: function (worldId, instanceId, options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.sendSelfInvite(worldId, instanceId, options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    }\n  };\n};\n/**\n * InstancesApi - factory interface\n * @export\n */\n\n\nexports.InstancesApiFactory = function (configuration, basePath, axios) {\n  var localVarFp = exports.InstancesApiFp(configuration);\n  return {\n    /**\n     * Returns an instance. Please read [Instances Tutorial](https://vrchatapi.github.io/tutorials/instances/) for more information on Instances.  If an invalid instanceId is provided, this endpoint will simply return \\\"null\\\"!\n     * @summary Get Instance\n     * @param {string} worldId\n     * @param {string} instanceId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getInstance: function (worldId, instanceId, options) {\n      return localVarFp.getInstance(worldId, instanceId, options).then(function (request) {\n        return request(axios, basePath);\n      });\n    },\n\n    /**\n     * Returns an instance short name.\n     * @summary Get Instance Short Name\n     * @param {string} worldId\n     * @param {string} instanceId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getShortName: function (worldId, instanceId, options) {\n      return localVarFp.getShortName(worldId, instanceId, options).then(function (request) {\n        return request(axios, basePath);\n      });\n    },\n\n    /**\n     * Sends an invite to the instance to yourself.\n     * @summary Send Self Invite\n     * @param {string} worldId\n     * @param {string} instanceId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    sendSelfInvite: function (worldId, instanceId, options) {\n      return localVarFp.sendSelfInvite(worldId, instanceId, options).then(function (request) {\n        return request(axios, basePath);\n      });\n    }\n  };\n};\n/**\n * InstancesApi - object-oriented interface\n * @export\n * @class InstancesApi\n * @extends {BaseAPI}\n */\n\n\nvar InstancesApi =\n/** @class */\nfunction (_super) {\n  __extends(InstancesApi, _super);\n\n  function InstancesApi() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * Returns an instance. Please read [Instances Tutorial](https://vrchatapi.github.io/tutorials/instances/) for more information on Instances.  If an invalid instanceId is provided, this endpoint will simply return \\\"null\\\"!\n   * @summary Get Instance\n   * @param {string} worldId\n   * @param {string} instanceId\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof InstancesApi\n   */\n\n\n  InstancesApi.prototype.getInstance = function (worldId, instanceId, options) {\n    var _this = this;\n\n    return exports.InstancesApiFp(this.configuration).getInstance(worldId, instanceId, options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n  /**\n   * Returns an instance short name.\n   * @summary Get Instance Short Name\n   * @param {string} worldId\n   * @param {string} instanceId\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof InstancesApi\n   */\n\n\n  InstancesApi.prototype.getShortName = function (worldId, instanceId, options) {\n    var _this = this;\n\n    return exports.InstancesApiFp(this.configuration).getShortName(worldId, instanceId, options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n  /**\n   * Sends an invite to the instance to yourself.\n   * @summary Send Self Invite\n   * @param {string} worldId\n   * @param {string} instanceId\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof InstancesApi\n   */\n\n\n  InstancesApi.prototype.sendSelfInvite = function (worldId, instanceId, options) {\n    var _this = this;\n\n    return exports.InstancesApiFp(this.configuration).sendSelfInvite(worldId, instanceId, options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n\n  return InstancesApi;\n}(base_1.BaseAPI);\n\nexports.InstancesApi = InstancesApi;\n/**\n * InviteApi - axios parameter creator\n * @export\n */\n\nexports.InviteApiAxiosParamCreator = function (configuration) {\n  var _this = this;\n\n  return {\n    /**\n     * Returns a single Invite Message. This returns the exact same information but less than `getInviteMessages`. Admin Credentials are required to view messages of other users!  Message type refers to a different collection of messages, used during different types of responses.  * `message` = Message during a normal invite * `response` = Message when replying to a message * `request` = Message when requesting an invite * `requestResponse` = Message when replying to a request for invite\n     * @summary Get Invite Message\n     * @param {string} userId\n     * @param {'message' | 'response' | 'request' | 'requestResponse'} messageType\n     * @param {number} slot\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getInviteMessage: function (userId, messageType, slot, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          // verify required parameter 'userId' is not null or undefined\n          common_1.assertParamExists('getInviteMessage', 'userId', userId); // verify required parameter 'messageType' is not null or undefined\n\n          common_1.assertParamExists('getInviteMessage', 'messageType', messageType); // verify required parameter 'slot' is not null or undefined\n\n          common_1.assertParamExists('getInviteMessage', 'slot', slot);\n          localVarPath = \"/message/{userId}/{messageType}/{slot}\".replace(\"{\" + \"userId\" + \"}\", encodeURIComponent(String(userId))).replace(\"{\" + \"messageType\" + \"}\", encodeURIComponent(String(messageType))).replace(\"{\" + \"slot\" + \"}\", encodeURIComponent(String(slot)));\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'GET'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {}; // authentication apiKeyCookie required\n          // authentication authCookie required\n\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    },\n\n    /**\n     * Returns a list of all the users Invite Messages. Admin Credentials are required to view messages of other users!  Message type refers to a different collection of messages, used during different types of responses.  * `message` = Message during a normal invite * `response` = Message when replying to a message * `request` = Message when requesting an invite * `requestResponse` = Message when replying to a request for invite\n     * @summary List Invite Messages\n     * @param {string} userId\n     * @param {'message' | 'response' | 'request' | 'requestResponse'} messageType\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getInviteMessages: function (userId, messageType, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          // verify required parameter 'userId' is not null or undefined\n          common_1.assertParamExists('getInviteMessages', 'userId', userId); // verify required parameter 'messageType' is not null or undefined\n\n          common_1.assertParamExists('getInviteMessages', 'messageType', messageType);\n          localVarPath = \"/message/{userId}/{messageType}\".replace(\"{\" + \"userId\" + \"}\", encodeURIComponent(String(userId))).replace(\"{\" + \"messageType\" + \"}\", encodeURIComponent(String(messageType)));\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'GET'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {}; // authentication apiKeyCookie required\n          // authentication authCookie required\n\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    },\n\n    /**\n     * Sends an invite to a user. Returns the Notification of type `invite` that was sent.\n     * @summary Invite User\n     * @param {string} userId\n     * @param {InviteRequest} [inviteRequest] Slot number of the Invite Message to use when inviting a user.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    inviteUser: function (userId, inviteRequest, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          // verify required parameter 'userId' is not null or undefined\n          common_1.assertParamExists('inviteUser', 'userId', userId);\n          localVarPath = \"/invite/{userId}\".replace(\"{\" + \"userId\" + \"}\", encodeURIComponent(String(userId)));\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'POST'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {}; // authentication apiKeyCookie required\n          // authentication authCookie required\n\n          localVarHeaderParameter['Content-Type'] = 'application/json';\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          localVarRequestOptions.data = common_1.serializeDataIfNeeded(inviteRequest, localVarRequestOptions, configuration);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    },\n\n    /**\n     * Requests an invite from a user. Returns the Notification of type `requestInvite` that was sent.\n     * @summary Request Invite\n     * @param {string} userId\n     * @param {RequestInviteRequest} [requestInviteRequest] Slot number of the Request Message to use when request an invite.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    requestInvite: function (userId, requestInviteRequest, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          // verify required parameter 'userId' is not null or undefined\n          common_1.assertParamExists('requestInvite', 'userId', userId);\n          localVarPath = \"/requestInvite/{userId}\".replace(\"{\" + \"userId\" + \"}\", encodeURIComponent(String(userId)));\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'POST'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {}; // authentication apiKeyCookie required\n          // authentication authCookie required\n\n          localVarHeaderParameter['Content-Type'] = 'application/json';\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          localVarRequestOptions.data = common_1.serializeDataIfNeeded(requestInviteRequest, localVarRequestOptions, configuration);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    },\n\n    /**\n     * Resets a single Invite Message back to its original message, and then returns a list of all of them. Admin Credentials are required to update messages of other users!  Resetting a message respects the rate-limit, so it is not possible to reset within the 60 minutes countdown. Resetting it does however not set the rate-limit to 60 like when editing it. It is possible to edit it right after resetting it. Trying to edit a message before the cooldown timer expires results in a 429 \\\"Too Fast Error\\\".  Message type refers to a different collection of messages, used during different types of responses.  * `message` = Message during a normal invite * `response` = Message when replying to a message * `request` = Message when requesting an invite * `requestResponse` = Message when replying to a request for invite  The DELETE endpoint does not have/require any request body.\n     * @summary Reset Invite Message\n     * @param {string} userId\n     * @param {'message' | 'response' | 'request' | 'requestResponse'} messageType\n     * @param {number} slot\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    resetInviteMessage: function (userId, messageType, slot, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          // verify required parameter 'userId' is not null or undefined\n          common_1.assertParamExists('resetInviteMessage', 'userId', userId); // verify required parameter 'messageType' is not null or undefined\n\n          common_1.assertParamExists('resetInviteMessage', 'messageType', messageType); // verify required parameter 'slot' is not null or undefined\n\n          common_1.assertParamExists('resetInviteMessage', 'slot', slot);\n          localVarPath = \"/message/{userId}/{messageType}/{slot}\".replace(\"{\" + \"userId\" + \"}\", encodeURIComponent(String(userId))).replace(\"{\" + \"messageType\" + \"}\", encodeURIComponent(String(messageType))).replace(\"{\" + \"slot\" + \"}\", encodeURIComponent(String(slot)));\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'DELETE'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {}; // authentication apiKeyCookie required\n          // authentication authCookie required\n\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    },\n\n    /**\n     * Respond to an invite request by sending a world invite to the requesting user. `:notificationId` is the ID of the requesting notification.\n     * @summary Respond Invite\n     * @param {string} notificationId\n     * @param {InviteResponse} [inviteResponse] Slot number of the Response Message to use when responding to a user.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    respondInvite: function (notificationId, inviteResponse, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          // verify required parameter 'notificationId' is not null or undefined\n          common_1.assertParamExists('respondInvite', 'notificationId', notificationId);\n          localVarPath = \"/invite/{notificationId}/response\".replace(\"{\" + \"notificationId\" + \"}\", encodeURIComponent(String(notificationId)));\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'POST'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {}; // authentication apiKeyCookie required\n          // authentication authCookie required\n\n          localVarHeaderParameter['Content-Type'] = 'application/json';\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          localVarRequestOptions.data = common_1.serializeDataIfNeeded(inviteResponse, localVarRequestOptions, configuration);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    },\n\n    /**\n     * Updates a single Invite Message and then returns a list of all of them. Admin Credentials are required to update messages of other users!  Updating a message automatically sets the cooldown timer to 60 minutes. Trying to edit a message before the cooldown timer expires results in a 429 \\\"Too Fast Error\\\".  Message type refers to a different collection of messages, used during different types of responses.  * `message` = Message during a normal invite * `response` = Message when replying to a message * `request` = Message when requesting an invite * `requestResponse` = Message when replying to a request for invite\n     * @summary Update Invite Message\n     * @param {string} userId\n     * @param {'message' | 'response' | 'request' | 'requestResponse'} messageType\n     * @param {number} slot\n     * @param {UpdateInviteMessageRequest} [updateInviteMessageRequest] Message of what to set the invite message to.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateInviteMessage: function (userId, messageType, slot, updateInviteMessageRequest, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          // verify required parameter 'userId' is not null or undefined\n          common_1.assertParamExists('updateInviteMessage', 'userId', userId); // verify required parameter 'messageType' is not null or undefined\n\n          common_1.assertParamExists('updateInviteMessage', 'messageType', messageType); // verify required parameter 'slot' is not null or undefined\n\n          common_1.assertParamExists('updateInviteMessage', 'slot', slot);\n          localVarPath = \"/message/{userId}/{messageType}/{slot}\".replace(\"{\" + \"userId\" + \"}\", encodeURIComponent(String(userId))).replace(\"{\" + \"messageType\" + \"}\", encodeURIComponent(String(messageType))).replace(\"{\" + \"slot\" + \"}\", encodeURIComponent(String(slot)));\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'PUT'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {}; // authentication apiKeyCookie required\n          // authentication authCookie required\n\n          localVarHeaderParameter['Content-Type'] = 'application/json';\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          localVarRequestOptions.data = common_1.serializeDataIfNeeded(updateInviteMessageRequest, localVarRequestOptions, configuration);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    }\n  };\n};\n/**\n * InviteApi - functional programming interface\n * @export\n */\n\n\nexports.InviteApiFp = function (configuration) {\n  var localVarAxiosParamCreator = exports.InviteApiAxiosParamCreator(configuration);\n  return {\n    /**\n     * Returns a single Invite Message. This returns the exact same information but less than `getInviteMessages`. Admin Credentials are required to view messages of other users!  Message type refers to a different collection of messages, used during different types of responses.  * `message` = Message during a normal invite * `response` = Message when replying to a message * `request` = Message when requesting an invite * `requestResponse` = Message when replying to a request for invite\n     * @summary Get Invite Message\n     * @param {string} userId\n     * @param {'message' | 'response' | 'request' | 'requestResponse'} messageType\n     * @param {number} slot\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getInviteMessage: function (userId, messageType, slot, options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.getInviteMessage(userId, messageType, slot, options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    },\n\n    /**\n     * Returns a list of all the users Invite Messages. Admin Credentials are required to view messages of other users!  Message type refers to a different collection of messages, used during different types of responses.  * `message` = Message during a normal invite * `response` = Message when replying to a message * `request` = Message when requesting an invite * `requestResponse` = Message when replying to a request for invite\n     * @summary List Invite Messages\n     * @param {string} userId\n     * @param {'message' | 'response' | 'request' | 'requestResponse'} messageType\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getInviteMessages: function (userId, messageType, options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.getInviteMessages(userId, messageType, options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    },\n\n    /**\n     * Sends an invite to a user. Returns the Notification of type `invite` that was sent.\n     * @summary Invite User\n     * @param {string} userId\n     * @param {InviteRequest} [inviteRequest] Slot number of the Invite Message to use when inviting a user.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    inviteUser: function (userId, inviteRequest, options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.inviteUser(userId, inviteRequest, options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    },\n\n    /**\n     * Requests an invite from a user. Returns the Notification of type `requestInvite` that was sent.\n     * @summary Request Invite\n     * @param {string} userId\n     * @param {RequestInviteRequest} [requestInviteRequest] Slot number of the Request Message to use when request an invite.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    requestInvite: function (userId, requestInviteRequest, options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.requestInvite(userId, requestInviteRequest, options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    },\n\n    /**\n     * Resets a single Invite Message back to its original message, and then returns a list of all of them. Admin Credentials are required to update messages of other users!  Resetting a message respects the rate-limit, so it is not possible to reset within the 60 minutes countdown. Resetting it does however not set the rate-limit to 60 like when editing it. It is possible to edit it right after resetting it. Trying to edit a message before the cooldown timer expires results in a 429 \\\"Too Fast Error\\\".  Message type refers to a different collection of messages, used during different types of responses.  * `message` = Message during a normal invite * `response` = Message when replying to a message * `request` = Message when requesting an invite * `requestResponse` = Message when replying to a request for invite  The DELETE endpoint does not have/require any request body.\n     * @summary Reset Invite Message\n     * @param {string} userId\n     * @param {'message' | 'response' | 'request' | 'requestResponse'} messageType\n     * @param {number} slot\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    resetInviteMessage: function (userId, messageType, slot, options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.resetInviteMessage(userId, messageType, slot, options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    },\n\n    /**\n     * Respond to an invite request by sending a world invite to the requesting user. `:notificationId` is the ID of the requesting notification.\n     * @summary Respond Invite\n     * @param {string} notificationId\n     * @param {InviteResponse} [inviteResponse] Slot number of the Response Message to use when responding to a user.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    respondInvite: function (notificationId, inviteResponse, options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.respondInvite(notificationId, inviteResponse, options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    },\n\n    /**\n     * Updates a single Invite Message and then returns a list of all of them. Admin Credentials are required to update messages of other users!  Updating a message automatically sets the cooldown timer to 60 minutes. Trying to edit a message before the cooldown timer expires results in a 429 \\\"Too Fast Error\\\".  Message type refers to a different collection of messages, used during different types of responses.  * `message` = Message during a normal invite * `response` = Message when replying to a message * `request` = Message when requesting an invite * `requestResponse` = Message when replying to a request for invite\n     * @summary Update Invite Message\n     * @param {string} userId\n     * @param {'message' | 'response' | 'request' | 'requestResponse'} messageType\n     * @param {number} slot\n     * @param {UpdateInviteMessageRequest} [updateInviteMessageRequest] Message of what to set the invite message to.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateInviteMessage: function (userId, messageType, slot, updateInviteMessageRequest, options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.updateInviteMessage(userId, messageType, slot, updateInviteMessageRequest, options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    }\n  };\n};\n/**\n * InviteApi - factory interface\n * @export\n */\n\n\nexports.InviteApiFactory = function (configuration, basePath, axios) {\n  var localVarFp = exports.InviteApiFp(configuration);\n  return {\n    /**\n     * Returns a single Invite Message. This returns the exact same information but less than `getInviteMessages`. Admin Credentials are required to view messages of other users!  Message type refers to a different collection of messages, used during different types of responses.  * `message` = Message during a normal invite * `response` = Message when replying to a message * `request` = Message when requesting an invite * `requestResponse` = Message when replying to a request for invite\n     * @summary Get Invite Message\n     * @param {string} userId\n     * @param {'message' | 'response' | 'request' | 'requestResponse'} messageType\n     * @param {number} slot\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getInviteMessage: function (userId, messageType, slot, options) {\n      return localVarFp.getInviteMessage(userId, messageType, slot, options).then(function (request) {\n        return request(axios, basePath);\n      });\n    },\n\n    /**\n     * Returns a list of all the users Invite Messages. Admin Credentials are required to view messages of other users!  Message type refers to a different collection of messages, used during different types of responses.  * `message` = Message during a normal invite * `response` = Message when replying to a message * `request` = Message when requesting an invite * `requestResponse` = Message when replying to a request for invite\n     * @summary List Invite Messages\n     * @param {string} userId\n     * @param {'message' | 'response' | 'request' | 'requestResponse'} messageType\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getInviteMessages: function (userId, messageType, options) {\n      return localVarFp.getInviteMessages(userId, messageType, options).then(function (request) {\n        return request(axios, basePath);\n      });\n    },\n\n    /**\n     * Sends an invite to a user. Returns the Notification of type `invite` that was sent.\n     * @summary Invite User\n     * @param {string} userId\n     * @param {InviteRequest} [inviteRequest] Slot number of the Invite Message to use when inviting a user.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    inviteUser: function (userId, inviteRequest, options) {\n      return localVarFp.inviteUser(userId, inviteRequest, options).then(function (request) {\n        return request(axios, basePath);\n      });\n    },\n\n    /**\n     * Requests an invite from a user. Returns the Notification of type `requestInvite` that was sent.\n     * @summary Request Invite\n     * @param {string} userId\n     * @param {RequestInviteRequest} [requestInviteRequest] Slot number of the Request Message to use when request an invite.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    requestInvite: function (userId, requestInviteRequest, options) {\n      return localVarFp.requestInvite(userId, requestInviteRequest, options).then(function (request) {\n        return request(axios, basePath);\n      });\n    },\n\n    /**\n     * Resets a single Invite Message back to its original message, and then returns a list of all of them. Admin Credentials are required to update messages of other users!  Resetting a message respects the rate-limit, so it is not possible to reset within the 60 minutes countdown. Resetting it does however not set the rate-limit to 60 like when editing it. It is possible to edit it right after resetting it. Trying to edit a message before the cooldown timer expires results in a 429 \\\"Too Fast Error\\\".  Message type refers to a different collection of messages, used during different types of responses.  * `message` = Message during a normal invite * `response` = Message when replying to a message * `request` = Message when requesting an invite * `requestResponse` = Message when replying to a request for invite  The DELETE endpoint does not have/require any request body.\n     * @summary Reset Invite Message\n     * @param {string} userId\n     * @param {'message' | 'response' | 'request' | 'requestResponse'} messageType\n     * @param {number} slot\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    resetInviteMessage: function (userId, messageType, slot, options) {\n      return localVarFp.resetInviteMessage(userId, messageType, slot, options).then(function (request) {\n        return request(axios, basePath);\n      });\n    },\n\n    /**\n     * Respond to an invite request by sending a world invite to the requesting user. `:notificationId` is the ID of the requesting notification.\n     * @summary Respond Invite\n     * @param {string} notificationId\n     * @param {InviteResponse} [inviteResponse] Slot number of the Response Message to use when responding to a user.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    respondInvite: function (notificationId, inviteResponse, options) {\n      return localVarFp.respondInvite(notificationId, inviteResponse, options).then(function (request) {\n        return request(axios, basePath);\n      });\n    },\n\n    /**\n     * Updates a single Invite Message and then returns a list of all of them. Admin Credentials are required to update messages of other users!  Updating a message automatically sets the cooldown timer to 60 minutes. Trying to edit a message before the cooldown timer expires results in a 429 \\\"Too Fast Error\\\".  Message type refers to a different collection of messages, used during different types of responses.  * `message` = Message during a normal invite * `response` = Message when replying to a message * `request` = Message when requesting an invite * `requestResponse` = Message when replying to a request for invite\n     * @summary Update Invite Message\n     * @param {string} userId\n     * @param {'message' | 'response' | 'request' | 'requestResponse'} messageType\n     * @param {number} slot\n     * @param {UpdateInviteMessageRequest} [updateInviteMessageRequest] Message of what to set the invite message to.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateInviteMessage: function (userId, messageType, slot, updateInviteMessageRequest, options) {\n      return localVarFp.updateInviteMessage(userId, messageType, slot, updateInviteMessageRequest, options).then(function (request) {\n        return request(axios, basePath);\n      });\n    }\n  };\n};\n/**\n * InviteApi - object-oriented interface\n * @export\n * @class InviteApi\n * @extends {BaseAPI}\n */\n\n\nvar InviteApi =\n/** @class */\nfunction (_super) {\n  __extends(InviteApi, _super);\n\n  function InviteApi() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * Returns a single Invite Message. This returns the exact same information but less than `getInviteMessages`. Admin Credentials are required to view messages of other users!  Message type refers to a different collection of messages, used during different types of responses.  * `message` = Message during a normal invite * `response` = Message when replying to a message * `request` = Message when requesting an invite * `requestResponse` = Message when replying to a request for invite\n   * @summary Get Invite Message\n   * @param {string} userId\n   * @param {'message' | 'response' | 'request' | 'requestResponse'} messageType\n   * @param {number} slot\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof InviteApi\n   */\n\n\n  InviteApi.prototype.getInviteMessage = function (userId, messageType, slot, options) {\n    var _this = this;\n\n    return exports.InviteApiFp(this.configuration).getInviteMessage(userId, messageType, slot, options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n  /**\n   * Returns a list of all the users Invite Messages. Admin Credentials are required to view messages of other users!  Message type refers to a different collection of messages, used during different types of responses.  * `message` = Message during a normal invite * `response` = Message when replying to a message * `request` = Message when requesting an invite * `requestResponse` = Message when replying to a request for invite\n   * @summary List Invite Messages\n   * @param {string} userId\n   * @param {'message' | 'response' | 'request' | 'requestResponse'} messageType\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof InviteApi\n   */\n\n\n  InviteApi.prototype.getInviteMessages = function (userId, messageType, options) {\n    var _this = this;\n\n    return exports.InviteApiFp(this.configuration).getInviteMessages(userId, messageType, options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n  /**\n   * Sends an invite to a user. Returns the Notification of type `invite` that was sent.\n   * @summary Invite User\n   * @param {string} userId\n   * @param {InviteRequest} [inviteRequest] Slot number of the Invite Message to use when inviting a user.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof InviteApi\n   */\n\n\n  InviteApi.prototype.inviteUser = function (userId, inviteRequest, options) {\n    var _this = this;\n\n    return exports.InviteApiFp(this.configuration).inviteUser(userId, inviteRequest, options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n  /**\n   * Requests an invite from a user. Returns the Notification of type `requestInvite` that was sent.\n   * @summary Request Invite\n   * @param {string} userId\n   * @param {RequestInviteRequest} [requestInviteRequest] Slot number of the Request Message to use when request an invite.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof InviteApi\n   */\n\n\n  InviteApi.prototype.requestInvite = function (userId, requestInviteRequest, options) {\n    var _this = this;\n\n    return exports.InviteApiFp(this.configuration).requestInvite(userId, requestInviteRequest, options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n  /**\n   * Resets a single Invite Message back to its original message, and then returns a list of all of them. Admin Credentials are required to update messages of other users!  Resetting a message respects the rate-limit, so it is not possible to reset within the 60 minutes countdown. Resetting it does however not set the rate-limit to 60 like when editing it. It is possible to edit it right after resetting it. Trying to edit a message before the cooldown timer expires results in a 429 \\\"Too Fast Error\\\".  Message type refers to a different collection of messages, used during different types of responses.  * `message` = Message during a normal invite * `response` = Message when replying to a message * `request` = Message when requesting an invite * `requestResponse` = Message when replying to a request for invite  The DELETE endpoint does not have/require any request body.\n   * @summary Reset Invite Message\n   * @param {string} userId\n   * @param {'message' | 'response' | 'request' | 'requestResponse'} messageType\n   * @param {number} slot\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof InviteApi\n   */\n\n\n  InviteApi.prototype.resetInviteMessage = function (userId, messageType, slot, options) {\n    var _this = this;\n\n    return exports.InviteApiFp(this.configuration).resetInviteMessage(userId, messageType, slot, options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n  /**\n   * Respond to an invite request by sending a world invite to the requesting user. `:notificationId` is the ID of the requesting notification.\n   * @summary Respond Invite\n   * @param {string} notificationId\n   * @param {InviteResponse} [inviteResponse] Slot number of the Response Message to use when responding to a user.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof InviteApi\n   */\n\n\n  InviteApi.prototype.respondInvite = function (notificationId, inviteResponse, options) {\n    var _this = this;\n\n    return exports.InviteApiFp(this.configuration).respondInvite(notificationId, inviteResponse, options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n  /**\n   * Updates a single Invite Message and then returns a list of all of them. Admin Credentials are required to update messages of other users!  Updating a message automatically sets the cooldown timer to 60 minutes. Trying to edit a message before the cooldown timer expires results in a 429 \\\"Too Fast Error\\\".  Message type refers to a different collection of messages, used during different types of responses.  * `message` = Message during a normal invite * `response` = Message when replying to a message * `request` = Message when requesting an invite * `requestResponse` = Message when replying to a request for invite\n   * @summary Update Invite Message\n   * @param {string} userId\n   * @param {'message' | 'response' | 'request' | 'requestResponse'} messageType\n   * @param {number} slot\n   * @param {UpdateInviteMessageRequest} [updateInviteMessageRequest] Message of what to set the invite message to.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof InviteApi\n   */\n\n\n  InviteApi.prototype.updateInviteMessage = function (userId, messageType, slot, updateInviteMessageRequest, options) {\n    var _this = this;\n\n    return exports.InviteApiFp(this.configuration).updateInviteMessage(userId, messageType, slot, updateInviteMessageRequest, options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n\n  return InviteApi;\n}(base_1.BaseAPI);\n\nexports.InviteApi = InviteApi;\n/**\n * NotificationsApi - axios parameter creator\n * @export\n */\n\nexports.NotificationsApiAxiosParamCreator = function (configuration) {\n  var _this = this;\n\n  return {\n    /**\n     * Accept a friend request by notification `frq_` ID. Friend requests can be found using the NotificationsAPI `getNotifications` by filtering of type `friendRequest`.\n     * @summary Accept Friend Request\n     * @param {string} notificationId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    acceptFriendRequest: function (notificationId, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          // verify required parameter 'notificationId' is not null or undefined\n          common_1.assertParamExists('acceptFriendRequest', 'notificationId', notificationId);\n          localVarPath = \"/auth/user/notifications/{notificationId}/accept\".replace(\"{\" + \"notificationId\" + \"}\", encodeURIComponent(String(notificationId)));\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'PUT'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {}; // authentication apiKeyCookie required\n          // authentication authCookie required\n\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    },\n\n    /**\n     * Clear **all** notifications.\n     * @summary Clear All Notifications\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    clearNotifications: function (options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          localVarPath = \"/auth/user/notifications/clear\";\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'PUT'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {}; // authentication apiKeyCookie required\n          // authentication authCookie required\n\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    },\n\n    /**\n     * Delete a notification.\n     * @summary Delete Notification\n     * @param {string} notificationId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteNotification: function (notificationId, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          // verify required parameter 'notificationId' is not null or undefined\n          common_1.assertParamExists('deleteNotification', 'notificationId', notificationId);\n          localVarPath = \"/auth/user/notifications/{notificationId}/hide\".replace(\"{\" + \"notificationId\" + \"}\", encodeURIComponent(String(notificationId)));\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'PUT'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {}; // authentication apiKeyCookie required\n          // authentication authCookie required\n\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    },\n\n    /**\n     * Retrieve all of the current user\\'s notifications.\n     * @summary List Notifications\n     * @param {string} [type] Only send notifications of this type (can use &#x60;all&#x60; for all).\n     * @param {boolean} [sent] Return notifications sent by the user. Must be false or omitted.\n     * @param {boolean} [hidden] Whether to return hidden or non-hidden notifications. True only allowed on type &#x60;friendRequest&#x60;.\n     * @param {string} [after] Only return notifications sent after this Date. Ignored if type is &#x60;friendRequest&#x60;.\n     * @param {number} [n] The number of objects to return.\n     * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getNotifications: function (type, sent, hidden, after, n, offset, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          localVarPath = \"/auth/user/notifications\";\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'GET'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {}; // authentication apiKeyCookie required\n          // authentication authCookie required\n\n          if (type !== undefined) {\n            localVarQueryParameter['type'] = type;\n          }\n\n          if (sent !== undefined) {\n            localVarQueryParameter['sent'] = sent;\n          }\n\n          if (hidden !== undefined) {\n            localVarQueryParameter['hidden'] = hidden;\n          }\n\n          if (after !== undefined) {\n            localVarQueryParameter['after'] = after;\n          }\n\n          if (n !== undefined) {\n            localVarQueryParameter['n'] = n;\n          }\n\n          if (offset !== undefined) {\n            localVarQueryParameter['offset'] = offset;\n          }\n\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    },\n\n    /**\n     * Mark a notification as seen.\n     * @summary Mark Notification As Read\n     * @param {string} notificationId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    markNotificationAsRead: function (notificationId, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          // verify required parameter 'notificationId' is not null or undefined\n          common_1.assertParamExists('markNotificationAsRead', 'notificationId', notificationId);\n          localVarPath = \"/auth/user/notifications/{notificationId}/see\".replace(\"{\" + \"notificationId\" + \"}\", encodeURIComponent(String(notificationId)));\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'PUT'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {}; // authentication apiKeyCookie required\n          // authentication authCookie required\n\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    }\n  };\n};\n/**\n * NotificationsApi - functional programming interface\n * @export\n */\n\n\nexports.NotificationsApiFp = function (configuration) {\n  var localVarAxiosParamCreator = exports.NotificationsApiAxiosParamCreator(configuration);\n  return {\n    /**\n     * Accept a friend request by notification `frq_` ID. Friend requests can be found using the NotificationsAPI `getNotifications` by filtering of type `friendRequest`.\n     * @summary Accept Friend Request\n     * @param {string} notificationId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    acceptFriendRequest: function (notificationId, options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.acceptFriendRequest(notificationId, options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    },\n\n    /**\n     * Clear **all** notifications.\n     * @summary Clear All Notifications\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    clearNotifications: function (options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.clearNotifications(options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    },\n\n    /**\n     * Delete a notification.\n     * @summary Delete Notification\n     * @param {string} notificationId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteNotification: function (notificationId, options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.deleteNotification(notificationId, options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    },\n\n    /**\n     * Retrieve all of the current user\\'s notifications.\n     * @summary List Notifications\n     * @param {string} [type] Only send notifications of this type (can use &#x60;all&#x60; for all).\n     * @param {boolean} [sent] Return notifications sent by the user. Must be false or omitted.\n     * @param {boolean} [hidden] Whether to return hidden or non-hidden notifications. True only allowed on type &#x60;friendRequest&#x60;.\n     * @param {string} [after] Only return notifications sent after this Date. Ignored if type is &#x60;friendRequest&#x60;.\n     * @param {number} [n] The number of objects to return.\n     * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getNotifications: function (type, sent, hidden, after, n, offset, options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.getNotifications(type, sent, hidden, after, n, offset, options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    },\n\n    /**\n     * Mark a notification as seen.\n     * @summary Mark Notification As Read\n     * @param {string} notificationId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    markNotificationAsRead: function (notificationId, options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.markNotificationAsRead(notificationId, options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    }\n  };\n};\n/**\n * NotificationsApi - factory interface\n * @export\n */\n\n\nexports.NotificationsApiFactory = function (configuration, basePath, axios) {\n  var localVarFp = exports.NotificationsApiFp(configuration);\n  return {\n    /**\n     * Accept a friend request by notification `frq_` ID. Friend requests can be found using the NotificationsAPI `getNotifications` by filtering of type `friendRequest`.\n     * @summary Accept Friend Request\n     * @param {string} notificationId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    acceptFriendRequest: function (notificationId, options) {\n      return localVarFp.acceptFriendRequest(notificationId, options).then(function (request) {\n        return request(axios, basePath);\n      });\n    },\n\n    /**\n     * Clear **all** notifications.\n     * @summary Clear All Notifications\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    clearNotifications: function (options) {\n      return localVarFp.clearNotifications(options).then(function (request) {\n        return request(axios, basePath);\n      });\n    },\n\n    /**\n     * Delete a notification.\n     * @summary Delete Notification\n     * @param {string} notificationId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteNotification: function (notificationId, options) {\n      return localVarFp.deleteNotification(notificationId, options).then(function (request) {\n        return request(axios, basePath);\n      });\n    },\n\n    /**\n     * Retrieve all of the current user\\'s notifications.\n     * @summary List Notifications\n     * @param {string} [type] Only send notifications of this type (can use &#x60;all&#x60; for all).\n     * @param {boolean} [sent] Return notifications sent by the user. Must be false or omitted.\n     * @param {boolean} [hidden] Whether to return hidden or non-hidden notifications. True only allowed on type &#x60;friendRequest&#x60;.\n     * @param {string} [after] Only return notifications sent after this Date. Ignored if type is &#x60;friendRequest&#x60;.\n     * @param {number} [n] The number of objects to return.\n     * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getNotifications: function (type, sent, hidden, after, n, offset, options) {\n      return localVarFp.getNotifications(type, sent, hidden, after, n, offset, options).then(function (request) {\n        return request(axios, basePath);\n      });\n    },\n\n    /**\n     * Mark a notification as seen.\n     * @summary Mark Notification As Read\n     * @param {string} notificationId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    markNotificationAsRead: function (notificationId, options) {\n      return localVarFp.markNotificationAsRead(notificationId, options).then(function (request) {\n        return request(axios, basePath);\n      });\n    }\n  };\n};\n/**\n * NotificationsApi - object-oriented interface\n * @export\n * @class NotificationsApi\n * @extends {BaseAPI}\n */\n\n\nvar NotificationsApi =\n/** @class */\nfunction (_super) {\n  __extends(NotificationsApi, _super);\n\n  function NotificationsApi() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * Accept a friend request by notification `frq_` ID. Friend requests can be found using the NotificationsAPI `getNotifications` by filtering of type `friendRequest`.\n   * @summary Accept Friend Request\n   * @param {string} notificationId\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof NotificationsApi\n   */\n\n\n  NotificationsApi.prototype.acceptFriendRequest = function (notificationId, options) {\n    var _this = this;\n\n    return exports.NotificationsApiFp(this.configuration).acceptFriendRequest(notificationId, options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n  /**\n   * Clear **all** notifications.\n   * @summary Clear All Notifications\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof NotificationsApi\n   */\n\n\n  NotificationsApi.prototype.clearNotifications = function (options) {\n    var _this = this;\n\n    return exports.NotificationsApiFp(this.configuration).clearNotifications(options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n  /**\n   * Delete a notification.\n   * @summary Delete Notification\n   * @param {string} notificationId\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof NotificationsApi\n   */\n\n\n  NotificationsApi.prototype.deleteNotification = function (notificationId, options) {\n    var _this = this;\n\n    return exports.NotificationsApiFp(this.configuration).deleteNotification(notificationId, options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n  /**\n   * Retrieve all of the current user\\'s notifications.\n   * @summary List Notifications\n   * @param {string} [type] Only send notifications of this type (can use &#x60;all&#x60; for all).\n   * @param {boolean} [sent] Return notifications sent by the user. Must be false or omitted.\n   * @param {boolean} [hidden] Whether to return hidden or non-hidden notifications. True only allowed on type &#x60;friendRequest&#x60;.\n   * @param {string} [after] Only return notifications sent after this Date. Ignored if type is &#x60;friendRequest&#x60;.\n   * @param {number} [n] The number of objects to return.\n   * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof NotificationsApi\n   */\n\n\n  NotificationsApi.prototype.getNotifications = function (type, sent, hidden, after, n, offset, options) {\n    var _this = this;\n\n    return exports.NotificationsApiFp(this.configuration).getNotifications(type, sent, hidden, after, n, offset, options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n  /**\n   * Mark a notification as seen.\n   * @summary Mark Notification As Read\n   * @param {string} notificationId\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof NotificationsApi\n   */\n\n\n  NotificationsApi.prototype.markNotificationAsRead = function (notificationId, options) {\n    var _this = this;\n\n    return exports.NotificationsApiFp(this.configuration).markNotificationAsRead(notificationId, options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n\n  return NotificationsApi;\n}(base_1.BaseAPI);\n\nexports.NotificationsApi = NotificationsApi;\n/**\n * PermissionsApi - axios parameter creator\n * @export\n */\n\nexports.PermissionsApiAxiosParamCreator = function (configuration) {\n  var _this = this;\n\n  return {\n    /**\n     * Returns a list of all permissions currently granted by the user. Permissions are assigned e.g. by subscribing to VRC+.\n     * @summary Get Assigned Permissions\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getAssignedPermissions: function (options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          localVarPath = \"/auth/permissions\";\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'GET'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {}; // authentication apiKeyCookie required\n          // authentication authCookie required\n\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    },\n\n    /**\n     * Returns a single permission. This endpoint is pretty useless, as it returns the exact same information as `/auth/permissions`.\n     * @summary Get Permission\n     * @param {string} permissionId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getPermission: function (permissionId, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          // verify required parameter 'permissionId' is not null or undefined\n          common_1.assertParamExists('getPermission', 'permissionId', permissionId);\n          localVarPath = \"/permissions/{permissionId}\".replace(\"{\" + \"permissionId\" + \"}\", encodeURIComponent(String(permissionId)));\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'GET'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {}; // authentication apiKeyCookie required\n          // authentication authCookie required\n\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    }\n  };\n};\n/**\n * PermissionsApi - functional programming interface\n * @export\n */\n\n\nexports.PermissionsApiFp = function (configuration) {\n  var localVarAxiosParamCreator = exports.PermissionsApiAxiosParamCreator(configuration);\n  return {\n    /**\n     * Returns a list of all permissions currently granted by the user. Permissions are assigned e.g. by subscribing to VRC+.\n     * @summary Get Assigned Permissions\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getAssignedPermissions: function (options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.getAssignedPermissions(options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    },\n\n    /**\n     * Returns a single permission. This endpoint is pretty useless, as it returns the exact same information as `/auth/permissions`.\n     * @summary Get Permission\n     * @param {string} permissionId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getPermission: function (permissionId, options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.getPermission(permissionId, options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    }\n  };\n};\n/**\n * PermissionsApi - factory interface\n * @export\n */\n\n\nexports.PermissionsApiFactory = function (configuration, basePath, axios) {\n  var localVarFp = exports.PermissionsApiFp(configuration);\n  return {\n    /**\n     * Returns a list of all permissions currently granted by the user. Permissions are assigned e.g. by subscribing to VRC+.\n     * @summary Get Assigned Permissions\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getAssignedPermissions: function (options) {\n      return localVarFp.getAssignedPermissions(options).then(function (request) {\n        return request(axios, basePath);\n      });\n    },\n\n    /**\n     * Returns a single permission. This endpoint is pretty useless, as it returns the exact same information as `/auth/permissions`.\n     * @summary Get Permission\n     * @param {string} permissionId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getPermission: function (permissionId, options) {\n      return localVarFp.getPermission(permissionId, options).then(function (request) {\n        return request(axios, basePath);\n      });\n    }\n  };\n};\n/**\n * PermissionsApi - object-oriented interface\n * @export\n * @class PermissionsApi\n * @extends {BaseAPI}\n */\n\n\nvar PermissionsApi =\n/** @class */\nfunction (_super) {\n  __extends(PermissionsApi, _super);\n\n  function PermissionsApi() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * Returns a list of all permissions currently granted by the user. Permissions are assigned e.g. by subscribing to VRC+.\n   * @summary Get Assigned Permissions\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof PermissionsApi\n   */\n\n\n  PermissionsApi.prototype.getAssignedPermissions = function (options) {\n    var _this = this;\n\n    return exports.PermissionsApiFp(this.configuration).getAssignedPermissions(options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n  /**\n   * Returns a single permission. This endpoint is pretty useless, as it returns the exact same information as `/auth/permissions`.\n   * @summary Get Permission\n   * @param {string} permissionId\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof PermissionsApi\n   */\n\n\n  PermissionsApi.prototype.getPermission = function (permissionId, options) {\n    var _this = this;\n\n    return exports.PermissionsApiFp(this.configuration).getPermission(permissionId, options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n\n  return PermissionsApi;\n}(base_1.BaseAPI);\n\nexports.PermissionsApi = PermissionsApi;\n/**\n * PlayermoderationApi - axios parameter creator\n * @export\n */\n\nexports.PlayermoderationApiAxiosParamCreator = function (configuration) {\n  var _this = this;\n\n  return {\n    /**\n     * ⚠️ **This will delete every single player moderation you\\'ve ever made.**\n     * @summary Clear All Player Moderations\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    clearAllPlayerModerations: function (options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          localVarPath = \"/auth/user/playermoderations\";\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'DELETE'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {}; // authentication apiKeyCookie required\n          // authentication authCookie required\n\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    },\n\n    /**\n     * Deletes a specific player moderation based on it\\'s `pmod_` ID. The website uses `unmoderateUser` instead. You can delete the same player moderation multiple times successfully.\n     * @summary Delete Player Moderation\n     * @param {string} playerModerationId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deletePlayerModeration: function (playerModerationId, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          // verify required parameter 'playerModerationId' is not null or undefined\n          common_1.assertParamExists('deletePlayerModeration', 'playerModerationId', playerModerationId);\n          localVarPath = \"/auth/user/playermoderations/{playerModerationId}\".replace(\"{\" + \"playerModerationId\" + \"}\", encodeURIComponent(String(playerModerationId)));\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'DELETE'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {}; // authentication apiKeyCookie required\n          // authentication authCookie required\n\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    },\n\n    /**\n     * Returns a single Player Moderation. This returns the exact same amount of information as the more generalised `getPlayerModerations`.\n     * @summary Get Player Moderation\n     * @param {string} playerModerationId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getPlayerModeration: function (playerModerationId, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          // verify required parameter 'playerModerationId' is not null or undefined\n          common_1.assertParamExists('getPlayerModeration', 'playerModerationId', playerModerationId);\n          localVarPath = \"/auth/user/playermoderations/{playerModerationId}\".replace(\"{\" + \"playerModerationId\" + \"}\", encodeURIComponent(String(playerModerationId)));\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'GET'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {}; // authentication apiKeyCookie required\n          // authentication authCookie required\n\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    },\n\n    /**\n     * Returns a list of all player moderations made by **you**.  This endpoint does not have pagination, and will return *all* results. Use query parameters to limit your query if needed.\n     * @summary Search Player Moderations\n     * @param {string} [type] Must be one of PlayerModerationType, except unblock. Unblocking simply removes a block.\n     * @param {string} [targetUserId] Must be valid UserID.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getPlayerModerations: function (type, targetUserId, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          localVarPath = \"/auth/user/playermoderations\";\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'GET'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {}; // authentication apiKeyCookie required\n          // authentication authCookie required\n\n          if (type !== undefined) {\n            localVarQueryParameter['type'] = type;\n          }\n\n          if (targetUserId !== undefined) {\n            localVarQueryParameter['targetUserId'] = targetUserId;\n          }\n\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    },\n\n    /**\n     * Moderate a user, e.g. unmute them or show their avatar.  Please see the [Player Moderation docs](https://vrchatapi.github.io/docs/api/#tag--playermoderation) on what playerModerations are, and how they differ from staff moderations.\n     * @summary Moderate User\n     * @param {ModerateUserRequest} [moderateUserRequest]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    moderateUser: function (moderateUserRequest, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          localVarPath = \"/auth/user/playermoderations\";\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'POST'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {}; // authentication apiKeyCookie required\n          // authentication authCookie required\n\n          localVarHeaderParameter['Content-Type'] = 'application/json';\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          localVarRequestOptions.data = common_1.serializeDataIfNeeded(moderateUserRequest, localVarRequestOptions, configuration);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    },\n\n    /**\n     * Removes a player moderation previously added through `moderateUser`. E.g if you previously have shown their avatar, but now want to reset it to default.\n     * @summary Unmoderate User\n     * @param {ModerateUserRequest} [moderateUserRequest]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    unmoderateUser: function (moderateUserRequest, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          localVarPath = \"/auth/user/unplayermoderate\";\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'PUT'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {}; // authentication apiKeyCookie required\n          // authentication authCookie required\n\n          localVarHeaderParameter['Content-Type'] = 'application/json';\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          localVarRequestOptions.data = common_1.serializeDataIfNeeded(moderateUserRequest, localVarRequestOptions, configuration);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    }\n  };\n};\n/**\n * PlayermoderationApi - functional programming interface\n * @export\n */\n\n\nexports.PlayermoderationApiFp = function (configuration) {\n  var localVarAxiosParamCreator = exports.PlayermoderationApiAxiosParamCreator(configuration);\n  return {\n    /**\n     * ⚠️ **This will delete every single player moderation you\\'ve ever made.**\n     * @summary Clear All Player Moderations\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    clearAllPlayerModerations: function (options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.clearAllPlayerModerations(options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    },\n\n    /**\n     * Deletes a specific player moderation based on it\\'s `pmod_` ID. The website uses `unmoderateUser` instead. You can delete the same player moderation multiple times successfully.\n     * @summary Delete Player Moderation\n     * @param {string} playerModerationId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deletePlayerModeration: function (playerModerationId, options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.deletePlayerModeration(playerModerationId, options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    },\n\n    /**\n     * Returns a single Player Moderation. This returns the exact same amount of information as the more generalised `getPlayerModerations`.\n     * @summary Get Player Moderation\n     * @param {string} playerModerationId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getPlayerModeration: function (playerModerationId, options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.getPlayerModeration(playerModerationId, options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    },\n\n    /**\n     * Returns a list of all player moderations made by **you**.  This endpoint does not have pagination, and will return *all* results. Use query parameters to limit your query if needed.\n     * @summary Search Player Moderations\n     * @param {string} [type] Must be one of PlayerModerationType, except unblock. Unblocking simply removes a block.\n     * @param {string} [targetUserId] Must be valid UserID.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getPlayerModerations: function (type, targetUserId, options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.getPlayerModerations(type, targetUserId, options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    },\n\n    /**\n     * Moderate a user, e.g. unmute them or show their avatar.  Please see the [Player Moderation docs](https://vrchatapi.github.io/docs/api/#tag--playermoderation) on what playerModerations are, and how they differ from staff moderations.\n     * @summary Moderate User\n     * @param {ModerateUserRequest} [moderateUserRequest]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    moderateUser: function (moderateUserRequest, options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.moderateUser(moderateUserRequest, options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    },\n\n    /**\n     * Removes a player moderation previously added through `moderateUser`. E.g if you previously have shown their avatar, but now want to reset it to default.\n     * @summary Unmoderate User\n     * @param {ModerateUserRequest} [moderateUserRequest]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    unmoderateUser: function (moderateUserRequest, options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.unmoderateUser(moderateUserRequest, options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    }\n  };\n};\n/**\n * PlayermoderationApi - factory interface\n * @export\n */\n\n\nexports.PlayermoderationApiFactory = function (configuration, basePath, axios) {\n  var localVarFp = exports.PlayermoderationApiFp(configuration);\n  return {\n    /**\n     * ⚠️ **This will delete every single player moderation you\\'ve ever made.**\n     * @summary Clear All Player Moderations\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    clearAllPlayerModerations: function (options) {\n      return localVarFp.clearAllPlayerModerations(options).then(function (request) {\n        return request(axios, basePath);\n      });\n    },\n\n    /**\n     * Deletes a specific player moderation based on it\\'s `pmod_` ID. The website uses `unmoderateUser` instead. You can delete the same player moderation multiple times successfully.\n     * @summary Delete Player Moderation\n     * @param {string} playerModerationId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deletePlayerModeration: function (playerModerationId, options) {\n      return localVarFp.deletePlayerModeration(playerModerationId, options).then(function (request) {\n        return request(axios, basePath);\n      });\n    },\n\n    /**\n     * Returns a single Player Moderation. This returns the exact same amount of information as the more generalised `getPlayerModerations`.\n     * @summary Get Player Moderation\n     * @param {string} playerModerationId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getPlayerModeration: function (playerModerationId, options) {\n      return localVarFp.getPlayerModeration(playerModerationId, options).then(function (request) {\n        return request(axios, basePath);\n      });\n    },\n\n    /**\n     * Returns a list of all player moderations made by **you**.  This endpoint does not have pagination, and will return *all* results. Use query parameters to limit your query if needed.\n     * @summary Search Player Moderations\n     * @param {string} [type] Must be one of PlayerModerationType, except unblock. Unblocking simply removes a block.\n     * @param {string} [targetUserId] Must be valid UserID.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getPlayerModerations: function (type, targetUserId, options) {\n      return localVarFp.getPlayerModerations(type, targetUserId, options).then(function (request) {\n        return request(axios, basePath);\n      });\n    },\n\n    /**\n     * Moderate a user, e.g. unmute them or show their avatar.  Please see the [Player Moderation docs](https://vrchatapi.github.io/docs/api/#tag--playermoderation) on what playerModerations are, and how they differ from staff moderations.\n     * @summary Moderate User\n     * @param {ModerateUserRequest} [moderateUserRequest]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    moderateUser: function (moderateUserRequest, options) {\n      return localVarFp.moderateUser(moderateUserRequest, options).then(function (request) {\n        return request(axios, basePath);\n      });\n    },\n\n    /**\n     * Removes a player moderation previously added through `moderateUser`. E.g if you previously have shown their avatar, but now want to reset it to default.\n     * @summary Unmoderate User\n     * @param {ModerateUserRequest} [moderateUserRequest]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    unmoderateUser: function (moderateUserRequest, options) {\n      return localVarFp.unmoderateUser(moderateUserRequest, options).then(function (request) {\n        return request(axios, basePath);\n      });\n    }\n  };\n};\n/**\n * PlayermoderationApi - object-oriented interface\n * @export\n * @class PlayermoderationApi\n * @extends {BaseAPI}\n */\n\n\nvar PlayermoderationApi =\n/** @class */\nfunction (_super) {\n  __extends(PlayermoderationApi, _super);\n\n  function PlayermoderationApi() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * ⚠️ **This will delete every single player moderation you\\'ve ever made.**\n   * @summary Clear All Player Moderations\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof PlayermoderationApi\n   */\n\n\n  PlayermoderationApi.prototype.clearAllPlayerModerations = function (options) {\n    var _this = this;\n\n    return exports.PlayermoderationApiFp(this.configuration).clearAllPlayerModerations(options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n  /**\n   * Deletes a specific player moderation based on it\\'s `pmod_` ID. The website uses `unmoderateUser` instead. You can delete the same player moderation multiple times successfully.\n   * @summary Delete Player Moderation\n   * @param {string} playerModerationId\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof PlayermoderationApi\n   */\n\n\n  PlayermoderationApi.prototype.deletePlayerModeration = function (playerModerationId, options) {\n    var _this = this;\n\n    return exports.PlayermoderationApiFp(this.configuration).deletePlayerModeration(playerModerationId, options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n  /**\n   * Returns a single Player Moderation. This returns the exact same amount of information as the more generalised `getPlayerModerations`.\n   * @summary Get Player Moderation\n   * @param {string} playerModerationId\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof PlayermoderationApi\n   */\n\n\n  PlayermoderationApi.prototype.getPlayerModeration = function (playerModerationId, options) {\n    var _this = this;\n\n    return exports.PlayermoderationApiFp(this.configuration).getPlayerModeration(playerModerationId, options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n  /**\n   * Returns a list of all player moderations made by **you**.  This endpoint does not have pagination, and will return *all* results. Use query parameters to limit your query if needed.\n   * @summary Search Player Moderations\n   * @param {string} [type] Must be one of PlayerModerationType, except unblock. Unblocking simply removes a block.\n   * @param {string} [targetUserId] Must be valid UserID.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof PlayermoderationApi\n   */\n\n\n  PlayermoderationApi.prototype.getPlayerModerations = function (type, targetUserId, options) {\n    var _this = this;\n\n    return exports.PlayermoderationApiFp(this.configuration).getPlayerModerations(type, targetUserId, options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n  /**\n   * Moderate a user, e.g. unmute them or show their avatar.  Please see the [Player Moderation docs](https://vrchatapi.github.io/docs/api/#tag--playermoderation) on what playerModerations are, and how they differ from staff moderations.\n   * @summary Moderate User\n   * @param {ModerateUserRequest} [moderateUserRequest]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof PlayermoderationApi\n   */\n\n\n  PlayermoderationApi.prototype.moderateUser = function (moderateUserRequest, options) {\n    var _this = this;\n\n    return exports.PlayermoderationApiFp(this.configuration).moderateUser(moderateUserRequest, options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n  /**\n   * Removes a player moderation previously added through `moderateUser`. E.g if you previously have shown their avatar, but now want to reset it to default.\n   * @summary Unmoderate User\n   * @param {ModerateUserRequest} [moderateUserRequest]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof PlayermoderationApi\n   */\n\n\n  PlayermoderationApi.prototype.unmoderateUser = function (moderateUserRequest, options) {\n    var _this = this;\n\n    return exports.PlayermoderationApiFp(this.configuration).unmoderateUser(moderateUserRequest, options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n\n  return PlayermoderationApi;\n}(base_1.BaseAPI);\n\nexports.PlayermoderationApi = PlayermoderationApi;\n/**\n * SystemApi - axios parameter creator\n * @export\n */\n\nexports.SystemApiAxiosParamCreator = function (configuration) {\n  var _this = this;\n\n  return {\n    /**\n     * Fetches the CSS code to the frontend React website.\n     * @summary Download CSS\n     * @param {'public' | 'internal'} [variant] Specifies which &#x60;variant&#x60; of the site. Public is the end-user site, while &#x60;internal&#x60; is the staff-only site with special pages for moderation and management.\n     * @param {string} [branch] Specifies which git branch the site should load frontend source code from.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getCSS: function (variant, branch, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          localVarPath = \"/css/app.css\";\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'GET'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {};\n\n          if (variant !== undefined) {\n            localVarQueryParameter['variant'] = variant;\n          }\n\n          if (branch !== undefined) {\n            localVarQueryParameter['branch'] = branch;\n          }\n\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    },\n\n    /**\n     * API config contains configuration that the clients needs to work properly.  Currently the most important value here is `clientApiKey` which is used for all other API endpoints.\n     * @summary Fetch API Config\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getConfig: function (options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          localVarPath = \"/config\";\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'GET'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {};\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    },\n\n    /**\n     * Returns the current number of online users.  **NOTE:** The response type is not a JSON object, but a simple JSON integer.\n     * @summary Current Online Users\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getCurrentOnlineUsers: function (options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          localVarPath = \"/visits\";\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'GET'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {};\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    },\n\n    /**\n     * ~~Gets the overall health status, the server name, and the current build version tag of the API.~~  **DEPRECATED:** VRChat has suddenly restricted this endpoint for unknown reasons, and now always return 401 Unauthorized.\n     * @summary Check API Health\n     * @param {*} [options] Override http request option.\n     * @deprecated\n     * @throws {RequiredError}\n     */\n    getHealth: function (options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          localVarPath = \"/health\";\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'GET'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {};\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    },\n\n    /**\n     * IPS (Info Push System) is a system for VRChat to push out dynamic information to the client. This is primarily used by the Quick-Menu info banners, but can also be used to e.g. alert you to update your game to the latest version.  `include` is used to query what Information Pushes should be included in the response. If include is missing or empty, then no notices will normally be returned. This is an \\\"any of\\\" search.  `require` is used to limit what Information Pushes should be included in the response. This is usually used in combination with `include`, and is an \\\"all of\\\" search.\n     * @summary Show Information Notices\n     * @param {string} [require] Tags to include (comma-separated). All of the tags needs to be present.\n     * @param {string} [include] Tags to include (comma-separated). Any of the tags needs to be present.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getInfoPush: function (require, include, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          localVarPath = \"/infoPush\";\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'GET'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {};\n\n          if (require !== undefined) {\n            localVarQueryParameter['require'] = require;\n          }\n\n          if (include !== undefined) {\n            localVarQueryParameter['include'] = include;\n          }\n\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    },\n\n    /**\n     * Fetches the JavaScript code to the frontend React website.\n     * @summary Download JavaScript\n     * @param {'public' | 'internal'} [variant] Specifies which &#x60;variant&#x60; of the site. Public is the end-user site, while &#x60;internal&#x60; is the staff-only site with special pages for moderation and management.\n     * @param {string} [branch] Specifies which git branch the site should load frontend source code from.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getJavaScript: function (variant, branch, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          localVarPath = \"/js/app.js\";\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'GET'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {};\n\n          if (variant !== undefined) {\n            localVarQueryParameter['variant'] = variant;\n          }\n\n          if (branch !== undefined) {\n            localVarQueryParameter['branch'] = branch;\n          }\n\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    },\n\n    /**\n     * Returns the current time of the API server.  **NOTE:** The response type is not a JSON object, but a simple JSON string.\n     * @summary Current System Time\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getSystemTime: function (options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          localVarPath = \"/time\";\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'GET'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {};\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    }\n  };\n};\n/**\n * SystemApi - functional programming interface\n * @export\n */\n\n\nexports.SystemApiFp = function (configuration) {\n  var localVarAxiosParamCreator = exports.SystemApiAxiosParamCreator(configuration);\n  return {\n    /**\n     * Fetches the CSS code to the frontend React website.\n     * @summary Download CSS\n     * @param {'public' | 'internal'} [variant] Specifies which &#x60;variant&#x60; of the site. Public is the end-user site, while &#x60;internal&#x60; is the staff-only site with special pages for moderation and management.\n     * @param {string} [branch] Specifies which git branch the site should load frontend source code from.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getCSS: function (variant, branch, options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.getCSS(variant, branch, options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    },\n\n    /**\n     * API config contains configuration that the clients needs to work properly.  Currently the most important value here is `clientApiKey` which is used for all other API endpoints.\n     * @summary Fetch API Config\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getConfig: function (options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.getConfig(options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    },\n\n    /**\n     * Returns the current number of online users.  **NOTE:** The response type is not a JSON object, but a simple JSON integer.\n     * @summary Current Online Users\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getCurrentOnlineUsers: function (options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.getCurrentOnlineUsers(options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    },\n\n    /**\n     * ~~Gets the overall health status, the server name, and the current build version tag of the API.~~  **DEPRECATED:** VRChat has suddenly restricted this endpoint for unknown reasons, and now always return 401 Unauthorized.\n     * @summary Check API Health\n     * @param {*} [options] Override http request option.\n     * @deprecated\n     * @throws {RequiredError}\n     */\n    getHealth: function (options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.getHealth(options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    },\n\n    /**\n     * IPS (Info Push System) is a system for VRChat to push out dynamic information to the client. This is primarily used by the Quick-Menu info banners, but can also be used to e.g. alert you to update your game to the latest version.  `include` is used to query what Information Pushes should be included in the response. If include is missing or empty, then no notices will normally be returned. This is an \\\"any of\\\" search.  `require` is used to limit what Information Pushes should be included in the response. This is usually used in combination with `include`, and is an \\\"all of\\\" search.\n     * @summary Show Information Notices\n     * @param {string} [require] Tags to include (comma-separated). All of the tags needs to be present.\n     * @param {string} [include] Tags to include (comma-separated). Any of the tags needs to be present.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getInfoPush: function (require, include, options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.getInfoPush(require, include, options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    },\n\n    /**\n     * Fetches the JavaScript code to the frontend React website.\n     * @summary Download JavaScript\n     * @param {'public' | 'internal'} [variant] Specifies which &#x60;variant&#x60; of the site. Public is the end-user site, while &#x60;internal&#x60; is the staff-only site with special pages for moderation and management.\n     * @param {string} [branch] Specifies which git branch the site should load frontend source code from.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getJavaScript: function (variant, branch, options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.getJavaScript(variant, branch, options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    },\n\n    /**\n     * Returns the current time of the API server.  **NOTE:** The response type is not a JSON object, but a simple JSON string.\n     * @summary Current System Time\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getSystemTime: function (options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.getSystemTime(options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    }\n  };\n};\n/**\n * SystemApi - factory interface\n * @export\n */\n\n\nexports.SystemApiFactory = function (configuration, basePath, axios) {\n  var localVarFp = exports.SystemApiFp(configuration);\n  return {\n    /**\n     * Fetches the CSS code to the frontend React website.\n     * @summary Download CSS\n     * @param {'public' | 'internal'} [variant] Specifies which &#x60;variant&#x60; of the site. Public is the end-user site, while &#x60;internal&#x60; is the staff-only site with special pages for moderation and management.\n     * @param {string} [branch] Specifies which git branch the site should load frontend source code from.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getCSS: function (variant, branch, options) {\n      return localVarFp.getCSS(variant, branch, options).then(function (request) {\n        return request(axios, basePath);\n      });\n    },\n\n    /**\n     * API config contains configuration that the clients needs to work properly.  Currently the most important value here is `clientApiKey` which is used for all other API endpoints.\n     * @summary Fetch API Config\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getConfig: function (options) {\n      return localVarFp.getConfig(options).then(function (request) {\n        return request(axios, basePath);\n      });\n    },\n\n    /**\n     * Returns the current number of online users.  **NOTE:** The response type is not a JSON object, but a simple JSON integer.\n     * @summary Current Online Users\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getCurrentOnlineUsers: function (options) {\n      return localVarFp.getCurrentOnlineUsers(options).then(function (request) {\n        return request(axios, basePath);\n      });\n    },\n\n    /**\n     * ~~Gets the overall health status, the server name, and the current build version tag of the API.~~  **DEPRECATED:** VRChat has suddenly restricted this endpoint for unknown reasons, and now always return 401 Unauthorized.\n     * @summary Check API Health\n     * @param {*} [options] Override http request option.\n     * @deprecated\n     * @throws {RequiredError}\n     */\n    getHealth: function (options) {\n      return localVarFp.getHealth(options).then(function (request) {\n        return request(axios, basePath);\n      });\n    },\n\n    /**\n     * IPS (Info Push System) is a system for VRChat to push out dynamic information to the client. This is primarily used by the Quick-Menu info banners, but can also be used to e.g. alert you to update your game to the latest version.  `include` is used to query what Information Pushes should be included in the response. If include is missing or empty, then no notices will normally be returned. This is an \\\"any of\\\" search.  `require` is used to limit what Information Pushes should be included in the response. This is usually used in combination with `include`, and is an \\\"all of\\\" search.\n     * @summary Show Information Notices\n     * @param {string} [require] Tags to include (comma-separated). All of the tags needs to be present.\n     * @param {string} [include] Tags to include (comma-separated). Any of the tags needs to be present.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getInfoPush: function (require, include, options) {\n      return localVarFp.getInfoPush(require, include, options).then(function (request) {\n        return request(axios, basePath);\n      });\n    },\n\n    /**\n     * Fetches the JavaScript code to the frontend React website.\n     * @summary Download JavaScript\n     * @param {'public' | 'internal'} [variant] Specifies which &#x60;variant&#x60; of the site. Public is the end-user site, while &#x60;internal&#x60; is the staff-only site with special pages for moderation and management.\n     * @param {string} [branch] Specifies which git branch the site should load frontend source code from.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getJavaScript: function (variant, branch, options) {\n      return localVarFp.getJavaScript(variant, branch, options).then(function (request) {\n        return request(axios, basePath);\n      });\n    },\n\n    /**\n     * Returns the current time of the API server.  **NOTE:** The response type is not a JSON object, but a simple JSON string.\n     * @summary Current System Time\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getSystemTime: function (options) {\n      return localVarFp.getSystemTime(options).then(function (request) {\n        return request(axios, basePath);\n      });\n    }\n  };\n};\n/**\n * SystemApi - object-oriented interface\n * @export\n * @class SystemApi\n * @extends {BaseAPI}\n */\n\n\nvar SystemApi =\n/** @class */\nfunction (_super) {\n  __extends(SystemApi, _super);\n\n  function SystemApi() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * Fetches the CSS code to the frontend React website.\n   * @summary Download CSS\n   * @param {'public' | 'internal'} [variant] Specifies which &#x60;variant&#x60; of the site. Public is the end-user site, while &#x60;internal&#x60; is the staff-only site with special pages for moderation and management.\n   * @param {string} [branch] Specifies which git branch the site should load frontend source code from.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof SystemApi\n   */\n\n\n  SystemApi.prototype.getCSS = function (variant, branch, options) {\n    var _this = this;\n\n    return exports.SystemApiFp(this.configuration).getCSS(variant, branch, options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n  /**\n   * API config contains configuration that the clients needs to work properly.  Currently the most important value here is `clientApiKey` which is used for all other API endpoints.\n   * @summary Fetch API Config\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof SystemApi\n   */\n\n\n  SystemApi.prototype.getConfig = function (options) {\n    var _this = this;\n\n    return exports.SystemApiFp(this.configuration).getConfig(options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n  /**\n   * Returns the current number of online users.  **NOTE:** The response type is not a JSON object, but a simple JSON integer.\n   * @summary Current Online Users\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof SystemApi\n   */\n\n\n  SystemApi.prototype.getCurrentOnlineUsers = function (options) {\n    var _this = this;\n\n    return exports.SystemApiFp(this.configuration).getCurrentOnlineUsers(options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n  /**\n   * ~~Gets the overall health status, the server name, and the current build version tag of the API.~~  **DEPRECATED:** VRChat has suddenly restricted this endpoint for unknown reasons, and now always return 401 Unauthorized.\n   * @summary Check API Health\n   * @param {*} [options] Override http request option.\n   * @deprecated\n   * @throws {RequiredError}\n   * @memberof SystemApi\n   */\n\n\n  SystemApi.prototype.getHealth = function (options) {\n    var _this = this;\n\n    return exports.SystemApiFp(this.configuration).getHealth(options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n  /**\n   * IPS (Info Push System) is a system for VRChat to push out dynamic information to the client. This is primarily used by the Quick-Menu info banners, but can also be used to e.g. alert you to update your game to the latest version.  `include` is used to query what Information Pushes should be included in the response. If include is missing or empty, then no notices will normally be returned. This is an \\\"any of\\\" search.  `require` is used to limit what Information Pushes should be included in the response. This is usually used in combination with `include`, and is an \\\"all of\\\" search.\n   * @summary Show Information Notices\n   * @param {string} [require] Tags to include (comma-separated). All of the tags needs to be present.\n   * @param {string} [include] Tags to include (comma-separated). Any of the tags needs to be present.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof SystemApi\n   */\n\n\n  SystemApi.prototype.getInfoPush = function (require, include, options) {\n    var _this = this;\n\n    return exports.SystemApiFp(this.configuration).getInfoPush(require, include, options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n  /**\n   * Fetches the JavaScript code to the frontend React website.\n   * @summary Download JavaScript\n   * @param {'public' | 'internal'} [variant] Specifies which &#x60;variant&#x60; of the site. Public is the end-user site, while &#x60;internal&#x60; is the staff-only site with special pages for moderation and management.\n   * @param {string} [branch] Specifies which git branch the site should load frontend source code from.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof SystemApi\n   */\n\n\n  SystemApi.prototype.getJavaScript = function (variant, branch, options) {\n    var _this = this;\n\n    return exports.SystemApiFp(this.configuration).getJavaScript(variant, branch, options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n  /**\n   * Returns the current time of the API server.  **NOTE:** The response type is not a JSON object, but a simple JSON string.\n   * @summary Current System Time\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof SystemApi\n   */\n\n\n  SystemApi.prototype.getSystemTime = function (options) {\n    var _this = this;\n\n    return exports.SystemApiFp(this.configuration).getSystemTime(options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n\n  return SystemApi;\n}(base_1.BaseAPI);\n\nexports.SystemApi = SystemApi;\n/**\n * UsersApi - axios parameter creator\n * @export\n */\n\nexports.UsersApiAxiosParamCreator = function (configuration) {\n  var _this = this;\n\n  return {\n    /**\n     * Get public user information about a specific user using their ID.\n     * @summary Get User by ID\n     * @param {string} userId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getUser: function (userId, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          // verify required parameter 'userId' is not null or undefined\n          common_1.assertParamExists('getUser', 'userId', userId);\n          localVarPath = \"/users/{userId}\".replace(\"{\" + \"userId\" + \"}\", encodeURIComponent(String(userId)));\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'GET'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {}; // authentication apiKeyCookie required\n          // authentication authCookie required\n\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    },\n\n    /**\n     * Get public user information about a specific user using their name.\n     * @summary Get User by Username\n     * @param {string} username\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getUserByName: function (username, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          // verify required parameter 'username' is not null or undefined\n          common_1.assertParamExists('getUserByName', 'username', username);\n          localVarPath = \"/users/{username}/name\".replace(\"{\" + \"username\" + \"}\", encodeURIComponent(String(username)));\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'GET'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {}; // authentication apiKeyCookie required\n          // authentication authCookie required\n\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    },\n\n    /**\n     * Search and list any users by text query\n     * @summary Search All Users\n     * @param {string} [search] Searches by &#x60;displayName&#x60;. Will return empty array if search query is empty or missing.\n     * @param {string} [developerType] Active user by developer type, none for normal users and internal for moderators\n     * @param {number} [n] The number of objects to return.\n     * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchUsers: function (search, developerType, n, offset, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          localVarPath = \"/users\";\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'GET'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {}; // authentication apiKeyCookie required\n          // authentication authCookie required\n\n          if (search !== undefined) {\n            localVarQueryParameter['search'] = search;\n          }\n\n          if (developerType !== undefined) {\n            localVarQueryParameter['developerType'] = developerType;\n          }\n\n          if (n !== undefined) {\n            localVarQueryParameter['n'] = n;\n          }\n\n          if (offset !== undefined) {\n            localVarQueryParameter['offset'] = offset;\n          }\n\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    },\n\n    /**\n     * Update a users information such as the email and birthday.\n     * @summary Update User Info\n     * @param {string} userId\n     * @param {UpdateUserRequest} [updateUserRequest]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateUser: function (userId, updateUserRequest, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          // verify required parameter 'userId' is not null or undefined\n          common_1.assertParamExists('updateUser', 'userId', userId);\n          localVarPath = \"/users/{userId}\".replace(\"{\" + \"userId\" + \"}\", encodeURIComponent(String(userId)));\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'PUT'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {}; // authentication apiKeyCookie required\n          // authentication authCookie required\n\n          localVarHeaderParameter['Content-Type'] = 'application/json';\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          localVarRequestOptions.data = common_1.serializeDataIfNeeded(updateUserRequest, localVarRequestOptions, configuration);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    }\n  };\n};\n/**\n * UsersApi - functional programming interface\n * @export\n */\n\n\nexports.UsersApiFp = function (configuration) {\n  var localVarAxiosParamCreator = exports.UsersApiAxiosParamCreator(configuration);\n  return {\n    /**\n     * Get public user information about a specific user using their ID.\n     * @summary Get User by ID\n     * @param {string} userId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getUser: function (userId, options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.getUser(userId, options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    },\n\n    /**\n     * Get public user information about a specific user using their name.\n     * @summary Get User by Username\n     * @param {string} username\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getUserByName: function (username, options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.getUserByName(username, options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    },\n\n    /**\n     * Search and list any users by text query\n     * @summary Search All Users\n     * @param {string} [search] Searches by &#x60;displayName&#x60;. Will return empty array if search query is empty or missing.\n     * @param {string} [developerType] Active user by developer type, none for normal users and internal for moderators\n     * @param {number} [n] The number of objects to return.\n     * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchUsers: function (search, developerType, n, offset, options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.searchUsers(search, developerType, n, offset, options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    },\n\n    /**\n     * Update a users information such as the email and birthday.\n     * @summary Update User Info\n     * @param {string} userId\n     * @param {UpdateUserRequest} [updateUserRequest]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateUser: function (userId, updateUserRequest, options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.updateUser(userId, updateUserRequest, options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    }\n  };\n};\n/**\n * UsersApi - factory interface\n * @export\n */\n\n\nexports.UsersApiFactory = function (configuration, basePath, axios) {\n  var localVarFp = exports.UsersApiFp(configuration);\n  return {\n    /**\n     * Get public user information about a specific user using their ID.\n     * @summary Get User by ID\n     * @param {string} userId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getUser: function (userId, options) {\n      return localVarFp.getUser(userId, options).then(function (request) {\n        return request(axios, basePath);\n      });\n    },\n\n    /**\n     * Get public user information about a specific user using their name.\n     * @summary Get User by Username\n     * @param {string} username\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getUserByName: function (username, options) {\n      return localVarFp.getUserByName(username, options).then(function (request) {\n        return request(axios, basePath);\n      });\n    },\n\n    /**\n     * Search and list any users by text query\n     * @summary Search All Users\n     * @param {string} [search] Searches by &#x60;displayName&#x60;. Will return empty array if search query is empty or missing.\n     * @param {string} [developerType] Active user by developer type, none for normal users and internal for moderators\n     * @param {number} [n] The number of objects to return.\n     * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchUsers: function (search, developerType, n, offset, options) {\n      return localVarFp.searchUsers(search, developerType, n, offset, options).then(function (request) {\n        return request(axios, basePath);\n      });\n    },\n\n    /**\n     * Update a users information such as the email and birthday.\n     * @summary Update User Info\n     * @param {string} userId\n     * @param {UpdateUserRequest} [updateUserRequest]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateUser: function (userId, updateUserRequest, options) {\n      return localVarFp.updateUser(userId, updateUserRequest, options).then(function (request) {\n        return request(axios, basePath);\n      });\n    }\n  };\n};\n/**\n * UsersApi - object-oriented interface\n * @export\n * @class UsersApi\n * @extends {BaseAPI}\n */\n\n\nvar UsersApi =\n/** @class */\nfunction (_super) {\n  __extends(UsersApi, _super);\n\n  function UsersApi() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * Get public user information about a specific user using their ID.\n   * @summary Get User by ID\n   * @param {string} userId\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof UsersApi\n   */\n\n\n  UsersApi.prototype.getUser = function (userId, options) {\n    var _this = this;\n\n    return exports.UsersApiFp(this.configuration).getUser(userId, options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n  /**\n   * Get public user information about a specific user using their name.\n   * @summary Get User by Username\n   * @param {string} username\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof UsersApi\n   */\n\n\n  UsersApi.prototype.getUserByName = function (username, options) {\n    var _this = this;\n\n    return exports.UsersApiFp(this.configuration).getUserByName(username, options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n  /**\n   * Search and list any users by text query\n   * @summary Search All Users\n   * @param {string} [search] Searches by &#x60;displayName&#x60;. Will return empty array if search query is empty or missing.\n   * @param {string} [developerType] Active user by developer type, none for normal users and internal for moderators\n   * @param {number} [n] The number of objects to return.\n   * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof UsersApi\n   */\n\n\n  UsersApi.prototype.searchUsers = function (search, developerType, n, offset, options) {\n    var _this = this;\n\n    return exports.UsersApiFp(this.configuration).searchUsers(search, developerType, n, offset, options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n  /**\n   * Update a users information such as the email and birthday.\n   * @summary Update User Info\n   * @param {string} userId\n   * @param {UpdateUserRequest} [updateUserRequest]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof UsersApi\n   */\n\n\n  UsersApi.prototype.updateUser = function (userId, updateUserRequest, options) {\n    var _this = this;\n\n    return exports.UsersApiFp(this.configuration).updateUser(userId, updateUserRequest, options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n\n  return UsersApi;\n}(base_1.BaseAPI);\n\nexports.UsersApi = UsersApi;\n/**\n * WorldsApi - axios parameter creator\n * @export\n */\n\nexports.WorldsApiAxiosParamCreator = function (configuration) {\n  var _this = this;\n\n  return {\n    /**\n     * Create a new world. This endpoint requires `assetUrl` to be a valid File object with `.vrcw` file extension, and `imageUrl` to be a valid File object with an image file extension.\n     * @summary Create World\n     * @param {CreateWorldRequest} [createWorldRequest]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createWorld: function (createWorldRequest, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          localVarPath = \"/worlds\";\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'POST'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {};\n          localVarHeaderParameter['Content-Type'] = 'application/json';\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          localVarRequestOptions.data = common_1.serializeDataIfNeeded(createWorldRequest, localVarRequestOptions, configuration);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    },\n\n    /**\n     * Delete a world. Notice a world is never fully \\\"deleted\\\", only its ReleaseStatus is set to \\\"hidden\\\" and the linked Files are deleted. The WorldID is permanently reserved.\n     * @summary Delete World\n     * @param {string} worldId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteWorld: function (worldId, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          // verify required parameter 'worldId' is not null or undefined\n          common_1.assertParamExists('deleteWorld', 'worldId', worldId);\n          localVarPath = \"/worlds/{worldId}\".replace(\"{\" + \"worldId\" + \"}\", encodeURIComponent(String(worldId)));\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'DELETE'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {}; // authentication apiKeyCookie required\n          // authentication authCookie required\n\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    },\n\n    /**\n     * Search and list currently Active worlds by query filters.\n     * @summary List Active Worlds\n     * @param {boolean} [featured] Filters on featured results.\n     * @param {'popularity' | 'heat' | 'trust' | 'shuffle' | 'random' | 'favorites' | 'reportScore' | 'reportCount' | 'publicationDate' | 'labsPublicationDate' | 'created' | '_created_at' | 'updated' | '_updated_at' | 'order' | 'relevance' | 'magic' | 'name'} [sort]\n     * @param {number} [n] The number of objects to return.\n     * @param {'ascending' | 'descending'} [order]\n     * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n     * @param {string} [search] Filters by world name.\n     * @param {string} [tag] Tags to include (comma-separated). Any of the tags needs to be present.\n     * @param {string} [notag] Tags to exclude (comma-separated).\n     * @param {'public' | 'private' | 'hidden' | 'all'} [releaseStatus] Filter by ReleaseStatus.\n     * @param {string} [maxUnityVersion] The maximum Unity version supported by the asset.\n     * @param {string} [minUnityVersion] The minimum Unity version supported by the asset.\n     * @param {string} [platform] The platform the asset supports.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getActiveWorlds: function (featured, sort, n, order, offset, search, tag, notag, releaseStatus, maxUnityVersion, minUnityVersion, platform, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          localVarPath = \"/worlds/active\";\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'GET'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {}; // authentication apiKeyCookie required\n          // authentication authCookie required\n\n          if (featured !== undefined) {\n            localVarQueryParameter['featured'] = featured;\n          }\n\n          if (sort !== undefined) {\n            localVarQueryParameter['sort'] = sort;\n          }\n\n          if (n !== undefined) {\n            localVarQueryParameter['n'] = n;\n          }\n\n          if (order !== undefined) {\n            localVarQueryParameter['order'] = order;\n          }\n\n          if (offset !== undefined) {\n            localVarQueryParameter['offset'] = offset;\n          }\n\n          if (search !== undefined) {\n            localVarQueryParameter['search'] = search;\n          }\n\n          if (tag !== undefined) {\n            localVarQueryParameter['tag'] = tag;\n          }\n\n          if (notag !== undefined) {\n            localVarQueryParameter['notag'] = notag;\n          }\n\n          if (releaseStatus !== undefined) {\n            localVarQueryParameter['releaseStatus'] = releaseStatus;\n          }\n\n          if (maxUnityVersion !== undefined) {\n            localVarQueryParameter['maxUnityVersion'] = maxUnityVersion;\n          }\n\n          if (minUnityVersion !== undefined) {\n            localVarQueryParameter['minUnityVersion'] = minUnityVersion;\n          }\n\n          if (platform !== undefined) {\n            localVarQueryParameter['platform'] = platform;\n          }\n\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    },\n\n    /**\n     * Search and list favorited worlds by query filters.\n     * @summary List Favorited Worlds\n     * @param {boolean} [featured] Filters on featured results.\n     * @param {'popularity' | 'heat' | 'trust' | 'shuffle' | 'random' | 'favorites' | 'reportScore' | 'reportCount' | 'publicationDate' | 'labsPublicationDate' | 'created' | '_created_at' | 'updated' | '_updated_at' | 'order' | 'relevance' | 'magic' | 'name'} [sort]\n     * @param {number} [n] The number of objects to return.\n     * @param {'ascending' | 'descending'} [order]\n     * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n     * @param {string} [search] Filters by world name.\n     * @param {string} [tag] Tags to include (comma-separated). Any of the tags needs to be present.\n     * @param {string} [notag] Tags to exclude (comma-separated).\n     * @param {'public' | 'private' | 'hidden' | 'all'} [releaseStatus] Filter by ReleaseStatus.\n     * @param {string} [maxUnityVersion] The maximum Unity version supported by the asset.\n     * @param {string} [minUnityVersion] The minimum Unity version supported by the asset.\n     * @param {string} [platform] The platform the asset supports.\n     * @param {string} [userId] Target user to see information on, admin-only.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getFavoritedWorlds: function (featured, sort, n, order, offset, search, tag, notag, releaseStatus, maxUnityVersion, minUnityVersion, platform, userId, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          localVarPath = \"/worlds/favorites\";\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'GET'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {}; // authentication apiKeyCookie required\n          // authentication authCookie required\n\n          if (featured !== undefined) {\n            localVarQueryParameter['featured'] = featured;\n          }\n\n          if (sort !== undefined) {\n            localVarQueryParameter['sort'] = sort;\n          }\n\n          if (n !== undefined) {\n            localVarQueryParameter['n'] = n;\n          }\n\n          if (order !== undefined) {\n            localVarQueryParameter['order'] = order;\n          }\n\n          if (offset !== undefined) {\n            localVarQueryParameter['offset'] = offset;\n          }\n\n          if (search !== undefined) {\n            localVarQueryParameter['search'] = search;\n          }\n\n          if (tag !== undefined) {\n            localVarQueryParameter['tag'] = tag;\n          }\n\n          if (notag !== undefined) {\n            localVarQueryParameter['notag'] = notag;\n          }\n\n          if (releaseStatus !== undefined) {\n            localVarQueryParameter['releaseStatus'] = releaseStatus;\n          }\n\n          if (maxUnityVersion !== undefined) {\n            localVarQueryParameter['maxUnityVersion'] = maxUnityVersion;\n          }\n\n          if (minUnityVersion !== undefined) {\n            localVarQueryParameter['minUnityVersion'] = minUnityVersion;\n          }\n\n          if (platform !== undefined) {\n            localVarQueryParameter['platform'] = platform;\n          }\n\n          if (userId !== undefined) {\n            localVarQueryParameter['userId'] = userId;\n          }\n\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    },\n\n    /**\n     * Search and list recently visited worlds by query filters.\n     * @summary List Recent Worlds\n     * @param {boolean} [featured] Filters on featured results.\n     * @param {'popularity' | 'heat' | 'trust' | 'shuffle' | 'random' | 'favorites' | 'reportScore' | 'reportCount' | 'publicationDate' | 'labsPublicationDate' | 'created' | '_created_at' | 'updated' | '_updated_at' | 'order' | 'relevance' | 'magic' | 'name'} [sort]\n     * @param {number} [n] The number of objects to return.\n     * @param {'ascending' | 'descending'} [order]\n     * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n     * @param {string} [search] Filters by world name.\n     * @param {string} [tag] Tags to include (comma-separated). Any of the tags needs to be present.\n     * @param {string} [notag] Tags to exclude (comma-separated).\n     * @param {'public' | 'private' | 'hidden' | 'all'} [releaseStatus] Filter by ReleaseStatus.\n     * @param {string} [maxUnityVersion] The maximum Unity version supported by the asset.\n     * @param {string} [minUnityVersion] The minimum Unity version supported by the asset.\n     * @param {string} [platform] The platform the asset supports.\n     * @param {string} [userId] Target user to see information on, admin-only.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getRecentWorlds: function (featured, sort, n, order, offset, search, tag, notag, releaseStatus, maxUnityVersion, minUnityVersion, platform, userId, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          localVarPath = \"/worlds/recent\";\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'GET'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {}; // authentication apiKeyCookie required\n          // authentication authCookie required\n\n          if (featured !== undefined) {\n            localVarQueryParameter['featured'] = featured;\n          }\n\n          if (sort !== undefined) {\n            localVarQueryParameter['sort'] = sort;\n          }\n\n          if (n !== undefined) {\n            localVarQueryParameter['n'] = n;\n          }\n\n          if (order !== undefined) {\n            localVarQueryParameter['order'] = order;\n          }\n\n          if (offset !== undefined) {\n            localVarQueryParameter['offset'] = offset;\n          }\n\n          if (search !== undefined) {\n            localVarQueryParameter['search'] = search;\n          }\n\n          if (tag !== undefined) {\n            localVarQueryParameter['tag'] = tag;\n          }\n\n          if (notag !== undefined) {\n            localVarQueryParameter['notag'] = notag;\n          }\n\n          if (releaseStatus !== undefined) {\n            localVarQueryParameter['releaseStatus'] = releaseStatus;\n          }\n\n          if (maxUnityVersion !== undefined) {\n            localVarQueryParameter['maxUnityVersion'] = maxUnityVersion;\n          }\n\n          if (minUnityVersion !== undefined) {\n            localVarQueryParameter['minUnityVersion'] = minUnityVersion;\n          }\n\n          if (platform !== undefined) {\n            localVarQueryParameter['platform'] = platform;\n          }\n\n          if (userId !== undefined) {\n            localVarQueryParameter['userId'] = userId;\n          }\n\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    },\n\n    /**\n     * Get information about a specific World.\n     * @summary Get World by ID\n     * @param {string} worldId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getWorld: function (worldId, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          // verify required parameter 'worldId' is not null or undefined\n          common_1.assertParamExists('getWorld', 'worldId', worldId);\n          localVarPath = \"/worlds/{worldId}\".replace(\"{\" + \"worldId\" + \"}\", encodeURIComponent(String(worldId)));\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'GET'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {}; // authentication apiKeyCookie required\n\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    },\n\n    /**\n     * Returns a worlds instance.\n     * @summary Get World Instance\n     * @param {string} worldId\n     * @param {string} instanceId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getWorldInstance: function (worldId, instanceId, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          // verify required parameter 'worldId' is not null or undefined\n          common_1.assertParamExists('getWorldInstance', 'worldId', worldId); // verify required parameter 'instanceId' is not null or undefined\n\n          common_1.assertParamExists('getWorldInstance', 'instanceId', instanceId);\n          localVarPath = \"/worlds/{worldId}/{instanceId}\".replace(\"{\" + \"worldId\" + \"}\", encodeURIComponent(String(worldId))).replace(\"{\" + \"instanceId\" + \"}\", encodeURIComponent(String(instanceId)));\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'GET'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {}; // authentication apiKeyCookie required\n          // authentication authCookie required\n\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    },\n\n    /**\n     * Return a worlds custom metadata. This is currently believed to be unused. Metadata can be set with `updateWorld` and can be any arbitrary object.\n     * @summary Get World Metadata\n     * @param {string} worldId\n     * @param {*} [options] Override http request option.\n     * @deprecated\n     * @throws {RequiredError}\n     */\n    getWorldMetadata: function (worldId, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          // verify required parameter 'worldId' is not null or undefined\n          common_1.assertParamExists('getWorldMetadata', 'worldId', worldId);\n          localVarPath = \"/worlds/{worldId}/metadata\".replace(\"{\" + \"worldId\" + \"}\", encodeURIComponent(String(worldId)));\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'GET'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {}; // authentication apiKeyCookie required\n          // authentication authCookie required\n\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    },\n\n    /**\n     * Returns a worlds publish status.\n     * @summary Get World Publish Status\n     * @param {string} worldId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getWorldPublishStatus: function (worldId, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          // verify required parameter 'worldId' is not null or undefined\n          common_1.assertParamExists('getWorldPublishStatus', 'worldId', worldId);\n          localVarPath = \"/worlds/{worldId}/publish\".replace(\"{\" + \"worldId\" + \"}\", encodeURIComponent(String(worldId)));\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'GET'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {}; // authentication apiKeyCookie required\n          // authentication authCookie required\n\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    },\n\n    /**\n     * Publish a world. You can only publish one world per week.\n     * @summary Publish World\n     * @param {string} worldId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    publishWorld: function (worldId, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          // verify required parameter 'worldId' is not null or undefined\n          common_1.assertParamExists('publishWorld', 'worldId', worldId);\n          localVarPath = \"/worlds/{worldId}/publish\".replace(\"{\" + \"worldId\" + \"}\", encodeURIComponent(String(worldId)));\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'PUT'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {}; // authentication apiKeyCookie required\n          // authentication authCookie required\n\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    },\n\n    /**\n     * Search and list any worlds by query filters.\n     * @summary Search All Worlds\n     * @param {boolean} [featured] Filters on featured results.\n     * @param {'popularity' | 'heat' | 'trust' | 'shuffle' | 'random' | 'favorites' | 'reportScore' | 'reportCount' | 'publicationDate' | 'labsPublicationDate' | 'created' | '_created_at' | 'updated' | '_updated_at' | 'order' | 'relevance' | 'magic' | 'name'} [sort]\n     * @param {'me'} [user] Set to &#x60;me&#x60; for searching own worlds.\n     * @param {string} [userId] Filter by UserID.\n     * @param {number} [n] The number of objects to return.\n     * @param {'ascending' | 'descending'} [order]\n     * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n     * @param {string} [search] Filters by world name.\n     * @param {string} [tag] Tags to include (comma-separated). Any of the tags needs to be present.\n     * @param {string} [notag] Tags to exclude (comma-separated).\n     * @param {'public' | 'private' | 'hidden' | 'all'} [releaseStatus] Filter by ReleaseStatus.\n     * @param {string} [maxUnityVersion] The maximum Unity version supported by the asset.\n     * @param {string} [minUnityVersion] The minimum Unity version supported by the asset.\n     * @param {string} [platform] The platform the asset supports.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchWorlds: function (featured, sort, user, userId, n, order, offset, search, tag, notag, releaseStatus, maxUnityVersion, minUnityVersion, platform, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          localVarPath = \"/worlds\";\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'GET'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {}; // authentication apiKeyCookie required\n          // authentication authCookie required\n\n          if (featured !== undefined) {\n            localVarQueryParameter['featured'] = featured;\n          }\n\n          if (sort !== undefined) {\n            localVarQueryParameter['sort'] = sort;\n          }\n\n          if (user !== undefined) {\n            localVarQueryParameter['user'] = user;\n          }\n\n          if (userId !== undefined) {\n            localVarQueryParameter['userId'] = userId;\n          }\n\n          if (n !== undefined) {\n            localVarQueryParameter['n'] = n;\n          }\n\n          if (order !== undefined) {\n            localVarQueryParameter['order'] = order;\n          }\n\n          if (offset !== undefined) {\n            localVarQueryParameter['offset'] = offset;\n          }\n\n          if (search !== undefined) {\n            localVarQueryParameter['search'] = search;\n          }\n\n          if (tag !== undefined) {\n            localVarQueryParameter['tag'] = tag;\n          }\n\n          if (notag !== undefined) {\n            localVarQueryParameter['notag'] = notag;\n          }\n\n          if (releaseStatus !== undefined) {\n            localVarQueryParameter['releaseStatus'] = releaseStatus;\n          }\n\n          if (maxUnityVersion !== undefined) {\n            localVarQueryParameter['maxUnityVersion'] = maxUnityVersion;\n          }\n\n          if (minUnityVersion !== undefined) {\n            localVarQueryParameter['minUnityVersion'] = minUnityVersion;\n          }\n\n          if (platform !== undefined) {\n            localVarQueryParameter['platform'] = platform;\n          }\n\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    },\n\n    /**\n     * Unpublish a world.\n     * @summary Unpublish World\n     * @param {string} worldId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    unpublishWorld: function (worldId, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          // verify required parameter 'worldId' is not null or undefined\n          common_1.assertParamExists('unpublishWorld', 'worldId', worldId);\n          localVarPath = \"/worlds/{worldId}/publish\".replace(\"{\" + \"worldId\" + \"}\", encodeURIComponent(String(worldId)));\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'DELETE'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {}; // authentication apiKeyCookie required\n          // authentication authCookie required\n\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    },\n\n    /**\n     * Update information about a specific World.\n     * @summary Update World\n     * @param {string} worldId\n     * @param {UpdateWorldRequest} [updateWorldRequest]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateWorld: function (worldId, updateWorldRequest, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      return __awaiter(_this, void 0, void 0, function () {\n        var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n        return __generator(this, function (_a) {\n          // verify required parameter 'worldId' is not null or undefined\n          common_1.assertParamExists('updateWorld', 'worldId', worldId);\n          localVarPath = \"/worlds/{worldId}\".replace(\"{\" + \"worldId\" + \"}\", encodeURIComponent(String(worldId)));\n          localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n\n          if (configuration) {\n            baseOptions = configuration.baseOptions;\n          }\n\n          localVarRequestOptions = __assign(__assign({\n            method: 'PUT'\n          }, baseOptions), options);\n          localVarHeaderParameter = {};\n          localVarQueryParameter = {}; // authentication apiKeyCookie required\n          // authentication authCookie required\n\n          localVarHeaderParameter['Content-Type'] = 'application/json';\n          common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n          headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n          localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n          localVarRequestOptions.data = common_1.serializeDataIfNeeded(updateWorldRequest, localVarRequestOptions, configuration);\n          return [2\n          /*return*/\n          , {\n            url: common_1.toPathString(localVarUrlObj),\n            options: localVarRequestOptions\n          }];\n        });\n      });\n    }\n  };\n};\n/**\n * WorldsApi - functional programming interface\n * @export\n */\n\n\nexports.WorldsApiFp = function (configuration) {\n  var localVarAxiosParamCreator = exports.WorldsApiAxiosParamCreator(configuration);\n  return {\n    /**\n     * Create a new world. This endpoint requires `assetUrl` to be a valid File object with `.vrcw` file extension, and `imageUrl` to be a valid File object with an image file extension.\n     * @summary Create World\n     * @param {CreateWorldRequest} [createWorldRequest]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createWorld: function (createWorldRequest, options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.createWorld(createWorldRequest, options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    },\n\n    /**\n     * Delete a world. Notice a world is never fully \\\"deleted\\\", only its ReleaseStatus is set to \\\"hidden\\\" and the linked Files are deleted. The WorldID is permanently reserved.\n     * @summary Delete World\n     * @param {string} worldId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteWorld: function (worldId, options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.deleteWorld(worldId, options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    },\n\n    /**\n     * Search and list currently Active worlds by query filters.\n     * @summary List Active Worlds\n     * @param {boolean} [featured] Filters on featured results.\n     * @param {'popularity' | 'heat' | 'trust' | 'shuffle' | 'random' | 'favorites' | 'reportScore' | 'reportCount' | 'publicationDate' | 'labsPublicationDate' | 'created' | '_created_at' | 'updated' | '_updated_at' | 'order' | 'relevance' | 'magic' | 'name'} [sort]\n     * @param {number} [n] The number of objects to return.\n     * @param {'ascending' | 'descending'} [order]\n     * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n     * @param {string} [search] Filters by world name.\n     * @param {string} [tag] Tags to include (comma-separated). Any of the tags needs to be present.\n     * @param {string} [notag] Tags to exclude (comma-separated).\n     * @param {'public' | 'private' | 'hidden' | 'all'} [releaseStatus] Filter by ReleaseStatus.\n     * @param {string} [maxUnityVersion] The maximum Unity version supported by the asset.\n     * @param {string} [minUnityVersion] The minimum Unity version supported by the asset.\n     * @param {string} [platform] The platform the asset supports.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getActiveWorlds: function (featured, sort, n, order, offset, search, tag, notag, releaseStatus, maxUnityVersion, minUnityVersion, platform, options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.getActiveWorlds(featured, sort, n, order, offset, search, tag, notag, releaseStatus, maxUnityVersion, minUnityVersion, platform, options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    },\n\n    /**\n     * Search and list favorited worlds by query filters.\n     * @summary List Favorited Worlds\n     * @param {boolean} [featured] Filters on featured results.\n     * @param {'popularity' | 'heat' | 'trust' | 'shuffle' | 'random' | 'favorites' | 'reportScore' | 'reportCount' | 'publicationDate' | 'labsPublicationDate' | 'created' | '_created_at' | 'updated' | '_updated_at' | 'order' | 'relevance' | 'magic' | 'name'} [sort]\n     * @param {number} [n] The number of objects to return.\n     * @param {'ascending' | 'descending'} [order]\n     * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n     * @param {string} [search] Filters by world name.\n     * @param {string} [tag] Tags to include (comma-separated). Any of the tags needs to be present.\n     * @param {string} [notag] Tags to exclude (comma-separated).\n     * @param {'public' | 'private' | 'hidden' | 'all'} [releaseStatus] Filter by ReleaseStatus.\n     * @param {string} [maxUnityVersion] The maximum Unity version supported by the asset.\n     * @param {string} [minUnityVersion] The minimum Unity version supported by the asset.\n     * @param {string} [platform] The platform the asset supports.\n     * @param {string} [userId] Target user to see information on, admin-only.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getFavoritedWorlds: function (featured, sort, n, order, offset, search, tag, notag, releaseStatus, maxUnityVersion, minUnityVersion, platform, userId, options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.getFavoritedWorlds(featured, sort, n, order, offset, search, tag, notag, releaseStatus, maxUnityVersion, minUnityVersion, platform, userId, options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    },\n\n    /**\n     * Search and list recently visited worlds by query filters.\n     * @summary List Recent Worlds\n     * @param {boolean} [featured] Filters on featured results.\n     * @param {'popularity' | 'heat' | 'trust' | 'shuffle' | 'random' | 'favorites' | 'reportScore' | 'reportCount' | 'publicationDate' | 'labsPublicationDate' | 'created' | '_created_at' | 'updated' | '_updated_at' | 'order' | 'relevance' | 'magic' | 'name'} [sort]\n     * @param {number} [n] The number of objects to return.\n     * @param {'ascending' | 'descending'} [order]\n     * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n     * @param {string} [search] Filters by world name.\n     * @param {string} [tag] Tags to include (comma-separated). Any of the tags needs to be present.\n     * @param {string} [notag] Tags to exclude (comma-separated).\n     * @param {'public' | 'private' | 'hidden' | 'all'} [releaseStatus] Filter by ReleaseStatus.\n     * @param {string} [maxUnityVersion] The maximum Unity version supported by the asset.\n     * @param {string} [minUnityVersion] The minimum Unity version supported by the asset.\n     * @param {string} [platform] The platform the asset supports.\n     * @param {string} [userId] Target user to see information on, admin-only.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getRecentWorlds: function (featured, sort, n, order, offset, search, tag, notag, releaseStatus, maxUnityVersion, minUnityVersion, platform, userId, options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.getRecentWorlds(featured, sort, n, order, offset, search, tag, notag, releaseStatus, maxUnityVersion, minUnityVersion, platform, userId, options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    },\n\n    /**\n     * Get information about a specific World.\n     * @summary Get World by ID\n     * @param {string} worldId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getWorld: function (worldId, options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.getWorld(worldId, options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    },\n\n    /**\n     * Returns a worlds instance.\n     * @summary Get World Instance\n     * @param {string} worldId\n     * @param {string} instanceId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getWorldInstance: function (worldId, instanceId, options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.getWorldInstance(worldId, instanceId, options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    },\n\n    /**\n     * Return a worlds custom metadata. This is currently believed to be unused. Metadata can be set with `updateWorld` and can be any arbitrary object.\n     * @summary Get World Metadata\n     * @param {string} worldId\n     * @param {*} [options] Override http request option.\n     * @deprecated\n     * @throws {RequiredError}\n     */\n    getWorldMetadata: function (worldId, options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.getWorldMetadata(worldId, options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    },\n\n    /**\n     * Returns a worlds publish status.\n     * @summary Get World Publish Status\n     * @param {string} worldId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getWorldPublishStatus: function (worldId, options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.getWorldPublishStatus(worldId, options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    },\n\n    /**\n     * Publish a world. You can only publish one world per week.\n     * @summary Publish World\n     * @param {string} worldId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    publishWorld: function (worldId, options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.publishWorld(worldId, options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    },\n\n    /**\n     * Search and list any worlds by query filters.\n     * @summary Search All Worlds\n     * @param {boolean} [featured] Filters on featured results.\n     * @param {'popularity' | 'heat' | 'trust' | 'shuffle' | 'random' | 'favorites' | 'reportScore' | 'reportCount' | 'publicationDate' | 'labsPublicationDate' | 'created' | '_created_at' | 'updated' | '_updated_at' | 'order' | 'relevance' | 'magic' | 'name'} [sort]\n     * @param {'me'} [user] Set to &#x60;me&#x60; for searching own worlds.\n     * @param {string} [userId] Filter by UserID.\n     * @param {number} [n] The number of objects to return.\n     * @param {'ascending' | 'descending'} [order]\n     * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n     * @param {string} [search] Filters by world name.\n     * @param {string} [tag] Tags to include (comma-separated). Any of the tags needs to be present.\n     * @param {string} [notag] Tags to exclude (comma-separated).\n     * @param {'public' | 'private' | 'hidden' | 'all'} [releaseStatus] Filter by ReleaseStatus.\n     * @param {string} [maxUnityVersion] The maximum Unity version supported by the asset.\n     * @param {string} [minUnityVersion] The minimum Unity version supported by the asset.\n     * @param {string} [platform] The platform the asset supports.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchWorlds: function (featured, sort, user, userId, n, order, offset, search, tag, notag, releaseStatus, maxUnityVersion, minUnityVersion, platform, options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.searchWorlds(featured, sort, user, userId, n, order, offset, search, tag, notag, releaseStatus, maxUnityVersion, minUnityVersion, platform, options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    },\n\n    /**\n     * Unpublish a world.\n     * @summary Unpublish World\n     * @param {string} worldId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    unpublishWorld: function (worldId, options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.unpublishWorld(worldId, options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    },\n\n    /**\n     * Update information about a specific World.\n     * @summary Update World\n     * @param {string} worldId\n     * @param {UpdateWorldRequest} [updateWorldRequest]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateWorld: function (worldId, updateWorldRequest, options) {\n      return __awaiter(this, void 0, void 0, function () {\n        var localVarAxiosArgs;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , localVarAxiosParamCreator.updateWorld(worldId, updateWorldRequest, options)];\n\n            case 1:\n              localVarAxiosArgs = _a.sent();\n              return [2\n              /*return*/\n              , common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n          }\n        });\n      });\n    }\n  };\n};\n/**\n * WorldsApi - factory interface\n * @export\n */\n\n\nexports.WorldsApiFactory = function (configuration, basePath, axios) {\n  var localVarFp = exports.WorldsApiFp(configuration);\n  return {\n    /**\n     * Create a new world. This endpoint requires `assetUrl` to be a valid File object with `.vrcw` file extension, and `imageUrl` to be a valid File object with an image file extension.\n     * @summary Create World\n     * @param {CreateWorldRequest} [createWorldRequest]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    createWorld: function (createWorldRequest, options) {\n      return localVarFp.createWorld(createWorldRequest, options).then(function (request) {\n        return request(axios, basePath);\n      });\n    },\n\n    /**\n     * Delete a world. Notice a world is never fully \\\"deleted\\\", only its ReleaseStatus is set to \\\"hidden\\\" and the linked Files are deleted. The WorldID is permanently reserved.\n     * @summary Delete World\n     * @param {string} worldId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    deleteWorld: function (worldId, options) {\n      return localVarFp.deleteWorld(worldId, options).then(function (request) {\n        return request(axios, basePath);\n      });\n    },\n\n    /**\n     * Search and list currently Active worlds by query filters.\n     * @summary List Active Worlds\n     * @param {boolean} [featured] Filters on featured results.\n     * @param {'popularity' | 'heat' | 'trust' | 'shuffle' | 'random' | 'favorites' | 'reportScore' | 'reportCount' | 'publicationDate' | 'labsPublicationDate' | 'created' | '_created_at' | 'updated' | '_updated_at' | 'order' | 'relevance' | 'magic' | 'name'} [sort]\n     * @param {number} [n] The number of objects to return.\n     * @param {'ascending' | 'descending'} [order]\n     * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n     * @param {string} [search] Filters by world name.\n     * @param {string} [tag] Tags to include (comma-separated). Any of the tags needs to be present.\n     * @param {string} [notag] Tags to exclude (comma-separated).\n     * @param {'public' | 'private' | 'hidden' | 'all'} [releaseStatus] Filter by ReleaseStatus.\n     * @param {string} [maxUnityVersion] The maximum Unity version supported by the asset.\n     * @param {string} [minUnityVersion] The minimum Unity version supported by the asset.\n     * @param {string} [platform] The platform the asset supports.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getActiveWorlds: function (featured, sort, n, order, offset, search, tag, notag, releaseStatus, maxUnityVersion, minUnityVersion, platform, options) {\n      return localVarFp.getActiveWorlds(featured, sort, n, order, offset, search, tag, notag, releaseStatus, maxUnityVersion, minUnityVersion, platform, options).then(function (request) {\n        return request(axios, basePath);\n      });\n    },\n\n    /**\n     * Search and list favorited worlds by query filters.\n     * @summary List Favorited Worlds\n     * @param {boolean} [featured] Filters on featured results.\n     * @param {'popularity' | 'heat' | 'trust' | 'shuffle' | 'random' | 'favorites' | 'reportScore' | 'reportCount' | 'publicationDate' | 'labsPublicationDate' | 'created' | '_created_at' | 'updated' | '_updated_at' | 'order' | 'relevance' | 'magic' | 'name'} [sort]\n     * @param {number} [n] The number of objects to return.\n     * @param {'ascending' | 'descending'} [order]\n     * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n     * @param {string} [search] Filters by world name.\n     * @param {string} [tag] Tags to include (comma-separated). Any of the tags needs to be present.\n     * @param {string} [notag] Tags to exclude (comma-separated).\n     * @param {'public' | 'private' | 'hidden' | 'all'} [releaseStatus] Filter by ReleaseStatus.\n     * @param {string} [maxUnityVersion] The maximum Unity version supported by the asset.\n     * @param {string} [minUnityVersion] The minimum Unity version supported by the asset.\n     * @param {string} [platform] The platform the asset supports.\n     * @param {string} [userId] Target user to see information on, admin-only.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getFavoritedWorlds: function (featured, sort, n, order, offset, search, tag, notag, releaseStatus, maxUnityVersion, minUnityVersion, platform, userId, options) {\n      return localVarFp.getFavoritedWorlds(featured, sort, n, order, offset, search, tag, notag, releaseStatus, maxUnityVersion, minUnityVersion, platform, userId, options).then(function (request) {\n        return request(axios, basePath);\n      });\n    },\n\n    /**\n     * Search and list recently visited worlds by query filters.\n     * @summary List Recent Worlds\n     * @param {boolean} [featured] Filters on featured results.\n     * @param {'popularity' | 'heat' | 'trust' | 'shuffle' | 'random' | 'favorites' | 'reportScore' | 'reportCount' | 'publicationDate' | 'labsPublicationDate' | 'created' | '_created_at' | 'updated' | '_updated_at' | 'order' | 'relevance' | 'magic' | 'name'} [sort]\n     * @param {number} [n] The number of objects to return.\n     * @param {'ascending' | 'descending'} [order]\n     * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n     * @param {string} [search] Filters by world name.\n     * @param {string} [tag] Tags to include (comma-separated). Any of the tags needs to be present.\n     * @param {string} [notag] Tags to exclude (comma-separated).\n     * @param {'public' | 'private' | 'hidden' | 'all'} [releaseStatus] Filter by ReleaseStatus.\n     * @param {string} [maxUnityVersion] The maximum Unity version supported by the asset.\n     * @param {string} [minUnityVersion] The minimum Unity version supported by the asset.\n     * @param {string} [platform] The platform the asset supports.\n     * @param {string} [userId] Target user to see information on, admin-only.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getRecentWorlds: function (featured, sort, n, order, offset, search, tag, notag, releaseStatus, maxUnityVersion, minUnityVersion, platform, userId, options) {\n      return localVarFp.getRecentWorlds(featured, sort, n, order, offset, search, tag, notag, releaseStatus, maxUnityVersion, minUnityVersion, platform, userId, options).then(function (request) {\n        return request(axios, basePath);\n      });\n    },\n\n    /**\n     * Get information about a specific World.\n     * @summary Get World by ID\n     * @param {string} worldId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getWorld: function (worldId, options) {\n      return localVarFp.getWorld(worldId, options).then(function (request) {\n        return request(axios, basePath);\n      });\n    },\n\n    /**\n     * Returns a worlds instance.\n     * @summary Get World Instance\n     * @param {string} worldId\n     * @param {string} instanceId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getWorldInstance: function (worldId, instanceId, options) {\n      return localVarFp.getWorldInstance(worldId, instanceId, options).then(function (request) {\n        return request(axios, basePath);\n      });\n    },\n\n    /**\n     * Return a worlds custom metadata. This is currently believed to be unused. Metadata can be set with `updateWorld` and can be any arbitrary object.\n     * @summary Get World Metadata\n     * @param {string} worldId\n     * @param {*} [options] Override http request option.\n     * @deprecated\n     * @throws {RequiredError}\n     */\n    getWorldMetadata: function (worldId, options) {\n      return localVarFp.getWorldMetadata(worldId, options).then(function (request) {\n        return request(axios, basePath);\n      });\n    },\n\n    /**\n     * Returns a worlds publish status.\n     * @summary Get World Publish Status\n     * @param {string} worldId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    getWorldPublishStatus: function (worldId, options) {\n      return localVarFp.getWorldPublishStatus(worldId, options).then(function (request) {\n        return request(axios, basePath);\n      });\n    },\n\n    /**\n     * Publish a world. You can only publish one world per week.\n     * @summary Publish World\n     * @param {string} worldId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    publishWorld: function (worldId, options) {\n      return localVarFp.publishWorld(worldId, options).then(function (request) {\n        return request(axios, basePath);\n      });\n    },\n\n    /**\n     * Search and list any worlds by query filters.\n     * @summary Search All Worlds\n     * @param {boolean} [featured] Filters on featured results.\n     * @param {'popularity' | 'heat' | 'trust' | 'shuffle' | 'random' | 'favorites' | 'reportScore' | 'reportCount' | 'publicationDate' | 'labsPublicationDate' | 'created' | '_created_at' | 'updated' | '_updated_at' | 'order' | 'relevance' | 'magic' | 'name'} [sort]\n     * @param {'me'} [user] Set to &#x60;me&#x60; for searching own worlds.\n     * @param {string} [userId] Filter by UserID.\n     * @param {number} [n] The number of objects to return.\n     * @param {'ascending' | 'descending'} [order]\n     * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n     * @param {string} [search] Filters by world name.\n     * @param {string} [tag] Tags to include (comma-separated). Any of the tags needs to be present.\n     * @param {string} [notag] Tags to exclude (comma-separated).\n     * @param {'public' | 'private' | 'hidden' | 'all'} [releaseStatus] Filter by ReleaseStatus.\n     * @param {string} [maxUnityVersion] The maximum Unity version supported by the asset.\n     * @param {string} [minUnityVersion] The minimum Unity version supported by the asset.\n     * @param {string} [platform] The platform the asset supports.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    searchWorlds: function (featured, sort, user, userId, n, order, offset, search, tag, notag, releaseStatus, maxUnityVersion, minUnityVersion, platform, options) {\n      return localVarFp.searchWorlds(featured, sort, user, userId, n, order, offset, search, tag, notag, releaseStatus, maxUnityVersion, minUnityVersion, platform, options).then(function (request) {\n        return request(axios, basePath);\n      });\n    },\n\n    /**\n     * Unpublish a world.\n     * @summary Unpublish World\n     * @param {string} worldId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    unpublishWorld: function (worldId, options) {\n      return localVarFp.unpublishWorld(worldId, options).then(function (request) {\n        return request(axios, basePath);\n      });\n    },\n\n    /**\n     * Update information about a specific World.\n     * @summary Update World\n     * @param {string} worldId\n     * @param {UpdateWorldRequest} [updateWorldRequest]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    updateWorld: function (worldId, updateWorldRequest, options) {\n      return localVarFp.updateWorld(worldId, updateWorldRequest, options).then(function (request) {\n        return request(axios, basePath);\n      });\n    }\n  };\n};\n/**\n * WorldsApi - object-oriented interface\n * @export\n * @class WorldsApi\n * @extends {BaseAPI}\n */\n\n\nvar WorldsApi =\n/** @class */\nfunction (_super) {\n  __extends(WorldsApi, _super);\n\n  function WorldsApi() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * Create a new world. This endpoint requires `assetUrl` to be a valid File object with `.vrcw` file extension, and `imageUrl` to be a valid File object with an image file extension.\n   * @summary Create World\n   * @param {CreateWorldRequest} [createWorldRequest]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof WorldsApi\n   */\n\n\n  WorldsApi.prototype.createWorld = function (createWorldRequest, options) {\n    var _this = this;\n\n    return exports.WorldsApiFp(this.configuration).createWorld(createWorldRequest, options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n  /**\n   * Delete a world. Notice a world is never fully \\\"deleted\\\", only its ReleaseStatus is set to \\\"hidden\\\" and the linked Files are deleted. The WorldID is permanently reserved.\n   * @summary Delete World\n   * @param {string} worldId\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof WorldsApi\n   */\n\n\n  WorldsApi.prototype.deleteWorld = function (worldId, options) {\n    var _this = this;\n\n    return exports.WorldsApiFp(this.configuration).deleteWorld(worldId, options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n  /**\n   * Search and list currently Active worlds by query filters.\n   * @summary List Active Worlds\n   * @param {boolean} [featured] Filters on featured results.\n   * @param {'popularity' | 'heat' | 'trust' | 'shuffle' | 'random' | 'favorites' | 'reportScore' | 'reportCount' | 'publicationDate' | 'labsPublicationDate' | 'created' | '_created_at' | 'updated' | '_updated_at' | 'order' | 'relevance' | 'magic' | 'name'} [sort]\n   * @param {number} [n] The number of objects to return.\n   * @param {'ascending' | 'descending'} [order]\n   * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n   * @param {string} [search] Filters by world name.\n   * @param {string} [tag] Tags to include (comma-separated). Any of the tags needs to be present.\n   * @param {string} [notag] Tags to exclude (comma-separated).\n   * @param {'public' | 'private' | 'hidden' | 'all'} [releaseStatus] Filter by ReleaseStatus.\n   * @param {string} [maxUnityVersion] The maximum Unity version supported by the asset.\n   * @param {string} [minUnityVersion] The minimum Unity version supported by the asset.\n   * @param {string} [platform] The platform the asset supports.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof WorldsApi\n   */\n\n\n  WorldsApi.prototype.getActiveWorlds = function (featured, sort, n, order, offset, search, tag, notag, releaseStatus, maxUnityVersion, minUnityVersion, platform, options) {\n    var _this = this;\n\n    return exports.WorldsApiFp(this.configuration).getActiveWorlds(featured, sort, n, order, offset, search, tag, notag, releaseStatus, maxUnityVersion, minUnityVersion, platform, options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n  /**\n   * Search and list favorited worlds by query filters.\n   * @summary List Favorited Worlds\n   * @param {boolean} [featured] Filters on featured results.\n   * @param {'popularity' | 'heat' | 'trust' | 'shuffle' | 'random' | 'favorites' | 'reportScore' | 'reportCount' | 'publicationDate' | 'labsPublicationDate' | 'created' | '_created_at' | 'updated' | '_updated_at' | 'order' | 'relevance' | 'magic' | 'name'} [sort]\n   * @param {number} [n] The number of objects to return.\n   * @param {'ascending' | 'descending'} [order]\n   * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n   * @param {string} [search] Filters by world name.\n   * @param {string} [tag] Tags to include (comma-separated). Any of the tags needs to be present.\n   * @param {string} [notag] Tags to exclude (comma-separated).\n   * @param {'public' | 'private' | 'hidden' | 'all'} [releaseStatus] Filter by ReleaseStatus.\n   * @param {string} [maxUnityVersion] The maximum Unity version supported by the asset.\n   * @param {string} [minUnityVersion] The minimum Unity version supported by the asset.\n   * @param {string} [platform] The platform the asset supports.\n   * @param {string} [userId] Target user to see information on, admin-only.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof WorldsApi\n   */\n\n\n  WorldsApi.prototype.getFavoritedWorlds = function (featured, sort, n, order, offset, search, tag, notag, releaseStatus, maxUnityVersion, minUnityVersion, platform, userId, options) {\n    var _this = this;\n\n    return exports.WorldsApiFp(this.configuration).getFavoritedWorlds(featured, sort, n, order, offset, search, tag, notag, releaseStatus, maxUnityVersion, minUnityVersion, platform, userId, options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n  /**\n   * Search and list recently visited worlds by query filters.\n   * @summary List Recent Worlds\n   * @param {boolean} [featured] Filters on featured results.\n   * @param {'popularity' | 'heat' | 'trust' | 'shuffle' | 'random' | 'favorites' | 'reportScore' | 'reportCount' | 'publicationDate' | 'labsPublicationDate' | 'created' | '_created_at' | 'updated' | '_updated_at' | 'order' | 'relevance' | 'magic' | 'name'} [sort]\n   * @param {number} [n] The number of objects to return.\n   * @param {'ascending' | 'descending'} [order]\n   * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n   * @param {string} [search] Filters by world name.\n   * @param {string} [tag] Tags to include (comma-separated). Any of the tags needs to be present.\n   * @param {string} [notag] Tags to exclude (comma-separated).\n   * @param {'public' | 'private' | 'hidden' | 'all'} [releaseStatus] Filter by ReleaseStatus.\n   * @param {string} [maxUnityVersion] The maximum Unity version supported by the asset.\n   * @param {string} [minUnityVersion] The minimum Unity version supported by the asset.\n   * @param {string} [platform] The platform the asset supports.\n   * @param {string} [userId] Target user to see information on, admin-only.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof WorldsApi\n   */\n\n\n  WorldsApi.prototype.getRecentWorlds = function (featured, sort, n, order, offset, search, tag, notag, releaseStatus, maxUnityVersion, minUnityVersion, platform, userId, options) {\n    var _this = this;\n\n    return exports.WorldsApiFp(this.configuration).getRecentWorlds(featured, sort, n, order, offset, search, tag, notag, releaseStatus, maxUnityVersion, minUnityVersion, platform, userId, options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n  /**\n   * Get information about a specific World.\n   * @summary Get World by ID\n   * @param {string} worldId\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof WorldsApi\n   */\n\n\n  WorldsApi.prototype.getWorld = function (worldId, options) {\n    var _this = this;\n\n    return exports.WorldsApiFp(this.configuration).getWorld(worldId, options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n  /**\n   * Returns a worlds instance.\n   * @summary Get World Instance\n   * @param {string} worldId\n   * @param {string} instanceId\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof WorldsApi\n   */\n\n\n  WorldsApi.prototype.getWorldInstance = function (worldId, instanceId, options) {\n    var _this = this;\n\n    return exports.WorldsApiFp(this.configuration).getWorldInstance(worldId, instanceId, options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n  /**\n   * Return a worlds custom metadata. This is currently believed to be unused. Metadata can be set with `updateWorld` and can be any arbitrary object.\n   * @summary Get World Metadata\n   * @param {string} worldId\n   * @param {*} [options] Override http request option.\n   * @deprecated\n   * @throws {RequiredError}\n   * @memberof WorldsApi\n   */\n\n\n  WorldsApi.prototype.getWorldMetadata = function (worldId, options) {\n    var _this = this;\n\n    return exports.WorldsApiFp(this.configuration).getWorldMetadata(worldId, options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n  /**\n   * Returns a worlds publish status.\n   * @summary Get World Publish Status\n   * @param {string} worldId\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof WorldsApi\n   */\n\n\n  WorldsApi.prototype.getWorldPublishStatus = function (worldId, options) {\n    var _this = this;\n\n    return exports.WorldsApiFp(this.configuration).getWorldPublishStatus(worldId, options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n  /**\n   * Publish a world. You can only publish one world per week.\n   * @summary Publish World\n   * @param {string} worldId\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof WorldsApi\n   */\n\n\n  WorldsApi.prototype.publishWorld = function (worldId, options) {\n    var _this = this;\n\n    return exports.WorldsApiFp(this.configuration).publishWorld(worldId, options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n  /**\n   * Search and list any worlds by query filters.\n   * @summary Search All Worlds\n   * @param {boolean} [featured] Filters on featured results.\n   * @param {'popularity' | 'heat' | 'trust' | 'shuffle' | 'random' | 'favorites' | 'reportScore' | 'reportCount' | 'publicationDate' | 'labsPublicationDate' | 'created' | '_created_at' | 'updated' | '_updated_at' | 'order' | 'relevance' | 'magic' | 'name'} [sort]\n   * @param {'me'} [user] Set to &#x60;me&#x60; for searching own worlds.\n   * @param {string} [userId] Filter by UserID.\n   * @param {number} [n] The number of objects to return.\n   * @param {'ascending' | 'descending'} [order]\n   * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n   * @param {string} [search] Filters by world name.\n   * @param {string} [tag] Tags to include (comma-separated). Any of the tags needs to be present.\n   * @param {string} [notag] Tags to exclude (comma-separated).\n   * @param {'public' | 'private' | 'hidden' | 'all'} [releaseStatus] Filter by ReleaseStatus.\n   * @param {string} [maxUnityVersion] The maximum Unity version supported by the asset.\n   * @param {string} [minUnityVersion] The minimum Unity version supported by the asset.\n   * @param {string} [platform] The platform the asset supports.\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof WorldsApi\n   */\n\n\n  WorldsApi.prototype.searchWorlds = function (featured, sort, user, userId, n, order, offset, search, tag, notag, releaseStatus, maxUnityVersion, minUnityVersion, platform, options) {\n    var _this = this;\n\n    return exports.WorldsApiFp(this.configuration).searchWorlds(featured, sort, user, userId, n, order, offset, search, tag, notag, releaseStatus, maxUnityVersion, minUnityVersion, platform, options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n  /**\n   * Unpublish a world.\n   * @summary Unpublish World\n   * @param {string} worldId\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof WorldsApi\n   */\n\n\n  WorldsApi.prototype.unpublishWorld = function (worldId, options) {\n    var _this = this;\n\n    return exports.WorldsApiFp(this.configuration).unpublishWorld(worldId, options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n  /**\n   * Update information about a specific World.\n   * @summary Update World\n   * @param {string} worldId\n   * @param {UpdateWorldRequest} [updateWorldRequest]\n   * @param {*} [options] Override http request option.\n   * @throws {RequiredError}\n   * @memberof WorldsApi\n   */\n\n\n  WorldsApi.prototype.updateWorld = function (worldId, updateWorldRequest, options) {\n    var _this = this;\n\n    return exports.WorldsApiFp(this.configuration).updateWorld(worldId, updateWorldRequest, options).then(function (request) {\n      return request(_this.axios, _this.basePath);\n    });\n  };\n\n  return WorldsApi;\n}(base_1.BaseAPI);\n\nexports.WorldsApi = WorldsApi;","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","__generator","body","_","label","sent","trys","ops","f","y","g","verb","Symbol","iterator","v","op","TypeError","pop","push","defineProperty","exports","WorldsApi","WorldsApiFactory","WorldsApiFp","WorldsApiAxiosParamCreator","UsersApi","UsersApiFactory","UsersApiFp","UsersApiAxiosParamCreator","SystemApi","SystemApiFactory","SystemApiFp","SystemApiAxiosParamCreator","PlayermoderationApi","PlayermoderationApiFactory","PlayermoderationApiFp","PlayermoderationApiAxiosParamCreator","PermissionsApi","PermissionsApiFactory","PermissionsApiFp","PermissionsApiAxiosParamCreator","NotificationsApi","NotificationsApiFactory","NotificationsApiFp","NotificationsApiAxiosParamCreator","InviteApi","InviteApiFactory","InviteApiFp","InviteApiAxiosParamCreator","InstancesApi","InstancesApiFactory","InstancesApiFp","InstancesApiAxiosParamCreator","FriendsApi","FriendsApiFactory","FriendsApiFp","FriendsApiAxiosParamCreator","FilesApi","FilesApiFactory","FilesApiFp","FilesApiAxiosParamCreator","FavoritesApi","FavoritesApiFactory","FavoritesApiFp","FavoritesApiAxiosParamCreator","EconomyApi","EconomyApiFactory","EconomyApiFp","EconomyApiAxiosParamCreator","AvatarsApi","AvatarsApiFactory","AvatarsApiFp","AvatarsApiAxiosParamCreator","AuthenticationApi","AuthenticationApiFactory","AuthenticationApiFp","AuthenticationApiAxiosParamCreator","UserStatus","UserState","TransactionStatus","SubscriptionPeriod","ReleaseStatus","Region","PlayerModerationType","NotificationType","MIMEType","LicenseType","LicenseAction","InviteMessageType","InstanceType","InfoPushDataClickableCommandEnum","FileStatus","FileDataCategoryEnum","FavoriteType","FavoriteGroupVisibility","DeveloperType","DeploymentGroup","axios_1","require","common_1","base_1","axios_cookiejar_support_1","default","tough_cookie_1","defaults","jar","CookieJar","withCredentials","configuration","_this","checkUserExists","email","displayName","userId","excludeUserId","options","localVarPath","localVarUrlObj","baseOptions","localVarRequestOptions","localVarHeaderParameter","localVarQueryParameter","headersFromBaseOptions","_a","URL","DUMMY_BASE_URL","method","undefined","setSearchParams","headers","url","toPathString","deleteUser","assertParamExists","replace","encodeURIComponent","String","getCurrentUser","setBasicAuthToObject","logout","verify2FA","twoFactorAuthCode","data","serializeDataIfNeeded","verifyAuthToken","verifyRecoveryCode","localVarAxiosParamCreator","localVarAxiosArgs","createRequestFunction","BASE_PATH","basePath","axios","localVarFp","request","_super","BaseAPI","createAvatar","createAvatarRequest","deleteAvatar","avatarId","getAvatar","getFavoritedAvatars","featured","sort","order","offset","search","tag","notag","releaseStatus","maxUnityVersion","minUnityVersion","platform","searchAvatars","user","selectAvatar","selectFallbackAvatar","updateAvatar","updateAvatarRequest","getCurrentSubscriptions","getLicenseGroup","licenseGroupId","getSteamTransaction","transactionId","getSteamTransactions","getSubscriptions","addFavorite","addFavoriteRequest","clearFavoriteGroup","favoriteGroupType","favoriteGroupName","getFavorite","favoriteId","getFavoriteGroup","getFavoriteGroups","ownerId","getFavorites","type","removeFavorite","updateFavoriteGroup","updateFavoriteGroupRequest","createFile","createFileRequest","createFileVersion","fileId","createFileVersionRequest","deleteFile","deleteFileVersion","versionId","downloadFileVersion","finishFileDataUpload","fileType","finishFileDataUploadRequest","getFile","getFileDataUploadStatus","getFiles","startFileDataUpload","partNumber","deleteFriendRequest","friend","getFriendStatus","getFriends","offline","unfriend","getInstance","worldId","instanceId","getShortName","sendSelfInvite","getInviteMessage","messageType","slot","getInviteMessages","inviteUser","inviteRequest","requestInvite","requestInviteRequest","resetInviteMessage","respondInvite","notificationId","inviteResponse","updateInviteMessage","updateInviteMessageRequest","acceptFriendRequest","clearNotifications","deleteNotification","getNotifications","hidden","after","markNotificationAsRead","getAssignedPermissions","getPermission","permissionId","clearAllPlayerModerations","deletePlayerModeration","playerModerationId","getPlayerModeration","getPlayerModerations","targetUserId","moderateUser","moderateUserRequest","unmoderateUser","getCSS","variant","branch","getConfig","getCurrentOnlineUsers","getHealth","getInfoPush","include","getJavaScript","getSystemTime","getUser","getUserByName","username","searchUsers","developerType","updateUser","updateUserRequest","createWorld","createWorldRequest","deleteWorld","getActiveWorlds","getFavoritedWorlds","getRecentWorlds","getWorld","getWorldInstance","getWorldMetadata","getWorldPublishStatus","publishWorld","searchWorlds","unpublishWorld","updateWorld","updateWorldRequest"],"sources":["/Users/Taylor/lighthouse/next-world/node_modules/vrchat/dist/api.js"],"sourcesContent":["\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * VRChat API Documentation\n *\n * The version of the OpenAPI document: 1.7.2\n * Contact: me@ariesclark.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WorldsApi = exports.WorldsApiFactory = exports.WorldsApiFp = exports.WorldsApiAxiosParamCreator = exports.UsersApi = exports.UsersApiFactory = exports.UsersApiFp = exports.UsersApiAxiosParamCreator = exports.SystemApi = exports.SystemApiFactory = exports.SystemApiFp = exports.SystemApiAxiosParamCreator = exports.PlayermoderationApi = exports.PlayermoderationApiFactory = exports.PlayermoderationApiFp = exports.PlayermoderationApiAxiosParamCreator = exports.PermissionsApi = exports.PermissionsApiFactory = exports.PermissionsApiFp = exports.PermissionsApiAxiosParamCreator = exports.NotificationsApi = exports.NotificationsApiFactory = exports.NotificationsApiFp = exports.NotificationsApiAxiosParamCreator = exports.InviteApi = exports.InviteApiFactory = exports.InviteApiFp = exports.InviteApiAxiosParamCreator = exports.InstancesApi = exports.InstancesApiFactory = exports.InstancesApiFp = exports.InstancesApiAxiosParamCreator = exports.FriendsApi = exports.FriendsApiFactory = exports.FriendsApiFp = exports.FriendsApiAxiosParamCreator = exports.FilesApi = exports.FilesApiFactory = exports.FilesApiFp = exports.FilesApiAxiosParamCreator = exports.FavoritesApi = exports.FavoritesApiFactory = exports.FavoritesApiFp = exports.FavoritesApiAxiosParamCreator = exports.EconomyApi = exports.EconomyApiFactory = exports.EconomyApiFp = exports.EconomyApiAxiosParamCreator = exports.AvatarsApi = exports.AvatarsApiFactory = exports.AvatarsApiFp = exports.AvatarsApiAxiosParamCreator = exports.AuthenticationApi = exports.AuthenticationApiFactory = exports.AuthenticationApiFp = exports.AuthenticationApiAxiosParamCreator = exports.UserStatus = exports.UserState = exports.TransactionStatus = exports.SubscriptionPeriod = exports.ReleaseStatus = exports.Region = exports.PlayerModerationType = exports.NotificationType = exports.MIMEType = exports.LicenseType = exports.LicenseAction = exports.InviteMessageType = exports.InstanceType = exports.InfoPushDataClickableCommandEnum = exports.FileStatus = exports.FileDataCategoryEnum = exports.FavoriteType = exports.FavoriteGroupVisibility = exports.DeveloperType = exports.DeploymentGroup = void 0;\nvar axios_1 = require(\"axios\");\n// Some imports not used depending on template conditions\n// @ts-ignore\nvar common_1 = require(\"./common\");\n// @ts-ignore\nvar base_1 = require(\"./base\");\nvar axios_cookiejar_support_1 = require(\"axios-cookiejar-support\");\naxios_cookiejar_support_1.default(axios_1.default);\nvar tough_cookie_1 = require(\"tough-cookie\");\naxios_1.default.defaults.jar = new tough_cookie_1.CookieJar();\naxios_1.default.defaults.withCredentials = true;\n/**\n * Used to identify which API deployment cluster is currently responding.  `blue` and `green` are used by Production. `grape`and `cherry` are used during Development.  [Blue Green Deployment by Martin Fowler](https://martinfowler.com/bliki/BlueGreenDeployment.html)\n * @export\n * @enum {string}\n */\nvar DeploymentGroup;\n(function (DeploymentGroup) {\n    DeploymentGroup[\"Blue\"] = \"blue\";\n    DeploymentGroup[\"Green\"] = \"green\";\n    DeploymentGroup[\"Grape\"] = \"grape\";\n    DeploymentGroup[\"Cherry\"] = \"cherry\";\n})(DeploymentGroup = exports.DeploymentGroup || (exports.DeploymentGroup = {}));\n/**\n * \\\"none\\\" User is a normal user \\\"trusted\\\" Unknown \\\"internal\\\" Is a VRChat Developer \\\"moderator\\\" Is a VRChat Moderator  Staff can hide their developerType at will.\n * @export\n * @enum {string}\n */\nvar DeveloperType;\n(function (DeveloperType) {\n    DeveloperType[\"None\"] = \"none\";\n    DeveloperType[\"Trusted\"] = \"trusted\";\n    DeveloperType[\"Internal\"] = \"internal\";\n    DeveloperType[\"Moderator\"] = \"moderator\";\n})(DeveloperType = exports.DeveloperType || (exports.DeveloperType = {}));\n/**\n *\n * @export\n * @enum {string}\n */\nvar FavoriteGroupVisibility;\n(function (FavoriteGroupVisibility) {\n    FavoriteGroupVisibility[\"Private\"] = \"private\";\n    FavoriteGroupVisibility[\"Friends\"] = \"friends\";\n    FavoriteGroupVisibility[\"Public\"] = \"public\";\n})(FavoriteGroupVisibility = exports.FavoriteGroupVisibility || (exports.FavoriteGroupVisibility = {}));\n/**\n *\n * @export\n * @enum {string}\n */\nvar FavoriteType;\n(function (FavoriteType) {\n    FavoriteType[\"World\"] = \"world\";\n    FavoriteType[\"Friend\"] = \"friend\";\n    FavoriteType[\"Avatar\"] = \"avatar\";\n})(FavoriteType = exports.FavoriteType || (exports.FavoriteType = {}));\n/**\n    * @export\n    * @enum {string}\n    */\nvar FileDataCategoryEnum;\n(function (FileDataCategoryEnum) {\n    FileDataCategoryEnum[\"Multipart\"] = \"multipart\";\n    FileDataCategoryEnum[\"Queued\"] = \"queued\";\n    FileDataCategoryEnum[\"Simple\"] = \"simple\";\n})(FileDataCategoryEnum = exports.FileDataCategoryEnum || (exports.FileDataCategoryEnum = {}));\n/**\n *\n * @export\n * @enum {string}\n */\nvar FileStatus;\n(function (FileStatus) {\n    FileStatus[\"Waiting\"] = \"waiting\";\n    FileStatus[\"Complete\"] = \"complete\";\n    FileStatus[\"None\"] = \"none\";\n    FileStatus[\"Queued\"] = \"queued\";\n})(FileStatus = exports.FileStatus || (exports.FileStatus = {}));\n/**\n    * @export\n    * @enum {string}\n    */\nvar InfoPushDataClickableCommandEnum;\n(function (InfoPushDataClickableCommandEnum) {\n    InfoPushDataClickableCommandEnum[\"OpenUrl\"] = \"OpenURL\";\n    InfoPushDataClickableCommandEnum[\"OpenVrcPlusMenu\"] = \"OpenVRCPlusMenu\";\n    InfoPushDataClickableCommandEnum[\"OpenSafetyMenu\"] = \"OpenSafetyMenu\";\n    InfoPushDataClickableCommandEnum[\"CannedWorldSearch\"] = \"CannedWorldSearch\";\n})(InfoPushDataClickableCommandEnum = exports.InfoPushDataClickableCommandEnum || (exports.InfoPushDataClickableCommandEnum = {}));\n/**\n *\n * @export\n * @enum {string}\n */\nvar InstanceType;\n(function (InstanceType) {\n    InstanceType[\"Public\"] = \"public\";\n    InstanceType[\"Hidden\"] = \"hidden\";\n    InstanceType[\"Friends\"] = \"friends\";\n    InstanceType[\"Private\"] = \"private\";\n})(InstanceType = exports.InstanceType || (exports.InstanceType = {}));\n/**\n *\n * @export\n * @enum {string}\n */\nvar InviteMessageType;\n(function (InviteMessageType) {\n    InviteMessageType[\"Message\"] = \"message\";\n    InviteMessageType[\"Response\"] = \"response\";\n    InviteMessageType[\"Request\"] = \"request\";\n    InviteMessageType[\"RequestResponse\"] = \"requestResponse\";\n})(InviteMessageType = exports.InviteMessageType || (exports.InviteMessageType = {}));\n/**\n *\n * @export\n * @enum {string}\n */\nvar LicenseAction;\n(function (LicenseAction) {\n    LicenseAction[\"Wear\"] = \"wear\";\n    LicenseAction[\"Have\"] = \"have\";\n})(LicenseAction = exports.LicenseAction || (exports.LicenseAction = {}));\n/**\n *\n * @export\n * @enum {string}\n */\nvar LicenseType;\n(function (LicenseType) {\n    LicenseType[\"Avatar\"] = \"avatar\";\n    LicenseType[\"LicenseGroup\"] = \"licenseGroup\";\n    LicenseType[\"Permission\"] = \"permission\";\n    LicenseType[\"Product\"] = \"product\";\n})(LicenseType = exports.LicenseType || (exports.LicenseType = {}));\n/**\n *\n * @export\n * @enum {string}\n */\nvar MIMEType;\n(function (MIMEType) {\n    MIMEType[\"ImageJpeg\"] = \"image/jpeg\";\n    MIMEType[\"ImageJpg\"] = \"image/jpg\";\n    MIMEType[\"ImagePng\"] = \"image/png\";\n    MIMEType[\"ImageWebp\"] = \"image/webp\";\n    MIMEType[\"ImageGif\"] = \"image/gif\";\n    MIMEType[\"ImageBmp\"] = \"image/bmp\";\n    MIMEType[\"ImageSvgxml\"] = \"image/svg\\uFF0Bxml\";\n    MIMEType[\"ImageTiff\"] = \"image/tiff\";\n    MIMEType[\"ApplicationXAvatar\"] = \"application/x-avatar\";\n    MIMEType[\"ApplicationXWorld\"] = \"application/x-world\";\n    MIMEType[\"ApplicationGzip\"] = \"application/gzip\";\n    MIMEType[\"ApplicationXRsyncSignature\"] = \"application/x-rsync-signature\";\n    MIMEType[\"ApplicationXRsyncDelta\"] = \"application/x-rsync-delta\";\n    MIMEType[\"ApplicationOctetStream\"] = \"application/octet-stream\";\n})(MIMEType = exports.MIMEType || (exports.MIMEType = {}));\n/**\n *\n * @export\n * @enum {string}\n */\nvar NotificationType;\n(function (NotificationType) {\n    NotificationType[\"FriendRequest\"] = \"friendRequest\";\n    NotificationType[\"Invite\"] = \"invite\";\n    NotificationType[\"InviteResponse\"] = \"inviteResponse\";\n    NotificationType[\"RequestInvite\"] = \"requestInvite\";\n    NotificationType[\"RequestInviteResponse\"] = \"requestInviteResponse\";\n    NotificationType[\"Votetokick\"] = \"votetokick\";\n})(NotificationType = exports.NotificationType || (exports.NotificationType = {}));\n/**\n *\n * @export\n * @enum {string}\n */\nvar PlayerModerationType;\n(function (PlayerModerationType) {\n    PlayerModerationType[\"Mute\"] = \"mute\";\n    PlayerModerationType[\"Unmute\"] = \"unmute\";\n    PlayerModerationType[\"Block\"] = \"block\";\n    PlayerModerationType[\"Unblock\"] = \"unblock\";\n    PlayerModerationType[\"HideAvatar\"] = \"hideAvatar\";\n    PlayerModerationType[\"ShowAvatar\"] = \"showAvatar\";\n    PlayerModerationType[\"InteractOn\"] = \"interactOn\";\n    PlayerModerationType[\"InteractOff\"] = \"interactOff\";\n})(PlayerModerationType = exports.PlayerModerationType || (exports.PlayerModerationType = {}));\n/**\n * API/Photon region.\n * @export\n * @enum {string}\n */\nvar Region;\n(function (Region) {\n    Region[\"Us\"] = \"us\";\n    Region[\"Use\"] = \"use\";\n    Region[\"Usw\"] = \"usw\";\n    Region[\"Eu\"] = \"eu\";\n    Region[\"Jp\"] = \"jp\";\n    Region[\"Unknown\"] = \"unknown\";\n})(Region = exports.Region || (exports.Region = {}));\n/**\n *\n * @export\n * @enum {string}\n */\nvar ReleaseStatus;\n(function (ReleaseStatus) {\n    ReleaseStatus[\"Public\"] = \"public\";\n    ReleaseStatus[\"Private\"] = \"private\";\n    ReleaseStatus[\"Hidden\"] = \"hidden\";\n})(ReleaseStatus = exports.ReleaseStatus || (exports.ReleaseStatus = {}));\n/**\n *\n * @export\n * @enum {string}\n */\nvar SubscriptionPeriod;\n(function (SubscriptionPeriod) {\n    SubscriptionPeriod[\"Hour\"] = \"hour\";\n    SubscriptionPeriod[\"Day\"] = \"day\";\n    SubscriptionPeriod[\"Week\"] = \"week\";\n    SubscriptionPeriod[\"Month\"] = \"month\";\n    SubscriptionPeriod[\"Year\"] = \"year\";\n})(SubscriptionPeriod = exports.SubscriptionPeriod || (exports.SubscriptionPeriod = {}));\n/**\n *\n * @export\n * @enum {string}\n */\nvar TransactionStatus;\n(function (TransactionStatus) {\n    TransactionStatus[\"Active\"] = \"active\";\n    TransactionStatus[\"Failed\"] = \"failed\";\n    TransactionStatus[\"Expired\"] = \"expired\";\n    TransactionStatus[\"Chargeback\"] = \"chargeback\";\n})(TransactionStatus = exports.TransactionStatus || (exports.TransactionStatus = {}));\n/**\n * * \\\"online\\\" User is online in VRChat * \\\"active\\\" User is online, but not in VRChat * \\\"offline\\\" User is offline  Always offline when returned through `getCurrentUser` (/auth/user).\n * @export\n * @enum {string}\n */\nvar UserState;\n(function (UserState) {\n    UserState[\"Offline\"] = \"offline\";\n    UserState[\"Active\"] = \"active\";\n    UserState[\"Online\"] = \"online\";\n})(UserState = exports.UserState || (exports.UserState = {}));\n/**\n * Defines the User\\'s current status, for example \\\"ask me\\\", \\\"join me\\\" or \\\"offline. This status is a combined indicator of their online activity and privacy preference.\n * @export\n * @enum {string}\n */\nvar UserStatus;\n(function (UserStatus) {\n    UserStatus[\"Active\"] = \"active\";\n    UserStatus[\"JoinMe\"] = \"join me\";\n    UserStatus[\"AskMe\"] = \"ask me\";\n    UserStatus[\"Busy\"] = \"busy\";\n    UserStatus[\"Offline\"] = \"offline\";\n})(UserStatus = exports.UserStatus || (exports.UserStatus = {}));\n/**\n * AuthenticationApi - axios parameter creator\n * @export\n */\nexports.AuthenticationApiAxiosParamCreator = function (configuration) {\n    var _this = this;\n    return {\n        /**\n         * Checks if a user by a given `username`, `displayName` or `email` exist. This is used during registration to check if a username has already been taken, during change of displayName to check if a displayName is available, and during change of email to check if the email is already used. In the later two cases the `excludeUserId` is used to exclude oneself, otherwise the result would always be true.  It is **REQUIRED** to include **AT LEAST** `username`, `displayName` **or** `email` query parameter. Although they can be combined - in addition with `excludeUserId` (generally to exclude yourself) - to further fine-tune the search.\n         * @summary Check User Exists\n         * @param {string} [email] Filter by email.\n         * @param {string} [displayName] Filter by displayName.\n         * @param {string} [userId] Filter by UserID.\n         * @param {string} [excludeUserId] Exclude by UserID.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        checkUserExists: function (email, displayName, userId, excludeUserId, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    localVarPath = \"/auth/exists\";\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication apiKeyCookie required\n                    if (email !== undefined) {\n                        localVarQueryParameter['email'] = email;\n                    }\n                    if (displayName !== undefined) {\n                        localVarQueryParameter['displayName'] = displayName;\n                    }\n                    if (userId !== undefined) {\n                        localVarQueryParameter['userId'] = userId;\n                    }\n                    if (excludeUserId !== undefined) {\n                        localVarQueryParameter['excludeUserId'] = excludeUserId;\n                    }\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Deletes the account with given ID. Normal users only have permission to delete their own account. Account deletion is 14 days from this request, and will be cancelled if you do an authenticated request with the account afterwards.  **VRC+ NOTE:** Despite the 14-days cooldown, any VRC+ subscription will be cancelled **immediately**.  **METHOD NOTE:** Despite this being a Delete action, the method type required is PUT.\n         * @summary Delete User\n         * @param {string} userId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteUser: function (userId, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'userId' is not null or undefined\n                    common_1.assertParamExists('deleteUser', 'userId', userId);\n                    localVarPath = \"/user/{userId}/delete\"\n                        .replace(\"{\" + \"userId\" + \"}\", encodeURIComponent(String(userId)));\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'PUT' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication apiKeyCookie required\n                    // authentication authCookie required\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * This endpoint does the following two operations:   1) Checks if you are already logged in by looking for a valid `auth` cookie. If you are have a valid auth cookie then no additional auth-related actions are taken. If you are **not** logged in then it will log you in with the `Authorization` header and set the `auth` cookie. The `auth` cookie will only be sent once.   2) If logged in, this function will also return the CurrentUser object containing detailed information about the currently logged in user.  **WARNING: Session Limit:** Each authentication with login credentials counts as a separate session, out of which you have a limited amount. Make sure to save and reuse the `auth` cookie if you are often restarting the program. The provided API libraries automatically save cookies during runtime, but does not persist during restart. While it can be fine to use username/password during development, expect in production to very fast run into the rate-limit and be temporarily blocked from making new sessions until older ones expire. The exact number of simultaneous sessions is unknown/undisclosed.\n         * @summary Login and/or Get Current User Info\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getCurrentUser: function (options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    localVarPath = \"/auth/user\";\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication authCookie required\n                    // authentication authHeader required\n                    // http basic authentication required\n                    common_1.setBasicAuthToObject(localVarRequestOptions, configuration);\n                    // authentication twoFactorAuthCookie required\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Invalidates the login session.\n         * @summary Logout\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        logout: function (options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    localVarPath = \"/logout\";\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'PUT' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication authCookie required\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Finishes the login sequence with a normal 2FA-generated code for accounts with 2FA-protection enabled.\n         * @summary Verify 2FA code\n         * @param {TwoFactorAuthCode} [twoFactorAuthCode]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        verify2FA: function (twoFactorAuthCode, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    localVarPath = \"/auth/twofactorauth/totp/verify\";\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication authCookie required\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    localVarRequestOptions.data = common_1.serializeDataIfNeeded(twoFactorAuthCode, localVarRequestOptions, configuration);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Verify whether the currently provided Auth Token is valid.\n         * @summary Verify Auth Token\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        verifyAuthToken: function (options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    localVarPath = \"/auth\";\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication authCookie required\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Finishes the login sequence with an OTP (One Time Password) recovery code for accounts with 2FA-protection enabled.\n         * @summary Verify 2FA code with Recovery code\n         * @param {TwoFactorAuthCode} [twoFactorAuthCode]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        verifyRecoveryCode: function (twoFactorAuthCode, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    localVarPath = \"/auth/twofactorauth/otp/verify\";\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication authCookie required\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    localVarRequestOptions.data = common_1.serializeDataIfNeeded(twoFactorAuthCode, localVarRequestOptions, configuration);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n    };\n};\n/**\n * AuthenticationApi - functional programming interface\n * @export\n */\nexports.AuthenticationApiFp = function (configuration) {\n    var localVarAxiosParamCreator = exports.AuthenticationApiAxiosParamCreator(configuration);\n    return {\n        /**\n         * Checks if a user by a given `username`, `displayName` or `email` exist. This is used during registration to check if a username has already been taken, during change of displayName to check if a displayName is available, and during change of email to check if the email is already used. In the later two cases the `excludeUserId` is used to exclude oneself, otherwise the result would always be true.  It is **REQUIRED** to include **AT LEAST** `username`, `displayName` **or** `email` query parameter. Although they can be combined - in addition with `excludeUserId` (generally to exclude yourself) - to further fine-tune the search.\n         * @summary Check User Exists\n         * @param {string} [email] Filter by email.\n         * @param {string} [displayName] Filter by displayName.\n         * @param {string} [userId] Filter by UserID.\n         * @param {string} [excludeUserId] Exclude by UserID.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        checkUserExists: function (email, displayName, userId, excludeUserId, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.checkUserExists(email, displayName, userId, excludeUserId, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n        /**\n         * Deletes the account with given ID. Normal users only have permission to delete their own account. Account deletion is 14 days from this request, and will be cancelled if you do an authenticated request with the account afterwards.  **VRC+ NOTE:** Despite the 14-days cooldown, any VRC+ subscription will be cancelled **immediately**.  **METHOD NOTE:** Despite this being a Delete action, the method type required is PUT.\n         * @summary Delete User\n         * @param {string} userId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteUser: function (userId, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.deleteUser(userId, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n        /**\n         * This endpoint does the following two operations:   1) Checks if you are already logged in by looking for a valid `auth` cookie. If you are have a valid auth cookie then no additional auth-related actions are taken. If you are **not** logged in then it will log you in with the `Authorization` header and set the `auth` cookie. The `auth` cookie will only be sent once.   2) If logged in, this function will also return the CurrentUser object containing detailed information about the currently logged in user.  **WARNING: Session Limit:** Each authentication with login credentials counts as a separate session, out of which you have a limited amount. Make sure to save and reuse the `auth` cookie if you are often restarting the program. The provided API libraries automatically save cookies during runtime, but does not persist during restart. While it can be fine to use username/password during development, expect in production to very fast run into the rate-limit and be temporarily blocked from making new sessions until older ones expire. The exact number of simultaneous sessions is unknown/undisclosed.\n         * @summary Login and/or Get Current User Info\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getCurrentUser: function (options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.getCurrentUser(options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n        /**\n         * Invalidates the login session.\n         * @summary Logout\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        logout: function (options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.logout(options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n        /**\n         * Finishes the login sequence with a normal 2FA-generated code for accounts with 2FA-protection enabled.\n         * @summary Verify 2FA code\n         * @param {TwoFactorAuthCode} [twoFactorAuthCode]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        verify2FA: function (twoFactorAuthCode, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.verify2FA(twoFactorAuthCode, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n        /**\n         * Verify whether the currently provided Auth Token is valid.\n         * @summary Verify Auth Token\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        verifyAuthToken: function (options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.verifyAuthToken(options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n        /**\n         * Finishes the login sequence with an OTP (One Time Password) recovery code for accounts with 2FA-protection enabled.\n         * @summary Verify 2FA code with Recovery code\n         * @param {TwoFactorAuthCode} [twoFactorAuthCode]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        verifyRecoveryCode: function (twoFactorAuthCode, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.verifyRecoveryCode(twoFactorAuthCode, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n    };\n};\n/**\n * AuthenticationApi - factory interface\n * @export\n */\nexports.AuthenticationApiFactory = function (configuration, basePath, axios) {\n    var localVarFp = exports.AuthenticationApiFp(configuration);\n    return {\n        /**\n         * Checks if a user by a given `username`, `displayName` or `email` exist. This is used during registration to check if a username has already been taken, during change of displayName to check if a displayName is available, and during change of email to check if the email is already used. In the later two cases the `excludeUserId` is used to exclude oneself, otherwise the result would always be true.  It is **REQUIRED** to include **AT LEAST** `username`, `displayName` **or** `email` query parameter. Although they can be combined - in addition with `excludeUserId` (generally to exclude yourself) - to further fine-tune the search.\n         * @summary Check User Exists\n         * @param {string} [email] Filter by email.\n         * @param {string} [displayName] Filter by displayName.\n         * @param {string} [userId] Filter by UserID.\n         * @param {string} [excludeUserId] Exclude by UserID.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        checkUserExists: function (email, displayName, userId, excludeUserId, options) {\n            return localVarFp.checkUserExists(email, displayName, userId, excludeUserId, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Deletes the account with given ID. Normal users only have permission to delete their own account. Account deletion is 14 days from this request, and will be cancelled if you do an authenticated request with the account afterwards.  **VRC+ NOTE:** Despite the 14-days cooldown, any VRC+ subscription will be cancelled **immediately**.  **METHOD NOTE:** Despite this being a Delete action, the method type required is PUT.\n         * @summary Delete User\n         * @param {string} userId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteUser: function (userId, options) {\n            return localVarFp.deleteUser(userId, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * This endpoint does the following two operations:   1) Checks if you are already logged in by looking for a valid `auth` cookie. If you are have a valid auth cookie then no additional auth-related actions are taken. If you are **not** logged in then it will log you in with the `Authorization` header and set the `auth` cookie. The `auth` cookie will only be sent once.   2) If logged in, this function will also return the CurrentUser object containing detailed information about the currently logged in user.  **WARNING: Session Limit:** Each authentication with login credentials counts as a separate session, out of which you have a limited amount. Make sure to save and reuse the `auth` cookie if you are often restarting the program. The provided API libraries automatically save cookies during runtime, but does not persist during restart. While it can be fine to use username/password during development, expect in production to very fast run into the rate-limit and be temporarily blocked from making new sessions until older ones expire. The exact number of simultaneous sessions is unknown/undisclosed.\n         * @summary Login and/or Get Current User Info\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getCurrentUser: function (options) {\n            return localVarFp.getCurrentUser(options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Invalidates the login session.\n         * @summary Logout\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        logout: function (options) {\n            return localVarFp.logout(options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Finishes the login sequence with a normal 2FA-generated code for accounts with 2FA-protection enabled.\n         * @summary Verify 2FA code\n         * @param {TwoFactorAuthCode} [twoFactorAuthCode]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        verify2FA: function (twoFactorAuthCode, options) {\n            return localVarFp.verify2FA(twoFactorAuthCode, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Verify whether the currently provided Auth Token is valid.\n         * @summary Verify Auth Token\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        verifyAuthToken: function (options) {\n            return localVarFp.verifyAuthToken(options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Finishes the login sequence with an OTP (One Time Password) recovery code for accounts with 2FA-protection enabled.\n         * @summary Verify 2FA code with Recovery code\n         * @param {TwoFactorAuthCode} [twoFactorAuthCode]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        verifyRecoveryCode: function (twoFactorAuthCode, options) {\n            return localVarFp.verifyRecoveryCode(twoFactorAuthCode, options).then(function (request) { return request(axios, basePath); });\n        },\n    };\n};\n/**\n * AuthenticationApi - object-oriented interface\n * @export\n * @class AuthenticationApi\n * @extends {BaseAPI}\n */\nvar AuthenticationApi = /** @class */ (function (_super) {\n    __extends(AuthenticationApi, _super);\n    function AuthenticationApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Checks if a user by a given `username`, `displayName` or `email` exist. This is used during registration to check if a username has already been taken, during change of displayName to check if a displayName is available, and during change of email to check if the email is already used. In the later two cases the `excludeUserId` is used to exclude oneself, otherwise the result would always be true.  It is **REQUIRED** to include **AT LEAST** `username`, `displayName` **or** `email` query parameter. Although they can be combined - in addition with `excludeUserId` (generally to exclude yourself) - to further fine-tune the search.\n     * @summary Check User Exists\n     * @param {string} [email] Filter by email.\n     * @param {string} [displayName] Filter by displayName.\n     * @param {string} [userId] Filter by UserID.\n     * @param {string} [excludeUserId] Exclude by UserID.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof AuthenticationApi\n     */\n    AuthenticationApi.prototype.checkUserExists = function (email, displayName, userId, excludeUserId, options) {\n        var _this = this;\n        return exports.AuthenticationApiFp(this.configuration).checkUserExists(email, displayName, userId, excludeUserId, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Deletes the account with given ID. Normal users only have permission to delete their own account. Account deletion is 14 days from this request, and will be cancelled if you do an authenticated request with the account afterwards.  **VRC+ NOTE:** Despite the 14-days cooldown, any VRC+ subscription will be cancelled **immediately**.  **METHOD NOTE:** Despite this being a Delete action, the method type required is PUT.\n     * @summary Delete User\n     * @param {string} userId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof AuthenticationApi\n     */\n    AuthenticationApi.prototype.deleteUser = function (userId, options) {\n        var _this = this;\n        return exports.AuthenticationApiFp(this.configuration).deleteUser(userId, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * This endpoint does the following two operations:   1) Checks if you are already logged in by looking for a valid `auth` cookie. If you are have a valid auth cookie then no additional auth-related actions are taken. If you are **not** logged in then it will log you in with the `Authorization` header and set the `auth` cookie. The `auth` cookie will only be sent once.   2) If logged in, this function will also return the CurrentUser object containing detailed information about the currently logged in user.  **WARNING: Session Limit:** Each authentication with login credentials counts as a separate session, out of which you have a limited amount. Make sure to save and reuse the `auth` cookie if you are often restarting the program. The provided API libraries automatically save cookies during runtime, but does not persist during restart. While it can be fine to use username/password during development, expect in production to very fast run into the rate-limit and be temporarily blocked from making new sessions until older ones expire. The exact number of simultaneous sessions is unknown/undisclosed.\n     * @summary Login and/or Get Current User Info\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof AuthenticationApi\n     */\n    AuthenticationApi.prototype.getCurrentUser = function (options) {\n        var _this = this;\n        return exports.AuthenticationApiFp(this.configuration).getCurrentUser(options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Invalidates the login session.\n     * @summary Logout\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof AuthenticationApi\n     */\n    AuthenticationApi.prototype.logout = function (options) {\n        var _this = this;\n        return exports.AuthenticationApiFp(this.configuration).logout(options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Finishes the login sequence with a normal 2FA-generated code for accounts with 2FA-protection enabled.\n     * @summary Verify 2FA code\n     * @param {TwoFactorAuthCode} [twoFactorAuthCode]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof AuthenticationApi\n     */\n    AuthenticationApi.prototype.verify2FA = function (twoFactorAuthCode, options) {\n        var _this = this;\n        return exports.AuthenticationApiFp(this.configuration).verify2FA(twoFactorAuthCode, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Verify whether the currently provided Auth Token is valid.\n     * @summary Verify Auth Token\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof AuthenticationApi\n     */\n    AuthenticationApi.prototype.verifyAuthToken = function (options) {\n        var _this = this;\n        return exports.AuthenticationApiFp(this.configuration).verifyAuthToken(options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Finishes the login sequence with an OTP (One Time Password) recovery code for accounts with 2FA-protection enabled.\n     * @summary Verify 2FA code with Recovery code\n     * @param {TwoFactorAuthCode} [twoFactorAuthCode]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof AuthenticationApi\n     */\n    AuthenticationApi.prototype.verifyRecoveryCode = function (twoFactorAuthCode, options) {\n        var _this = this;\n        return exports.AuthenticationApiFp(this.configuration).verifyRecoveryCode(twoFactorAuthCode, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    return AuthenticationApi;\n}(base_1.BaseAPI));\nexports.AuthenticationApi = AuthenticationApi;\n/**\n * AvatarsApi - axios parameter creator\n * @export\n */\nexports.AvatarsApiAxiosParamCreator = function (configuration) {\n    var _this = this;\n    return {\n        /**\n         * Create an avatar. It\\'s possible to optionally specify a ID if you want a custom one. Attempting to create an Avatar with an already claimed ID will result in a DB error.\n         * @summary Create Avatar\n         * @param {CreateAvatarRequest} [createAvatarRequest]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createAvatar: function (createAvatarRequest, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    localVarPath = \"/avatars\";\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication apiKeyCookie required\n                    // authentication authCookie required\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    localVarRequestOptions.data = common_1.serializeDataIfNeeded(createAvatarRequest, localVarRequestOptions, configuration);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Delete an avatar. Notice an avatar is never fully \\\"deleted\\\", only its ReleaseStatus is set to \\\"hidden\\\" and the linked Files are deleted. The AvatarID is permanently reserved.\n         * @summary Delete Avatar\n         * @param {string} avatarId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteAvatar: function (avatarId, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'avatarId' is not null or undefined\n                    common_1.assertParamExists('deleteAvatar', 'avatarId', avatarId);\n                    localVarPath = \"/avatars/{avatarId}\"\n                        .replace(\"{\" + \"avatarId\" + \"}\", encodeURIComponent(String(avatarId)));\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'DELETE' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication apiKeyCookie required\n                    // authentication authCookie required\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Get information about a specific Avatar.\n         * @summary Get Avatar\n         * @param {string} avatarId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getAvatar: function (avatarId, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'avatarId' is not null or undefined\n                    common_1.assertParamExists('getAvatar', 'avatarId', avatarId);\n                    localVarPath = \"/avatars/{avatarId}\"\n                        .replace(\"{\" + \"avatarId\" + \"}\", encodeURIComponent(String(avatarId)));\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication apiKeyCookie required\n                    // authentication authCookie required\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Search and list favorited avatars by query filters.\n         * @summary List Favorited Avatars\n         * @param {boolean} [featured] Filters on featured results.\n         * @param {'popularity' | 'heat' | 'trust' | 'shuffle' | 'random' | 'favorites' | 'reportScore' | 'reportCount' | 'publicationDate' | 'labsPublicationDate' | 'created' | '_created_at' | 'updated' | '_updated_at' | 'order' | 'relevance' | 'magic' | 'name'} [sort]\n         * @param {number} [n] The number of objects to return.\n         * @param {'ascending' | 'descending'} [order]\n         * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n         * @param {string} [search] Filters by world name.\n         * @param {string} [tag] Tags to include (comma-separated). Any of the tags needs to be present.\n         * @param {string} [notag] Tags to exclude (comma-separated).\n         * @param {'public' | 'private' | 'hidden' | 'all'} [releaseStatus] Filter by ReleaseStatus.\n         * @param {string} [maxUnityVersion] The maximum Unity version supported by the asset.\n         * @param {string} [minUnityVersion] The minimum Unity version supported by the asset.\n         * @param {string} [platform] The platform the asset supports.\n         * @param {string} [userId] Target user to see information on, admin-only.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getFavoritedAvatars: function (featured, sort, n, order, offset, search, tag, notag, releaseStatus, maxUnityVersion, minUnityVersion, platform, userId, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    localVarPath = \"/avatars/favorites\";\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication apiKeyCookie required\n                    // authentication authCookie required\n                    if (featured !== undefined) {\n                        localVarQueryParameter['featured'] = featured;\n                    }\n                    if (sort !== undefined) {\n                        localVarQueryParameter['sort'] = sort;\n                    }\n                    if (n !== undefined) {\n                        localVarQueryParameter['n'] = n;\n                    }\n                    if (order !== undefined) {\n                        localVarQueryParameter['order'] = order;\n                    }\n                    if (offset !== undefined) {\n                        localVarQueryParameter['offset'] = offset;\n                    }\n                    if (search !== undefined) {\n                        localVarQueryParameter['search'] = search;\n                    }\n                    if (tag !== undefined) {\n                        localVarQueryParameter['tag'] = tag;\n                    }\n                    if (notag !== undefined) {\n                        localVarQueryParameter['notag'] = notag;\n                    }\n                    if (releaseStatus !== undefined) {\n                        localVarQueryParameter['releaseStatus'] = releaseStatus;\n                    }\n                    if (maxUnityVersion !== undefined) {\n                        localVarQueryParameter['maxUnityVersion'] = maxUnityVersion;\n                    }\n                    if (minUnityVersion !== undefined) {\n                        localVarQueryParameter['minUnityVersion'] = minUnityVersion;\n                    }\n                    if (platform !== undefined) {\n                        localVarQueryParameter['platform'] = platform;\n                    }\n                    if (userId !== undefined) {\n                        localVarQueryParameter['userId'] = userId;\n                    }\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Search and list avatars by query filters. You can only search your own or featured avatars. It is not possible as a normal user to search other peoples avatars.\n         * @summary Search Avatars\n         * @param {boolean} [featured] Filters on featured results.\n         * @param {'popularity' | 'heat' | 'trust' | 'shuffle' | 'random' | 'favorites' | 'reportScore' | 'reportCount' | 'publicationDate' | 'labsPublicationDate' | 'created' | '_created_at' | 'updated' | '_updated_at' | 'order' | 'relevance' | 'magic' | 'name'} [sort]\n         * @param {'me'} [user] Set to &#x60;me&#x60; for searching own avatars.\n         * @param {string} [userId] Filter by UserID.\n         * @param {number} [n] The number of objects to return.\n         * @param {'ascending' | 'descending'} [order]\n         * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n         * @param {string} [tag] Tags to include (comma-separated). Any of the tags needs to be present.\n         * @param {string} [notag] Tags to exclude (comma-separated).\n         * @param {'public' | 'private' | 'hidden' | 'all'} [releaseStatus] Filter by ReleaseStatus.\n         * @param {string} [maxUnityVersion] The maximum Unity version supported by the asset.\n         * @param {string} [minUnityVersion] The minimum Unity version supported by the asset.\n         * @param {string} [platform] The platform the asset supports.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        searchAvatars: function (featured, sort, user, userId, n, order, offset, tag, notag, releaseStatus, maxUnityVersion, minUnityVersion, platform, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    localVarPath = \"/avatars\";\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication apiKeyCookie required\n                    // authentication authCookie required\n                    if (featured !== undefined) {\n                        localVarQueryParameter['featured'] = featured;\n                    }\n                    if (sort !== undefined) {\n                        localVarQueryParameter['sort'] = sort;\n                    }\n                    if (user !== undefined) {\n                        localVarQueryParameter['user'] = user;\n                    }\n                    if (userId !== undefined) {\n                        localVarQueryParameter['userId'] = userId;\n                    }\n                    if (n !== undefined) {\n                        localVarQueryParameter['n'] = n;\n                    }\n                    if (order !== undefined) {\n                        localVarQueryParameter['order'] = order;\n                    }\n                    if (offset !== undefined) {\n                        localVarQueryParameter['offset'] = offset;\n                    }\n                    if (tag !== undefined) {\n                        localVarQueryParameter['tag'] = tag;\n                    }\n                    if (notag !== undefined) {\n                        localVarQueryParameter['notag'] = notag;\n                    }\n                    if (releaseStatus !== undefined) {\n                        localVarQueryParameter['releaseStatus'] = releaseStatus;\n                    }\n                    if (maxUnityVersion !== undefined) {\n                        localVarQueryParameter['maxUnityVersion'] = maxUnityVersion;\n                    }\n                    if (minUnityVersion !== undefined) {\n                        localVarQueryParameter['minUnityVersion'] = minUnityVersion;\n                    }\n                    if (platform !== undefined) {\n                        localVarQueryParameter['platform'] = platform;\n                    }\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Switches into that avatar.\n         * @summary Select Avatar\n         * @param {string} avatarId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        selectAvatar: function (avatarId, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'avatarId' is not null or undefined\n                    common_1.assertParamExists('selectAvatar', 'avatarId', avatarId);\n                    localVarPath = \"/avatars/{avatarId}/select\"\n                        .replace(\"{\" + \"avatarId\" + \"}\", encodeURIComponent(String(avatarId)));\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'PUT' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication apiKeyCookie required\n                    // authentication authCookie required\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Switches into that avatar as your fallback avatar.\n         * @summary Select Fallback Avatar\n         * @param {string} avatarId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        selectFallbackAvatar: function (avatarId, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'avatarId' is not null or undefined\n                    common_1.assertParamExists('selectFallbackAvatar', 'avatarId', avatarId);\n                    localVarPath = \"/avatars/{avatarId}/selectFallback\"\n                        .replace(\"{\" + \"avatarId\" + \"}\", encodeURIComponent(String(avatarId)));\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'PUT' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication apiKeyCookie required\n                    // authentication authCookie required\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Update information about a specific avatar.\n         * @summary Update Avatar\n         * @param {string} avatarId\n         * @param {UpdateAvatarRequest} [updateAvatarRequest]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateAvatar: function (avatarId, updateAvatarRequest, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'avatarId' is not null or undefined\n                    common_1.assertParamExists('updateAvatar', 'avatarId', avatarId);\n                    localVarPath = \"/avatars/{avatarId}\"\n                        .replace(\"{\" + \"avatarId\" + \"}\", encodeURIComponent(String(avatarId)));\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'PUT' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication apiKeyCookie required\n                    // authentication authCookie required\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    localVarRequestOptions.data = common_1.serializeDataIfNeeded(updateAvatarRequest, localVarRequestOptions, configuration);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n    };\n};\n/**\n * AvatarsApi - functional programming interface\n * @export\n */\nexports.AvatarsApiFp = function (configuration) {\n    var localVarAxiosParamCreator = exports.AvatarsApiAxiosParamCreator(configuration);\n    return {\n        /**\n         * Create an avatar. It\\'s possible to optionally specify a ID if you want a custom one. Attempting to create an Avatar with an already claimed ID will result in a DB error.\n         * @summary Create Avatar\n         * @param {CreateAvatarRequest} [createAvatarRequest]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createAvatar: function (createAvatarRequest, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.createAvatar(createAvatarRequest, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n        /**\n         * Delete an avatar. Notice an avatar is never fully \\\"deleted\\\", only its ReleaseStatus is set to \\\"hidden\\\" and the linked Files are deleted. The AvatarID is permanently reserved.\n         * @summary Delete Avatar\n         * @param {string} avatarId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteAvatar: function (avatarId, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.deleteAvatar(avatarId, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n        /**\n         * Get information about a specific Avatar.\n         * @summary Get Avatar\n         * @param {string} avatarId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getAvatar: function (avatarId, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.getAvatar(avatarId, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n        /**\n         * Search and list favorited avatars by query filters.\n         * @summary List Favorited Avatars\n         * @param {boolean} [featured] Filters on featured results.\n         * @param {'popularity' | 'heat' | 'trust' | 'shuffle' | 'random' | 'favorites' | 'reportScore' | 'reportCount' | 'publicationDate' | 'labsPublicationDate' | 'created' | '_created_at' | 'updated' | '_updated_at' | 'order' | 'relevance' | 'magic' | 'name'} [sort]\n         * @param {number} [n] The number of objects to return.\n         * @param {'ascending' | 'descending'} [order]\n         * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n         * @param {string} [search] Filters by world name.\n         * @param {string} [tag] Tags to include (comma-separated). Any of the tags needs to be present.\n         * @param {string} [notag] Tags to exclude (comma-separated).\n         * @param {'public' | 'private' | 'hidden' | 'all'} [releaseStatus] Filter by ReleaseStatus.\n         * @param {string} [maxUnityVersion] The maximum Unity version supported by the asset.\n         * @param {string} [minUnityVersion] The minimum Unity version supported by the asset.\n         * @param {string} [platform] The platform the asset supports.\n         * @param {string} [userId] Target user to see information on, admin-only.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getFavoritedAvatars: function (featured, sort, n, order, offset, search, tag, notag, releaseStatus, maxUnityVersion, minUnityVersion, platform, userId, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.getFavoritedAvatars(featured, sort, n, order, offset, search, tag, notag, releaseStatus, maxUnityVersion, minUnityVersion, platform, userId, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n        /**\n         * Search and list avatars by query filters. You can only search your own or featured avatars. It is not possible as a normal user to search other peoples avatars.\n         * @summary Search Avatars\n         * @param {boolean} [featured] Filters on featured results.\n         * @param {'popularity' | 'heat' | 'trust' | 'shuffle' | 'random' | 'favorites' | 'reportScore' | 'reportCount' | 'publicationDate' | 'labsPublicationDate' | 'created' | '_created_at' | 'updated' | '_updated_at' | 'order' | 'relevance' | 'magic' | 'name'} [sort]\n         * @param {'me'} [user] Set to &#x60;me&#x60; for searching own avatars.\n         * @param {string} [userId] Filter by UserID.\n         * @param {number} [n] The number of objects to return.\n         * @param {'ascending' | 'descending'} [order]\n         * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n         * @param {string} [tag] Tags to include (comma-separated). Any of the tags needs to be present.\n         * @param {string} [notag] Tags to exclude (comma-separated).\n         * @param {'public' | 'private' | 'hidden' | 'all'} [releaseStatus] Filter by ReleaseStatus.\n         * @param {string} [maxUnityVersion] The maximum Unity version supported by the asset.\n         * @param {string} [minUnityVersion] The minimum Unity version supported by the asset.\n         * @param {string} [platform] The platform the asset supports.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        searchAvatars: function (featured, sort, user, userId, n, order, offset, tag, notag, releaseStatus, maxUnityVersion, minUnityVersion, platform, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.searchAvatars(featured, sort, user, userId, n, order, offset, tag, notag, releaseStatus, maxUnityVersion, minUnityVersion, platform, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n        /**\n         * Switches into that avatar.\n         * @summary Select Avatar\n         * @param {string} avatarId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        selectAvatar: function (avatarId, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.selectAvatar(avatarId, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n        /**\n         * Switches into that avatar as your fallback avatar.\n         * @summary Select Fallback Avatar\n         * @param {string} avatarId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        selectFallbackAvatar: function (avatarId, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.selectFallbackAvatar(avatarId, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n        /**\n         * Update information about a specific avatar.\n         * @summary Update Avatar\n         * @param {string} avatarId\n         * @param {UpdateAvatarRequest} [updateAvatarRequest]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateAvatar: function (avatarId, updateAvatarRequest, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.updateAvatar(avatarId, updateAvatarRequest, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n    };\n};\n/**\n * AvatarsApi - factory interface\n * @export\n */\nexports.AvatarsApiFactory = function (configuration, basePath, axios) {\n    var localVarFp = exports.AvatarsApiFp(configuration);\n    return {\n        /**\n         * Create an avatar. It\\'s possible to optionally specify a ID if you want a custom one. Attempting to create an Avatar with an already claimed ID will result in a DB error.\n         * @summary Create Avatar\n         * @param {CreateAvatarRequest} [createAvatarRequest]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createAvatar: function (createAvatarRequest, options) {\n            return localVarFp.createAvatar(createAvatarRequest, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Delete an avatar. Notice an avatar is never fully \\\"deleted\\\", only its ReleaseStatus is set to \\\"hidden\\\" and the linked Files are deleted. The AvatarID is permanently reserved.\n         * @summary Delete Avatar\n         * @param {string} avatarId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteAvatar: function (avatarId, options) {\n            return localVarFp.deleteAvatar(avatarId, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Get information about a specific Avatar.\n         * @summary Get Avatar\n         * @param {string} avatarId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getAvatar: function (avatarId, options) {\n            return localVarFp.getAvatar(avatarId, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Search and list favorited avatars by query filters.\n         * @summary List Favorited Avatars\n         * @param {boolean} [featured] Filters on featured results.\n         * @param {'popularity' | 'heat' | 'trust' | 'shuffle' | 'random' | 'favorites' | 'reportScore' | 'reportCount' | 'publicationDate' | 'labsPublicationDate' | 'created' | '_created_at' | 'updated' | '_updated_at' | 'order' | 'relevance' | 'magic' | 'name'} [sort]\n         * @param {number} [n] The number of objects to return.\n         * @param {'ascending' | 'descending'} [order]\n         * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n         * @param {string} [search] Filters by world name.\n         * @param {string} [tag] Tags to include (comma-separated). Any of the tags needs to be present.\n         * @param {string} [notag] Tags to exclude (comma-separated).\n         * @param {'public' | 'private' | 'hidden' | 'all'} [releaseStatus] Filter by ReleaseStatus.\n         * @param {string} [maxUnityVersion] The maximum Unity version supported by the asset.\n         * @param {string} [minUnityVersion] The minimum Unity version supported by the asset.\n         * @param {string} [platform] The platform the asset supports.\n         * @param {string} [userId] Target user to see information on, admin-only.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getFavoritedAvatars: function (featured, sort, n, order, offset, search, tag, notag, releaseStatus, maxUnityVersion, minUnityVersion, platform, userId, options) {\n            return localVarFp.getFavoritedAvatars(featured, sort, n, order, offset, search, tag, notag, releaseStatus, maxUnityVersion, minUnityVersion, platform, userId, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Search and list avatars by query filters. You can only search your own or featured avatars. It is not possible as a normal user to search other peoples avatars.\n         * @summary Search Avatars\n         * @param {boolean} [featured] Filters on featured results.\n         * @param {'popularity' | 'heat' | 'trust' | 'shuffle' | 'random' | 'favorites' | 'reportScore' | 'reportCount' | 'publicationDate' | 'labsPublicationDate' | 'created' | '_created_at' | 'updated' | '_updated_at' | 'order' | 'relevance' | 'magic' | 'name'} [sort]\n         * @param {'me'} [user] Set to &#x60;me&#x60; for searching own avatars.\n         * @param {string} [userId] Filter by UserID.\n         * @param {number} [n] The number of objects to return.\n         * @param {'ascending' | 'descending'} [order]\n         * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n         * @param {string} [tag] Tags to include (comma-separated). Any of the tags needs to be present.\n         * @param {string} [notag] Tags to exclude (comma-separated).\n         * @param {'public' | 'private' | 'hidden' | 'all'} [releaseStatus] Filter by ReleaseStatus.\n         * @param {string} [maxUnityVersion] The maximum Unity version supported by the asset.\n         * @param {string} [minUnityVersion] The minimum Unity version supported by the asset.\n         * @param {string} [platform] The platform the asset supports.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        searchAvatars: function (featured, sort, user, userId, n, order, offset, tag, notag, releaseStatus, maxUnityVersion, minUnityVersion, platform, options) {\n            return localVarFp.searchAvatars(featured, sort, user, userId, n, order, offset, tag, notag, releaseStatus, maxUnityVersion, minUnityVersion, platform, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Switches into that avatar.\n         * @summary Select Avatar\n         * @param {string} avatarId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        selectAvatar: function (avatarId, options) {\n            return localVarFp.selectAvatar(avatarId, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Switches into that avatar as your fallback avatar.\n         * @summary Select Fallback Avatar\n         * @param {string} avatarId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        selectFallbackAvatar: function (avatarId, options) {\n            return localVarFp.selectFallbackAvatar(avatarId, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Update information about a specific avatar.\n         * @summary Update Avatar\n         * @param {string} avatarId\n         * @param {UpdateAvatarRequest} [updateAvatarRequest]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateAvatar: function (avatarId, updateAvatarRequest, options) {\n            return localVarFp.updateAvatar(avatarId, updateAvatarRequest, options).then(function (request) { return request(axios, basePath); });\n        },\n    };\n};\n/**\n * AvatarsApi - object-oriented interface\n * @export\n * @class AvatarsApi\n * @extends {BaseAPI}\n */\nvar AvatarsApi = /** @class */ (function (_super) {\n    __extends(AvatarsApi, _super);\n    function AvatarsApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Create an avatar. It\\'s possible to optionally specify a ID if you want a custom one. Attempting to create an Avatar with an already claimed ID will result in a DB error.\n     * @summary Create Avatar\n     * @param {CreateAvatarRequest} [createAvatarRequest]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof AvatarsApi\n     */\n    AvatarsApi.prototype.createAvatar = function (createAvatarRequest, options) {\n        var _this = this;\n        return exports.AvatarsApiFp(this.configuration).createAvatar(createAvatarRequest, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Delete an avatar. Notice an avatar is never fully \\\"deleted\\\", only its ReleaseStatus is set to \\\"hidden\\\" and the linked Files are deleted. The AvatarID is permanently reserved.\n     * @summary Delete Avatar\n     * @param {string} avatarId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof AvatarsApi\n     */\n    AvatarsApi.prototype.deleteAvatar = function (avatarId, options) {\n        var _this = this;\n        return exports.AvatarsApiFp(this.configuration).deleteAvatar(avatarId, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Get information about a specific Avatar.\n     * @summary Get Avatar\n     * @param {string} avatarId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof AvatarsApi\n     */\n    AvatarsApi.prototype.getAvatar = function (avatarId, options) {\n        var _this = this;\n        return exports.AvatarsApiFp(this.configuration).getAvatar(avatarId, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Search and list favorited avatars by query filters.\n     * @summary List Favorited Avatars\n     * @param {boolean} [featured] Filters on featured results.\n     * @param {'popularity' | 'heat' | 'trust' | 'shuffle' | 'random' | 'favorites' | 'reportScore' | 'reportCount' | 'publicationDate' | 'labsPublicationDate' | 'created' | '_created_at' | 'updated' | '_updated_at' | 'order' | 'relevance' | 'magic' | 'name'} [sort]\n     * @param {number} [n] The number of objects to return.\n     * @param {'ascending' | 'descending'} [order]\n     * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n     * @param {string} [search] Filters by world name.\n     * @param {string} [tag] Tags to include (comma-separated). Any of the tags needs to be present.\n     * @param {string} [notag] Tags to exclude (comma-separated).\n     * @param {'public' | 'private' | 'hidden' | 'all'} [releaseStatus] Filter by ReleaseStatus.\n     * @param {string} [maxUnityVersion] The maximum Unity version supported by the asset.\n     * @param {string} [minUnityVersion] The minimum Unity version supported by the asset.\n     * @param {string} [platform] The platform the asset supports.\n     * @param {string} [userId] Target user to see information on, admin-only.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof AvatarsApi\n     */\n    AvatarsApi.prototype.getFavoritedAvatars = function (featured, sort, n, order, offset, search, tag, notag, releaseStatus, maxUnityVersion, minUnityVersion, platform, userId, options) {\n        var _this = this;\n        return exports.AvatarsApiFp(this.configuration).getFavoritedAvatars(featured, sort, n, order, offset, search, tag, notag, releaseStatus, maxUnityVersion, minUnityVersion, platform, userId, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Search and list avatars by query filters. You can only search your own or featured avatars. It is not possible as a normal user to search other peoples avatars.\n     * @summary Search Avatars\n     * @param {boolean} [featured] Filters on featured results.\n     * @param {'popularity' | 'heat' | 'trust' | 'shuffle' | 'random' | 'favorites' | 'reportScore' | 'reportCount' | 'publicationDate' | 'labsPublicationDate' | 'created' | '_created_at' | 'updated' | '_updated_at' | 'order' | 'relevance' | 'magic' | 'name'} [sort]\n     * @param {'me'} [user] Set to &#x60;me&#x60; for searching own avatars.\n     * @param {string} [userId] Filter by UserID.\n     * @param {number} [n] The number of objects to return.\n     * @param {'ascending' | 'descending'} [order]\n     * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n     * @param {string} [tag] Tags to include (comma-separated). Any of the tags needs to be present.\n     * @param {string} [notag] Tags to exclude (comma-separated).\n     * @param {'public' | 'private' | 'hidden' | 'all'} [releaseStatus] Filter by ReleaseStatus.\n     * @param {string} [maxUnityVersion] The maximum Unity version supported by the asset.\n     * @param {string} [minUnityVersion] The minimum Unity version supported by the asset.\n     * @param {string} [platform] The platform the asset supports.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof AvatarsApi\n     */\n    AvatarsApi.prototype.searchAvatars = function (featured, sort, user, userId, n, order, offset, tag, notag, releaseStatus, maxUnityVersion, minUnityVersion, platform, options) {\n        var _this = this;\n        return exports.AvatarsApiFp(this.configuration).searchAvatars(featured, sort, user, userId, n, order, offset, tag, notag, releaseStatus, maxUnityVersion, minUnityVersion, platform, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Switches into that avatar.\n     * @summary Select Avatar\n     * @param {string} avatarId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof AvatarsApi\n     */\n    AvatarsApi.prototype.selectAvatar = function (avatarId, options) {\n        var _this = this;\n        return exports.AvatarsApiFp(this.configuration).selectAvatar(avatarId, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Switches into that avatar as your fallback avatar.\n     * @summary Select Fallback Avatar\n     * @param {string} avatarId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof AvatarsApi\n     */\n    AvatarsApi.prototype.selectFallbackAvatar = function (avatarId, options) {\n        var _this = this;\n        return exports.AvatarsApiFp(this.configuration).selectFallbackAvatar(avatarId, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Update information about a specific avatar.\n     * @summary Update Avatar\n     * @param {string} avatarId\n     * @param {UpdateAvatarRequest} [updateAvatarRequest]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof AvatarsApi\n     */\n    AvatarsApi.prototype.updateAvatar = function (avatarId, updateAvatarRequest, options) {\n        var _this = this;\n        return exports.AvatarsApiFp(this.configuration).updateAvatar(avatarId, updateAvatarRequest, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    return AvatarsApi;\n}(base_1.BaseAPI));\nexports.AvatarsApi = AvatarsApi;\n/**\n * EconomyApi - axios parameter creator\n * @export\n */\nexports.EconomyApiAxiosParamCreator = function (configuration) {\n    var _this = this;\n    return {\n        /**\n         * Get a list of all current user subscriptions.\n         * @summary Get Current Subscriptions\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getCurrentSubscriptions: function (options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    localVarPath = \"/auth/user/subscription\";\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication apiKeyCookie required\n                    // authentication authCookie required\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Get a single License Group by given ID.\n         * @summary Get License Group\n         * @param {string} licenseGroupId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getLicenseGroup: function (licenseGroupId, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'licenseGroupId' is not null or undefined\n                    common_1.assertParamExists('getLicenseGroup', 'licenseGroupId', licenseGroupId);\n                    localVarPath = \"/licenseGroups/{licenseGroupId}\"\n                        .replace(\"{\" + \"licenseGroupId\" + \"}\", encodeURIComponent(String(licenseGroupId)));\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication apiKeyCookie required\n                    // authentication authCookie required\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Get a single Steam transactions by ID. This returns the exact same information as `getSteamTransactions`, so no point in using this endpoint.\n         * @summary Get Steam Transaction\n         * @param {string} transactionId\n         * @param {*} [options] Override http request option.\n         * @deprecated\n         * @throws {RequiredError}\n         */\n        getSteamTransaction: function (transactionId, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'transactionId' is not null or undefined\n                    common_1.assertParamExists('getSteamTransaction', 'transactionId', transactionId);\n                    localVarPath = \"/Steam/transactions/{transactionId}\"\n                        .replace(\"{\" + \"transactionId\" + \"}\", encodeURIComponent(String(transactionId)));\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication apiKeyCookie required\n                    // authentication authCookie required\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Get all own Steam transactions.\n         * @summary List Steam Transactions\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getSteamTransactions: function (options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    localVarPath = \"/Steam/transactions\";\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication apiKeyCookie required\n                    // authentication authCookie required\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * List all existing Subscriptions. For example, \\\"vrchatplus-monthly\\\" and \\\"vrchatplus-yearly\\\".\n         * @summary List Subscriptions\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getSubscriptions: function (options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    localVarPath = \"/subscriptions\";\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication apiKeyCookie required\n                    // authentication authCookie required\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n    };\n};\n/**\n * EconomyApi - functional programming interface\n * @export\n */\nexports.EconomyApiFp = function (configuration) {\n    var localVarAxiosParamCreator = exports.EconomyApiAxiosParamCreator(configuration);\n    return {\n        /**\n         * Get a list of all current user subscriptions.\n         * @summary Get Current Subscriptions\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getCurrentSubscriptions: function (options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.getCurrentSubscriptions(options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n        /**\n         * Get a single License Group by given ID.\n         * @summary Get License Group\n         * @param {string} licenseGroupId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getLicenseGroup: function (licenseGroupId, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.getLicenseGroup(licenseGroupId, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n        /**\n         * Get a single Steam transactions by ID. This returns the exact same information as `getSteamTransactions`, so no point in using this endpoint.\n         * @summary Get Steam Transaction\n         * @param {string} transactionId\n         * @param {*} [options] Override http request option.\n         * @deprecated\n         * @throws {RequiredError}\n         */\n        getSteamTransaction: function (transactionId, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.getSteamTransaction(transactionId, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n        /**\n         * Get all own Steam transactions.\n         * @summary List Steam Transactions\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getSteamTransactions: function (options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.getSteamTransactions(options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n        /**\n         * List all existing Subscriptions. For example, \\\"vrchatplus-monthly\\\" and \\\"vrchatplus-yearly\\\".\n         * @summary List Subscriptions\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getSubscriptions: function (options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.getSubscriptions(options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n    };\n};\n/**\n * EconomyApi - factory interface\n * @export\n */\nexports.EconomyApiFactory = function (configuration, basePath, axios) {\n    var localVarFp = exports.EconomyApiFp(configuration);\n    return {\n        /**\n         * Get a list of all current user subscriptions.\n         * @summary Get Current Subscriptions\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getCurrentSubscriptions: function (options) {\n            return localVarFp.getCurrentSubscriptions(options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Get a single License Group by given ID.\n         * @summary Get License Group\n         * @param {string} licenseGroupId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getLicenseGroup: function (licenseGroupId, options) {\n            return localVarFp.getLicenseGroup(licenseGroupId, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Get a single Steam transactions by ID. This returns the exact same information as `getSteamTransactions`, so no point in using this endpoint.\n         * @summary Get Steam Transaction\n         * @param {string} transactionId\n         * @param {*} [options] Override http request option.\n         * @deprecated\n         * @throws {RequiredError}\n         */\n        getSteamTransaction: function (transactionId, options) {\n            return localVarFp.getSteamTransaction(transactionId, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Get all own Steam transactions.\n         * @summary List Steam Transactions\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getSteamTransactions: function (options) {\n            return localVarFp.getSteamTransactions(options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * List all existing Subscriptions. For example, \\\"vrchatplus-monthly\\\" and \\\"vrchatplus-yearly\\\".\n         * @summary List Subscriptions\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getSubscriptions: function (options) {\n            return localVarFp.getSubscriptions(options).then(function (request) { return request(axios, basePath); });\n        },\n    };\n};\n/**\n * EconomyApi - object-oriented interface\n * @export\n * @class EconomyApi\n * @extends {BaseAPI}\n */\nvar EconomyApi = /** @class */ (function (_super) {\n    __extends(EconomyApi, _super);\n    function EconomyApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Get a list of all current user subscriptions.\n     * @summary Get Current Subscriptions\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof EconomyApi\n     */\n    EconomyApi.prototype.getCurrentSubscriptions = function (options) {\n        var _this = this;\n        return exports.EconomyApiFp(this.configuration).getCurrentSubscriptions(options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Get a single License Group by given ID.\n     * @summary Get License Group\n     * @param {string} licenseGroupId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof EconomyApi\n     */\n    EconomyApi.prototype.getLicenseGroup = function (licenseGroupId, options) {\n        var _this = this;\n        return exports.EconomyApiFp(this.configuration).getLicenseGroup(licenseGroupId, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Get a single Steam transactions by ID. This returns the exact same information as `getSteamTransactions`, so no point in using this endpoint.\n     * @summary Get Steam Transaction\n     * @param {string} transactionId\n     * @param {*} [options] Override http request option.\n     * @deprecated\n     * @throws {RequiredError}\n     * @memberof EconomyApi\n     */\n    EconomyApi.prototype.getSteamTransaction = function (transactionId, options) {\n        var _this = this;\n        return exports.EconomyApiFp(this.configuration).getSteamTransaction(transactionId, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Get all own Steam transactions.\n     * @summary List Steam Transactions\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof EconomyApi\n     */\n    EconomyApi.prototype.getSteamTransactions = function (options) {\n        var _this = this;\n        return exports.EconomyApiFp(this.configuration).getSteamTransactions(options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * List all existing Subscriptions. For example, \\\"vrchatplus-monthly\\\" and \\\"vrchatplus-yearly\\\".\n     * @summary List Subscriptions\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof EconomyApi\n     */\n    EconomyApi.prototype.getSubscriptions = function (options) {\n        var _this = this;\n        return exports.EconomyApiFp(this.configuration).getSubscriptions(options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    return EconomyApi;\n}(base_1.BaseAPI));\nexports.EconomyApi = EconomyApi;\n/**\n * FavoritesApi - axios parameter creator\n * @export\n */\nexports.FavoritesApiAxiosParamCreator = function (configuration) {\n    var _this = this;\n    return {\n        /**\n         * Add a new favorite.  Friend groups are named `group_0` through `group_3`. Avatar and World groups are named `avatars1` to `avatars4` and `worlds1` to `worlds4`.  You cannot add people whom you are not friends with to your friends list. Destroying a friendship removes the person as favorite on both sides.\n         * @summary Add Favorite\n         * @param {AddFavoriteRequest} [addFavoriteRequest]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addFavorite: function (addFavoriteRequest, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    localVarPath = \"/favorites\";\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication apiKeyCookie required\n                    // authentication authCookie required\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    localVarRequestOptions.data = common_1.serializeDataIfNeeded(addFavoriteRequest, localVarRequestOptions, configuration);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Clear ALL contents of a specific favorite group.\n         * @summary Clear Favorite Group\n         * @param {'world' | 'friend' | 'avatar'} favoriteGroupType The type of group to fetch, must be a valid FavoriteType.\n         * @param {string} favoriteGroupName\n         * @param {string} userId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        clearFavoriteGroup: function (favoriteGroupType, favoriteGroupName, userId, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'favoriteGroupType' is not null or undefined\n                    common_1.assertParamExists('clearFavoriteGroup', 'favoriteGroupType', favoriteGroupType);\n                    // verify required parameter 'favoriteGroupName' is not null or undefined\n                    common_1.assertParamExists('clearFavoriteGroup', 'favoriteGroupName', favoriteGroupName);\n                    // verify required parameter 'userId' is not null or undefined\n                    common_1.assertParamExists('clearFavoriteGroup', 'userId', userId);\n                    localVarPath = \"/favorite/group/{favoriteGroupType}/{favoriteGroupName}/{userId}\"\n                        .replace(\"{\" + \"favoriteGroupType\" + \"}\", encodeURIComponent(String(favoriteGroupType)))\n                        .replace(\"{\" + \"favoriteGroupName\" + \"}\", encodeURIComponent(String(favoriteGroupName)))\n                        .replace(\"{\" + \"userId\" + \"}\", encodeURIComponent(String(userId)));\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'DELETE' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication apiKeyCookie required\n                    // authentication authCookie required\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Return information about a specific Favorite.\n         * @summary Show Favorite\n         * @param {string} favoriteId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getFavorite: function (favoriteId, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'favoriteId' is not null or undefined\n                    common_1.assertParamExists('getFavorite', 'favoriteId', favoriteId);\n                    localVarPath = \"/favorites/{favoriteId}\"\n                        .replace(\"{\" + \"favoriteId\" + \"}\", encodeURIComponent(String(favoriteId)));\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication apiKeyCookie required\n                    // authentication authCookie required\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Fetch information about a specific favorite group.\n         * @summary Show Favorite Group\n         * @param {'world' | 'friend' | 'avatar'} favoriteGroupType The type of group to fetch, must be a valid FavoriteType.\n         * @param {string} favoriteGroupName\n         * @param {string} userId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getFavoriteGroup: function (favoriteGroupType, favoriteGroupName, userId, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'favoriteGroupType' is not null or undefined\n                    common_1.assertParamExists('getFavoriteGroup', 'favoriteGroupType', favoriteGroupType);\n                    // verify required parameter 'favoriteGroupName' is not null or undefined\n                    common_1.assertParamExists('getFavoriteGroup', 'favoriteGroupName', favoriteGroupName);\n                    // verify required parameter 'userId' is not null or undefined\n                    common_1.assertParamExists('getFavoriteGroup', 'userId', userId);\n                    localVarPath = \"/favorite/group/{favoriteGroupType}/{favoriteGroupName}/{userId}\"\n                        .replace(\"{\" + \"favoriteGroupType\" + \"}\", encodeURIComponent(String(favoriteGroupType)))\n                        .replace(\"{\" + \"favoriteGroupName\" + \"}\", encodeURIComponent(String(favoriteGroupName)))\n                        .replace(\"{\" + \"userId\" + \"}\", encodeURIComponent(String(userId)));\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication apiKeyCookie required\n                    // authentication authCookie required\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Return a list of favorite groups owned by a user. Returns the same information as `getFavoriteGroups`.\n         * @summary List Favorite Groups\n         * @param {number} [n] The number of objects to return.\n         * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n         * @param {string} [ownerId] The owner of whoms favorite groups to return. Must be a UserID.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getFavoriteGroups: function (n, offset, ownerId, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    localVarPath = \"/favorite/groups\";\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication apiKeyCookie required\n                    // authentication authCookie required\n                    if (n !== undefined) {\n                        localVarQueryParameter['n'] = n;\n                    }\n                    if (offset !== undefined) {\n                        localVarQueryParameter['offset'] = offset;\n                    }\n                    if (ownerId !== undefined) {\n                        localVarQueryParameter['ownerId'] = ownerId;\n                    }\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Returns a list of favorites.\n         * @summary List Favorites\n         * @param {number} [n] The number of objects to return.\n         * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n         * @param {string} [type] The type of favorites to return, FavoriteType.\n         * @param {string} [tag] Tags to include (comma-separated). Any of the tags needs to be present.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getFavorites: function (n, offset, type, tag, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    localVarPath = \"/favorites\";\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication apiKeyCookie required\n                    // authentication authCookie required\n                    if (n !== undefined) {\n                        localVarQueryParameter['n'] = n;\n                    }\n                    if (offset !== undefined) {\n                        localVarQueryParameter['offset'] = offset;\n                    }\n                    if (type !== undefined) {\n                        localVarQueryParameter['type'] = type;\n                    }\n                    if (tag !== undefined) {\n                        localVarQueryParameter['tag'] = tag;\n                    }\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Remove a favorite from your favorites list.\n         * @summary Remove Favorite\n         * @param {string} favoriteId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        removeFavorite: function (favoriteId, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'favoriteId' is not null or undefined\n                    common_1.assertParamExists('removeFavorite', 'favoriteId', favoriteId);\n                    localVarPath = \"/favorites/{favoriteId}\"\n                        .replace(\"{\" + \"favoriteId\" + \"}\", encodeURIComponent(String(favoriteId)));\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'DELETE' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication apiKeyCookie required\n                    // authentication authCookie required\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Update information about a specific favorite group.\n         * @summary Update Favorite Group\n         * @param {'world' | 'friend' | 'avatar'} favoriteGroupType The type of group to fetch, must be a valid FavoriteType.\n         * @param {string} favoriteGroupName\n         * @param {string} userId\n         * @param {UpdateFavoriteGroupRequest} [updateFavoriteGroupRequest]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateFavoriteGroup: function (favoriteGroupType, favoriteGroupName, userId, updateFavoriteGroupRequest, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'favoriteGroupType' is not null or undefined\n                    common_1.assertParamExists('updateFavoriteGroup', 'favoriteGroupType', favoriteGroupType);\n                    // verify required parameter 'favoriteGroupName' is not null or undefined\n                    common_1.assertParamExists('updateFavoriteGroup', 'favoriteGroupName', favoriteGroupName);\n                    // verify required parameter 'userId' is not null or undefined\n                    common_1.assertParamExists('updateFavoriteGroup', 'userId', userId);\n                    localVarPath = \"/favorite/group/{favoriteGroupType}/{favoriteGroupName}/{userId}\"\n                        .replace(\"{\" + \"favoriteGroupType\" + \"}\", encodeURIComponent(String(favoriteGroupType)))\n                        .replace(\"{\" + \"favoriteGroupName\" + \"}\", encodeURIComponent(String(favoriteGroupName)))\n                        .replace(\"{\" + \"userId\" + \"}\", encodeURIComponent(String(userId)));\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'PUT' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication apiKeyCookie required\n                    // authentication authCookie required\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    localVarRequestOptions.data = common_1.serializeDataIfNeeded(updateFavoriteGroupRequest, localVarRequestOptions, configuration);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n    };\n};\n/**\n * FavoritesApi - functional programming interface\n * @export\n */\nexports.FavoritesApiFp = function (configuration) {\n    var localVarAxiosParamCreator = exports.FavoritesApiAxiosParamCreator(configuration);\n    return {\n        /**\n         * Add a new favorite.  Friend groups are named `group_0` through `group_3`. Avatar and World groups are named `avatars1` to `avatars4` and `worlds1` to `worlds4`.  You cannot add people whom you are not friends with to your friends list. Destroying a friendship removes the person as favorite on both sides.\n         * @summary Add Favorite\n         * @param {AddFavoriteRequest} [addFavoriteRequest]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addFavorite: function (addFavoriteRequest, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.addFavorite(addFavoriteRequest, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n        /**\n         * Clear ALL contents of a specific favorite group.\n         * @summary Clear Favorite Group\n         * @param {'world' | 'friend' | 'avatar'} favoriteGroupType The type of group to fetch, must be a valid FavoriteType.\n         * @param {string} favoriteGroupName\n         * @param {string} userId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        clearFavoriteGroup: function (favoriteGroupType, favoriteGroupName, userId, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.clearFavoriteGroup(favoriteGroupType, favoriteGroupName, userId, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n        /**\n         * Return information about a specific Favorite.\n         * @summary Show Favorite\n         * @param {string} favoriteId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getFavorite: function (favoriteId, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.getFavorite(favoriteId, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n        /**\n         * Fetch information about a specific favorite group.\n         * @summary Show Favorite Group\n         * @param {'world' | 'friend' | 'avatar'} favoriteGroupType The type of group to fetch, must be a valid FavoriteType.\n         * @param {string} favoriteGroupName\n         * @param {string} userId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getFavoriteGroup: function (favoriteGroupType, favoriteGroupName, userId, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.getFavoriteGroup(favoriteGroupType, favoriteGroupName, userId, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n        /**\n         * Return a list of favorite groups owned by a user. Returns the same information as `getFavoriteGroups`.\n         * @summary List Favorite Groups\n         * @param {number} [n] The number of objects to return.\n         * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n         * @param {string} [ownerId] The owner of whoms favorite groups to return. Must be a UserID.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getFavoriteGroups: function (n, offset, ownerId, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.getFavoriteGroups(n, offset, ownerId, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n        /**\n         * Returns a list of favorites.\n         * @summary List Favorites\n         * @param {number} [n] The number of objects to return.\n         * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n         * @param {string} [type] The type of favorites to return, FavoriteType.\n         * @param {string} [tag] Tags to include (comma-separated). Any of the tags needs to be present.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getFavorites: function (n, offset, type, tag, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.getFavorites(n, offset, type, tag, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n        /**\n         * Remove a favorite from your favorites list.\n         * @summary Remove Favorite\n         * @param {string} favoriteId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        removeFavorite: function (favoriteId, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.removeFavorite(favoriteId, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n        /**\n         * Update information about a specific favorite group.\n         * @summary Update Favorite Group\n         * @param {'world' | 'friend' | 'avatar'} favoriteGroupType The type of group to fetch, must be a valid FavoriteType.\n         * @param {string} favoriteGroupName\n         * @param {string} userId\n         * @param {UpdateFavoriteGroupRequest} [updateFavoriteGroupRequest]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateFavoriteGroup: function (favoriteGroupType, favoriteGroupName, userId, updateFavoriteGroupRequest, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.updateFavoriteGroup(favoriteGroupType, favoriteGroupName, userId, updateFavoriteGroupRequest, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n    };\n};\n/**\n * FavoritesApi - factory interface\n * @export\n */\nexports.FavoritesApiFactory = function (configuration, basePath, axios) {\n    var localVarFp = exports.FavoritesApiFp(configuration);\n    return {\n        /**\n         * Add a new favorite.  Friend groups are named `group_0` through `group_3`. Avatar and World groups are named `avatars1` to `avatars4` and `worlds1` to `worlds4`.  You cannot add people whom you are not friends with to your friends list. Destroying a friendship removes the person as favorite on both sides.\n         * @summary Add Favorite\n         * @param {AddFavoriteRequest} [addFavoriteRequest]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        addFavorite: function (addFavoriteRequest, options) {\n            return localVarFp.addFavorite(addFavoriteRequest, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Clear ALL contents of a specific favorite group.\n         * @summary Clear Favorite Group\n         * @param {'world' | 'friend' | 'avatar'} favoriteGroupType The type of group to fetch, must be a valid FavoriteType.\n         * @param {string} favoriteGroupName\n         * @param {string} userId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        clearFavoriteGroup: function (favoriteGroupType, favoriteGroupName, userId, options) {\n            return localVarFp.clearFavoriteGroup(favoriteGroupType, favoriteGroupName, userId, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Return information about a specific Favorite.\n         * @summary Show Favorite\n         * @param {string} favoriteId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getFavorite: function (favoriteId, options) {\n            return localVarFp.getFavorite(favoriteId, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Fetch information about a specific favorite group.\n         * @summary Show Favorite Group\n         * @param {'world' | 'friend' | 'avatar'} favoriteGroupType The type of group to fetch, must be a valid FavoriteType.\n         * @param {string} favoriteGroupName\n         * @param {string} userId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getFavoriteGroup: function (favoriteGroupType, favoriteGroupName, userId, options) {\n            return localVarFp.getFavoriteGroup(favoriteGroupType, favoriteGroupName, userId, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Return a list of favorite groups owned by a user. Returns the same information as `getFavoriteGroups`.\n         * @summary List Favorite Groups\n         * @param {number} [n] The number of objects to return.\n         * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n         * @param {string} [ownerId] The owner of whoms favorite groups to return. Must be a UserID.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getFavoriteGroups: function (n, offset, ownerId, options) {\n            return localVarFp.getFavoriteGroups(n, offset, ownerId, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Returns a list of favorites.\n         * @summary List Favorites\n         * @param {number} [n] The number of objects to return.\n         * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n         * @param {string} [type] The type of favorites to return, FavoriteType.\n         * @param {string} [tag] Tags to include (comma-separated). Any of the tags needs to be present.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getFavorites: function (n, offset, type, tag, options) {\n            return localVarFp.getFavorites(n, offset, type, tag, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Remove a favorite from your favorites list.\n         * @summary Remove Favorite\n         * @param {string} favoriteId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        removeFavorite: function (favoriteId, options) {\n            return localVarFp.removeFavorite(favoriteId, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Update information about a specific favorite group.\n         * @summary Update Favorite Group\n         * @param {'world' | 'friend' | 'avatar'} favoriteGroupType The type of group to fetch, must be a valid FavoriteType.\n         * @param {string} favoriteGroupName\n         * @param {string} userId\n         * @param {UpdateFavoriteGroupRequest} [updateFavoriteGroupRequest]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateFavoriteGroup: function (favoriteGroupType, favoriteGroupName, userId, updateFavoriteGroupRequest, options) {\n            return localVarFp.updateFavoriteGroup(favoriteGroupType, favoriteGroupName, userId, updateFavoriteGroupRequest, options).then(function (request) { return request(axios, basePath); });\n        },\n    };\n};\n/**\n * FavoritesApi - object-oriented interface\n * @export\n * @class FavoritesApi\n * @extends {BaseAPI}\n */\nvar FavoritesApi = /** @class */ (function (_super) {\n    __extends(FavoritesApi, _super);\n    function FavoritesApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Add a new favorite.  Friend groups are named `group_0` through `group_3`. Avatar and World groups are named `avatars1` to `avatars4` and `worlds1` to `worlds4`.  You cannot add people whom you are not friends with to your friends list. Destroying a friendship removes the person as favorite on both sides.\n     * @summary Add Favorite\n     * @param {AddFavoriteRequest} [addFavoriteRequest]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof FavoritesApi\n     */\n    FavoritesApi.prototype.addFavorite = function (addFavoriteRequest, options) {\n        var _this = this;\n        return exports.FavoritesApiFp(this.configuration).addFavorite(addFavoriteRequest, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Clear ALL contents of a specific favorite group.\n     * @summary Clear Favorite Group\n     * @param {'world' | 'friend' | 'avatar'} favoriteGroupType The type of group to fetch, must be a valid FavoriteType.\n     * @param {string} favoriteGroupName\n     * @param {string} userId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof FavoritesApi\n     */\n    FavoritesApi.prototype.clearFavoriteGroup = function (favoriteGroupType, favoriteGroupName, userId, options) {\n        var _this = this;\n        return exports.FavoritesApiFp(this.configuration).clearFavoriteGroup(favoriteGroupType, favoriteGroupName, userId, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Return information about a specific Favorite.\n     * @summary Show Favorite\n     * @param {string} favoriteId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof FavoritesApi\n     */\n    FavoritesApi.prototype.getFavorite = function (favoriteId, options) {\n        var _this = this;\n        return exports.FavoritesApiFp(this.configuration).getFavorite(favoriteId, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Fetch information about a specific favorite group.\n     * @summary Show Favorite Group\n     * @param {'world' | 'friend' | 'avatar'} favoriteGroupType The type of group to fetch, must be a valid FavoriteType.\n     * @param {string} favoriteGroupName\n     * @param {string} userId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof FavoritesApi\n     */\n    FavoritesApi.prototype.getFavoriteGroup = function (favoriteGroupType, favoriteGroupName, userId, options) {\n        var _this = this;\n        return exports.FavoritesApiFp(this.configuration).getFavoriteGroup(favoriteGroupType, favoriteGroupName, userId, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Return a list of favorite groups owned by a user. Returns the same information as `getFavoriteGroups`.\n     * @summary List Favorite Groups\n     * @param {number} [n] The number of objects to return.\n     * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n     * @param {string} [ownerId] The owner of whoms favorite groups to return. Must be a UserID.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof FavoritesApi\n     */\n    FavoritesApi.prototype.getFavoriteGroups = function (n, offset, ownerId, options) {\n        var _this = this;\n        return exports.FavoritesApiFp(this.configuration).getFavoriteGroups(n, offset, ownerId, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Returns a list of favorites.\n     * @summary List Favorites\n     * @param {number} [n] The number of objects to return.\n     * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n     * @param {string} [type] The type of favorites to return, FavoriteType.\n     * @param {string} [tag] Tags to include (comma-separated). Any of the tags needs to be present.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof FavoritesApi\n     */\n    FavoritesApi.prototype.getFavorites = function (n, offset, type, tag, options) {\n        var _this = this;\n        return exports.FavoritesApiFp(this.configuration).getFavorites(n, offset, type, tag, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Remove a favorite from your favorites list.\n     * @summary Remove Favorite\n     * @param {string} favoriteId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof FavoritesApi\n     */\n    FavoritesApi.prototype.removeFavorite = function (favoriteId, options) {\n        var _this = this;\n        return exports.FavoritesApiFp(this.configuration).removeFavorite(favoriteId, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Update information about a specific favorite group.\n     * @summary Update Favorite Group\n     * @param {'world' | 'friend' | 'avatar'} favoriteGroupType The type of group to fetch, must be a valid FavoriteType.\n     * @param {string} favoriteGroupName\n     * @param {string} userId\n     * @param {UpdateFavoriteGroupRequest} [updateFavoriteGroupRequest]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof FavoritesApi\n     */\n    FavoritesApi.prototype.updateFavoriteGroup = function (favoriteGroupType, favoriteGroupName, userId, updateFavoriteGroupRequest, options) {\n        var _this = this;\n        return exports.FavoritesApiFp(this.configuration).updateFavoriteGroup(favoriteGroupType, favoriteGroupName, userId, updateFavoriteGroupRequest, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    return FavoritesApi;\n}(base_1.BaseAPI));\nexports.FavoritesApi = FavoritesApi;\n/**\n * FilesApi - axios parameter creator\n * @export\n */\nexports.FilesApiAxiosParamCreator = function (configuration) {\n    var _this = this;\n    return {\n        /**\n         * Creates a new File object\n         * @summary Create File\n         * @param {CreateFileRequest} [createFileRequest]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createFile: function (createFileRequest, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    localVarPath = \"/file\";\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication apiKeyCookie required\n                    // authentication authCookie required\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    localVarRequestOptions.data = common_1.serializeDataIfNeeded(createFileRequest, localVarRequestOptions, configuration);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Creates a new FileVersion. Once a Version has been created, proceed to the `/file/{fileId}/{versionId}/file/start` endpoint to start a file upload.\n         * @summary Create File Version\n         * @param {string} fileId\n         * @param {CreateFileVersionRequest} [createFileVersionRequest]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createFileVersion: function (fileId, createFileVersionRequest, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'fileId' is not null or undefined\n                    common_1.assertParamExists('createFileVersion', 'fileId', fileId);\n                    localVarPath = \"/file/{fileId}\"\n                        .replace(\"{\" + \"fileId\" + \"}\", encodeURIComponent(String(fileId)));\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication apiKeyCookie required\n                    // authentication authCookie required\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    localVarRequestOptions.data = common_1.serializeDataIfNeeded(createFileVersionRequest, localVarRequestOptions, configuration);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Deletes a File object.\n         * @summary Delete File\n         * @param {string} fileId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteFile: function (fileId, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'fileId' is not null or undefined\n                    common_1.assertParamExists('deleteFile', 'fileId', fileId);\n                    localVarPath = \"/file/{fileId}\"\n                        .replace(\"{\" + \"fileId\" + \"}\", encodeURIComponent(String(fileId)));\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'DELETE' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication apiKeyCookie required\n                    // authentication authCookie required\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Delete a specific version of a file. You can only delete the latest version.\n         * @summary Delete File Version\n         * @param {string} fileId\n         * @param {number} versionId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteFileVersion: function (fileId, versionId, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'fileId' is not null or undefined\n                    common_1.assertParamExists('deleteFileVersion', 'fileId', fileId);\n                    // verify required parameter 'versionId' is not null or undefined\n                    common_1.assertParamExists('deleteFileVersion', 'versionId', versionId);\n                    localVarPath = \"/file/{fileId}/{versionId}\"\n                        .replace(\"{\" + \"fileId\" + \"}\", encodeURIComponent(String(fileId)))\n                        .replace(\"{\" + \"versionId\" + \"}\", encodeURIComponent(String(versionId)));\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'DELETE' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication apiKeyCookie required\n                    // authentication authCookie required\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Downloads the file with the provided version number.  **Version Note:** Version 0 is always when the file was created. The real data is usually always located in version 1 and up.  **Extension Note:** Files are not guaranteed to have a file extensions. UnityPackage files tends to have it, images through this endpoint do not. You are responsible for appending file extension from the `extension` field when neccesary.\n         * @summary Download File Version\n         * @param {string} fileId\n         * @param {number} versionId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        downloadFileVersion: function (fileId, versionId, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'fileId' is not null or undefined\n                    common_1.assertParamExists('downloadFileVersion', 'fileId', fileId);\n                    // verify required parameter 'versionId' is not null or undefined\n                    common_1.assertParamExists('downloadFileVersion', 'versionId', versionId);\n                    localVarPath = \"/file/{fileId}/{versionId}\"\n                        .replace(\"{\" + \"fileId\" + \"}\", encodeURIComponent(String(fileId)))\n                        .replace(\"{\" + \"versionId\" + \"}\", encodeURIComponent(String(versionId)));\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication apiKeyCookie required\n                    // authentication authCookie required\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Finish an upload of a FileData. This will mark it as \\\"complete\\\". After uploading the `file` for Avatars and Worlds you then have to upload a `signature` file.\n         * @summary Finish FileData Upload\n         * @param {string} fileId\n         * @param {number} versionId\n         * @param {'file' | 'signature' | 'delta'} fileType\n         * @param {FinishFileDataUploadRequest} [finishFileDataUploadRequest] Please see documentation on ETag\\&#39;s: [https://teppen.io/2018/06/23/aws_s3_etags/](https://teppen.io/2018/06/23/aws_s3_etags/)  ETag\\&#39;s should NOT be present when uploading a &#x60;signature&#x60;.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        finishFileDataUpload: function (fileId, versionId, fileType, finishFileDataUploadRequest, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'fileId' is not null or undefined\n                    common_1.assertParamExists('finishFileDataUpload', 'fileId', fileId);\n                    // verify required parameter 'versionId' is not null or undefined\n                    common_1.assertParamExists('finishFileDataUpload', 'versionId', versionId);\n                    // verify required parameter 'fileType' is not null or undefined\n                    common_1.assertParamExists('finishFileDataUpload', 'fileType', fileType);\n                    localVarPath = \"/file/{fileId}/{versionId}/{fileType}/finish\"\n                        .replace(\"{\" + \"fileId\" + \"}\", encodeURIComponent(String(fileId)))\n                        .replace(\"{\" + \"versionId\" + \"}\", encodeURIComponent(String(versionId)))\n                        .replace(\"{\" + \"fileType\" + \"}\", encodeURIComponent(String(fileType)));\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'PUT' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication apiKeyCookie required\n                    // authentication authCookie required\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    localVarRequestOptions.data = common_1.serializeDataIfNeeded(finishFileDataUploadRequest, localVarRequestOptions, configuration);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Shows general information about the \\\"File\\\" object. Each File can have several \\\"Version\\\"\\'s, and each Version can have multiple real files or \\\"Data\\\" blobs.\n         * @summary Show File\n         * @param {string} fileId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getFile: function (fileId, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'fileId' is not null or undefined\n                    common_1.assertParamExists('getFile', 'fileId', fileId);\n                    localVarPath = \"/file/{fileId}\"\n                        .replace(\"{\" + \"fileId\" + \"}\", encodeURIComponent(String(fileId)));\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication apiKeyCookie required\n                    // authentication authCookie required\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Retrieves the upload status for file upload. Can currently only be accessed when `status` is `waiting`. Trying to access it on a file version already uploaded currently times out.\n         * @summary Check FileData Upload Status\n         * @param {string} fileId\n         * @param {number} versionId\n         * @param {'file' | 'signature' | 'delta'} fileType\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getFileDataUploadStatus: function (fileId, versionId, fileType, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'fileId' is not null or undefined\n                    common_1.assertParamExists('getFileDataUploadStatus', 'fileId', fileId);\n                    // verify required parameter 'versionId' is not null or undefined\n                    common_1.assertParamExists('getFileDataUploadStatus', 'versionId', versionId);\n                    // verify required parameter 'fileType' is not null or undefined\n                    common_1.assertParamExists('getFileDataUploadStatus', 'fileType', fileType);\n                    localVarPath = \"/file/{fileId}/{versionId}/{fileType}/status\"\n                        .replace(\"{\" + \"fileId\" + \"}\", encodeURIComponent(String(fileId)))\n                        .replace(\"{\" + \"versionId\" + \"}\", encodeURIComponent(String(versionId)))\n                        .replace(\"{\" + \"fileType\" + \"}\", encodeURIComponent(String(fileType)));\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication apiKeyCookie required\n                    // authentication authCookie required\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Returns a list of files\n         * @summary List Files\n         * @param {string} [tag] Tag, for example \\&quot;icon\\&quot; or \\&quot;gallery\\&quot;, not included by default.\n         * @param {string} [userId] UserID, will always generate a 500 permission error.\n         * @param {number} [n] The number of objects to return.\n         * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getFiles: function (tag, userId, n, offset, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    localVarPath = \"/files\";\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication apiKeyCookie required\n                    // authentication authCookie required\n                    if (tag !== undefined) {\n                        localVarQueryParameter['tag'] = tag;\n                    }\n                    if (userId !== undefined) {\n                        localVarQueryParameter['userId'] = userId;\n                    }\n                    if (n !== undefined) {\n                        localVarQueryParameter['n'] = n;\n                    }\n                    if (offset !== undefined) {\n                        localVarQueryParameter['offset'] = offset;\n                    }\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Starts an upload of a specific FilePart. This endpoint will return an AWS URL which you can PUT data to. You need to call this and receive a new AWS API URL for each `partNumber`. Please see AWS\\'s REST documentation on \\\"PUT Object to S3\\\" on how to upload. Once all parts has been uploaded, proceed to `/finish` endpoint.  **Note:** `nextPartNumber` seems like it is always ignored. Despite it returning 0, first partNumber is always 1.\n         * @summary Start FileData Upload\n         * @param {string} fileId\n         * @param {number} versionId\n         * @param {'file' | 'signature' | 'delta'} fileType\n         * @param {number} [partNumber]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        startFileDataUpload: function (fileId, versionId, fileType, partNumber, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'fileId' is not null or undefined\n                    common_1.assertParamExists('startFileDataUpload', 'fileId', fileId);\n                    // verify required parameter 'versionId' is not null or undefined\n                    common_1.assertParamExists('startFileDataUpload', 'versionId', versionId);\n                    // verify required parameter 'fileType' is not null or undefined\n                    common_1.assertParamExists('startFileDataUpload', 'fileType', fileType);\n                    localVarPath = \"/file/{fileId}/{versionId}/{fileType}/start\"\n                        .replace(\"{\" + \"fileId\" + \"}\", encodeURIComponent(String(fileId)))\n                        .replace(\"{\" + \"versionId\" + \"}\", encodeURIComponent(String(versionId)))\n                        .replace(\"{\" + \"fileType\" + \"}\", encodeURIComponent(String(fileType)));\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'PUT' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication apiKeyCookie required\n                    // authentication authCookie required\n                    if (partNumber !== undefined) {\n                        localVarQueryParameter['partNumber'] = partNumber;\n                    }\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n    };\n};\n/**\n * FilesApi - functional programming interface\n * @export\n */\nexports.FilesApiFp = function (configuration) {\n    var localVarAxiosParamCreator = exports.FilesApiAxiosParamCreator(configuration);\n    return {\n        /**\n         * Creates a new File object\n         * @summary Create File\n         * @param {CreateFileRequest} [createFileRequest]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createFile: function (createFileRequest, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.createFile(createFileRequest, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n        /**\n         * Creates a new FileVersion. Once a Version has been created, proceed to the `/file/{fileId}/{versionId}/file/start` endpoint to start a file upload.\n         * @summary Create File Version\n         * @param {string} fileId\n         * @param {CreateFileVersionRequest} [createFileVersionRequest]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createFileVersion: function (fileId, createFileVersionRequest, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.createFileVersion(fileId, createFileVersionRequest, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n        /**\n         * Deletes a File object.\n         * @summary Delete File\n         * @param {string} fileId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteFile: function (fileId, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.deleteFile(fileId, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n        /**\n         * Delete a specific version of a file. You can only delete the latest version.\n         * @summary Delete File Version\n         * @param {string} fileId\n         * @param {number} versionId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteFileVersion: function (fileId, versionId, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.deleteFileVersion(fileId, versionId, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n        /**\n         * Downloads the file with the provided version number.  **Version Note:** Version 0 is always when the file was created. The real data is usually always located in version 1 and up.  **Extension Note:** Files are not guaranteed to have a file extensions. UnityPackage files tends to have it, images through this endpoint do not. You are responsible for appending file extension from the `extension` field when neccesary.\n         * @summary Download File Version\n         * @param {string} fileId\n         * @param {number} versionId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        downloadFileVersion: function (fileId, versionId, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.downloadFileVersion(fileId, versionId, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n        /**\n         * Finish an upload of a FileData. This will mark it as \\\"complete\\\". After uploading the `file` for Avatars and Worlds you then have to upload a `signature` file.\n         * @summary Finish FileData Upload\n         * @param {string} fileId\n         * @param {number} versionId\n         * @param {'file' | 'signature' | 'delta'} fileType\n         * @param {FinishFileDataUploadRequest} [finishFileDataUploadRequest] Please see documentation on ETag\\&#39;s: [https://teppen.io/2018/06/23/aws_s3_etags/](https://teppen.io/2018/06/23/aws_s3_etags/)  ETag\\&#39;s should NOT be present when uploading a &#x60;signature&#x60;.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        finishFileDataUpload: function (fileId, versionId, fileType, finishFileDataUploadRequest, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.finishFileDataUpload(fileId, versionId, fileType, finishFileDataUploadRequest, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n        /**\n         * Shows general information about the \\\"File\\\" object. Each File can have several \\\"Version\\\"\\'s, and each Version can have multiple real files or \\\"Data\\\" blobs.\n         * @summary Show File\n         * @param {string} fileId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getFile: function (fileId, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.getFile(fileId, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n        /**\n         * Retrieves the upload status for file upload. Can currently only be accessed when `status` is `waiting`. Trying to access it on a file version already uploaded currently times out.\n         * @summary Check FileData Upload Status\n         * @param {string} fileId\n         * @param {number} versionId\n         * @param {'file' | 'signature' | 'delta'} fileType\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getFileDataUploadStatus: function (fileId, versionId, fileType, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.getFileDataUploadStatus(fileId, versionId, fileType, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n        /**\n         * Returns a list of files\n         * @summary List Files\n         * @param {string} [tag] Tag, for example \\&quot;icon\\&quot; or \\&quot;gallery\\&quot;, not included by default.\n         * @param {string} [userId] UserID, will always generate a 500 permission error.\n         * @param {number} [n] The number of objects to return.\n         * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getFiles: function (tag, userId, n, offset, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.getFiles(tag, userId, n, offset, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n        /**\n         * Starts an upload of a specific FilePart. This endpoint will return an AWS URL which you can PUT data to. You need to call this and receive a new AWS API URL for each `partNumber`. Please see AWS\\'s REST documentation on \\\"PUT Object to S3\\\" on how to upload. Once all parts has been uploaded, proceed to `/finish` endpoint.  **Note:** `nextPartNumber` seems like it is always ignored. Despite it returning 0, first partNumber is always 1.\n         * @summary Start FileData Upload\n         * @param {string} fileId\n         * @param {number} versionId\n         * @param {'file' | 'signature' | 'delta'} fileType\n         * @param {number} [partNumber]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        startFileDataUpload: function (fileId, versionId, fileType, partNumber, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.startFileDataUpload(fileId, versionId, fileType, partNumber, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n    };\n};\n/**\n * FilesApi - factory interface\n * @export\n */\nexports.FilesApiFactory = function (configuration, basePath, axios) {\n    var localVarFp = exports.FilesApiFp(configuration);\n    return {\n        /**\n         * Creates a new File object\n         * @summary Create File\n         * @param {CreateFileRequest} [createFileRequest]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createFile: function (createFileRequest, options) {\n            return localVarFp.createFile(createFileRequest, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Creates a new FileVersion. Once a Version has been created, proceed to the `/file/{fileId}/{versionId}/file/start` endpoint to start a file upload.\n         * @summary Create File Version\n         * @param {string} fileId\n         * @param {CreateFileVersionRequest} [createFileVersionRequest]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createFileVersion: function (fileId, createFileVersionRequest, options) {\n            return localVarFp.createFileVersion(fileId, createFileVersionRequest, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Deletes a File object.\n         * @summary Delete File\n         * @param {string} fileId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteFile: function (fileId, options) {\n            return localVarFp.deleteFile(fileId, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Delete a specific version of a file. You can only delete the latest version.\n         * @summary Delete File Version\n         * @param {string} fileId\n         * @param {number} versionId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteFileVersion: function (fileId, versionId, options) {\n            return localVarFp.deleteFileVersion(fileId, versionId, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Downloads the file with the provided version number.  **Version Note:** Version 0 is always when the file was created. The real data is usually always located in version 1 and up.  **Extension Note:** Files are not guaranteed to have a file extensions. UnityPackage files tends to have it, images through this endpoint do not. You are responsible for appending file extension from the `extension` field when neccesary.\n         * @summary Download File Version\n         * @param {string} fileId\n         * @param {number} versionId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        downloadFileVersion: function (fileId, versionId, options) {\n            return localVarFp.downloadFileVersion(fileId, versionId, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Finish an upload of a FileData. This will mark it as \\\"complete\\\". After uploading the `file` for Avatars and Worlds you then have to upload a `signature` file.\n         * @summary Finish FileData Upload\n         * @param {string} fileId\n         * @param {number} versionId\n         * @param {'file' | 'signature' | 'delta'} fileType\n         * @param {FinishFileDataUploadRequest} [finishFileDataUploadRequest] Please see documentation on ETag\\&#39;s: [https://teppen.io/2018/06/23/aws_s3_etags/](https://teppen.io/2018/06/23/aws_s3_etags/)  ETag\\&#39;s should NOT be present when uploading a &#x60;signature&#x60;.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        finishFileDataUpload: function (fileId, versionId, fileType, finishFileDataUploadRequest, options) {\n            return localVarFp.finishFileDataUpload(fileId, versionId, fileType, finishFileDataUploadRequest, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Shows general information about the \\\"File\\\" object. Each File can have several \\\"Version\\\"\\'s, and each Version can have multiple real files or \\\"Data\\\" blobs.\n         * @summary Show File\n         * @param {string} fileId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getFile: function (fileId, options) {\n            return localVarFp.getFile(fileId, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Retrieves the upload status for file upload. Can currently only be accessed when `status` is `waiting`. Trying to access it on a file version already uploaded currently times out.\n         * @summary Check FileData Upload Status\n         * @param {string} fileId\n         * @param {number} versionId\n         * @param {'file' | 'signature' | 'delta'} fileType\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getFileDataUploadStatus: function (fileId, versionId, fileType, options) {\n            return localVarFp.getFileDataUploadStatus(fileId, versionId, fileType, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Returns a list of files\n         * @summary List Files\n         * @param {string} [tag] Tag, for example \\&quot;icon\\&quot; or \\&quot;gallery\\&quot;, not included by default.\n         * @param {string} [userId] UserID, will always generate a 500 permission error.\n         * @param {number} [n] The number of objects to return.\n         * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getFiles: function (tag, userId, n, offset, options) {\n            return localVarFp.getFiles(tag, userId, n, offset, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Starts an upload of a specific FilePart. This endpoint will return an AWS URL which you can PUT data to. You need to call this and receive a new AWS API URL for each `partNumber`. Please see AWS\\'s REST documentation on \\\"PUT Object to S3\\\" on how to upload. Once all parts has been uploaded, proceed to `/finish` endpoint.  **Note:** `nextPartNumber` seems like it is always ignored. Despite it returning 0, first partNumber is always 1.\n         * @summary Start FileData Upload\n         * @param {string} fileId\n         * @param {number} versionId\n         * @param {'file' | 'signature' | 'delta'} fileType\n         * @param {number} [partNumber]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        startFileDataUpload: function (fileId, versionId, fileType, partNumber, options) {\n            return localVarFp.startFileDataUpload(fileId, versionId, fileType, partNumber, options).then(function (request) { return request(axios, basePath); });\n        },\n    };\n};\n/**\n * FilesApi - object-oriented interface\n * @export\n * @class FilesApi\n * @extends {BaseAPI}\n */\nvar FilesApi = /** @class */ (function (_super) {\n    __extends(FilesApi, _super);\n    function FilesApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Creates a new File object\n     * @summary Create File\n     * @param {CreateFileRequest} [createFileRequest]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof FilesApi\n     */\n    FilesApi.prototype.createFile = function (createFileRequest, options) {\n        var _this = this;\n        return exports.FilesApiFp(this.configuration).createFile(createFileRequest, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Creates a new FileVersion. Once a Version has been created, proceed to the `/file/{fileId}/{versionId}/file/start` endpoint to start a file upload.\n     * @summary Create File Version\n     * @param {string} fileId\n     * @param {CreateFileVersionRequest} [createFileVersionRequest]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof FilesApi\n     */\n    FilesApi.prototype.createFileVersion = function (fileId, createFileVersionRequest, options) {\n        var _this = this;\n        return exports.FilesApiFp(this.configuration).createFileVersion(fileId, createFileVersionRequest, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Deletes a File object.\n     * @summary Delete File\n     * @param {string} fileId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof FilesApi\n     */\n    FilesApi.prototype.deleteFile = function (fileId, options) {\n        var _this = this;\n        return exports.FilesApiFp(this.configuration).deleteFile(fileId, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Delete a specific version of a file. You can only delete the latest version.\n     * @summary Delete File Version\n     * @param {string} fileId\n     * @param {number} versionId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof FilesApi\n     */\n    FilesApi.prototype.deleteFileVersion = function (fileId, versionId, options) {\n        var _this = this;\n        return exports.FilesApiFp(this.configuration).deleteFileVersion(fileId, versionId, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Downloads the file with the provided version number.  **Version Note:** Version 0 is always when the file was created. The real data is usually always located in version 1 and up.  **Extension Note:** Files are not guaranteed to have a file extensions. UnityPackage files tends to have it, images through this endpoint do not. You are responsible for appending file extension from the `extension` field when neccesary.\n     * @summary Download File Version\n     * @param {string} fileId\n     * @param {number} versionId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof FilesApi\n     */\n    FilesApi.prototype.downloadFileVersion = function (fileId, versionId, options) {\n        var _this = this;\n        return exports.FilesApiFp(this.configuration).downloadFileVersion(fileId, versionId, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Finish an upload of a FileData. This will mark it as \\\"complete\\\". After uploading the `file` for Avatars and Worlds you then have to upload a `signature` file.\n     * @summary Finish FileData Upload\n     * @param {string} fileId\n     * @param {number} versionId\n     * @param {'file' | 'signature' | 'delta'} fileType\n     * @param {FinishFileDataUploadRequest} [finishFileDataUploadRequest] Please see documentation on ETag\\&#39;s: [https://teppen.io/2018/06/23/aws_s3_etags/](https://teppen.io/2018/06/23/aws_s3_etags/)  ETag\\&#39;s should NOT be present when uploading a &#x60;signature&#x60;.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof FilesApi\n     */\n    FilesApi.prototype.finishFileDataUpload = function (fileId, versionId, fileType, finishFileDataUploadRequest, options) {\n        var _this = this;\n        return exports.FilesApiFp(this.configuration).finishFileDataUpload(fileId, versionId, fileType, finishFileDataUploadRequest, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Shows general information about the \\\"File\\\" object. Each File can have several \\\"Version\\\"\\'s, and each Version can have multiple real files or \\\"Data\\\" blobs.\n     * @summary Show File\n     * @param {string} fileId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof FilesApi\n     */\n    FilesApi.prototype.getFile = function (fileId, options) {\n        var _this = this;\n        return exports.FilesApiFp(this.configuration).getFile(fileId, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Retrieves the upload status for file upload. Can currently only be accessed when `status` is `waiting`. Trying to access it on a file version already uploaded currently times out.\n     * @summary Check FileData Upload Status\n     * @param {string} fileId\n     * @param {number} versionId\n     * @param {'file' | 'signature' | 'delta'} fileType\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof FilesApi\n     */\n    FilesApi.prototype.getFileDataUploadStatus = function (fileId, versionId, fileType, options) {\n        var _this = this;\n        return exports.FilesApiFp(this.configuration).getFileDataUploadStatus(fileId, versionId, fileType, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Returns a list of files\n     * @summary List Files\n     * @param {string} [tag] Tag, for example \\&quot;icon\\&quot; or \\&quot;gallery\\&quot;, not included by default.\n     * @param {string} [userId] UserID, will always generate a 500 permission error.\n     * @param {number} [n] The number of objects to return.\n     * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof FilesApi\n     */\n    FilesApi.prototype.getFiles = function (tag, userId, n, offset, options) {\n        var _this = this;\n        return exports.FilesApiFp(this.configuration).getFiles(tag, userId, n, offset, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Starts an upload of a specific FilePart. This endpoint will return an AWS URL which you can PUT data to. You need to call this and receive a new AWS API URL for each `partNumber`. Please see AWS\\'s REST documentation on \\\"PUT Object to S3\\\" on how to upload. Once all parts has been uploaded, proceed to `/finish` endpoint.  **Note:** `nextPartNumber` seems like it is always ignored. Despite it returning 0, first partNumber is always 1.\n     * @summary Start FileData Upload\n     * @param {string} fileId\n     * @param {number} versionId\n     * @param {'file' | 'signature' | 'delta'} fileType\n     * @param {number} [partNumber]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof FilesApi\n     */\n    FilesApi.prototype.startFileDataUpload = function (fileId, versionId, fileType, partNumber, options) {\n        var _this = this;\n        return exports.FilesApiFp(this.configuration).startFileDataUpload(fileId, versionId, fileType, partNumber, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    return FilesApi;\n}(base_1.BaseAPI));\nexports.FilesApi = FilesApi;\n/**\n * FriendsApi - axios parameter creator\n * @export\n */\nexports.FriendsApiAxiosParamCreator = function (configuration) {\n    var _this = this;\n    return {\n        /**\n         * Deletes an outgoing pending friend request to another user. To delete an incoming friend request, use the `deleteNotification` endpoint instead.\n         * @summary Delete Friend Request\n         * @param {string} userId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteFriendRequest: function (userId, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'userId' is not null or undefined\n                    common_1.assertParamExists('deleteFriendRequest', 'userId', userId);\n                    localVarPath = \"/user/{userId}/friendRequest\"\n                        .replace(\"{\" + \"userId\" + \"}\", encodeURIComponent(String(userId)));\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'DELETE' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication apiKeyCookie required\n                    // authentication authCookie required\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Send a friend request to another user.\n         * @summary Send Friend Request\n         * @param {string} userId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        friend: function (userId, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'userId' is not null or undefined\n                    common_1.assertParamExists('friend', 'userId', userId);\n                    localVarPath = \"/user/{userId}/friendRequest\"\n                        .replace(\"{\" + \"userId\" + \"}\", encodeURIComponent(String(userId)));\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication apiKeyCookie required\n                    // authentication authCookie required\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Retrieve if the user is currently a friend with a given user, if they have an outgoing friend request, and if they have an incoming friend request. The proper way to receive and accept friend request is by checking if the user has an incoming `Notification` of type `friendRequest`, and then accepting that notification.\n         * @summary Check Friend Status\n         * @param {string} userId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getFriendStatus: function (userId, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'userId' is not null or undefined\n                    common_1.assertParamExists('getFriendStatus', 'userId', userId);\n                    localVarPath = \"/user/{userId}/friendStatus\"\n                        .replace(\"{\" + \"userId\" + \"}\", encodeURIComponent(String(userId)));\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication apiKeyCookie required\n                    // authentication authCookie required\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * List information about friends.\n         * @summary List Friends\n         * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n         * @param {number} [n] The number of objects to return.\n         * @param {boolean} [offline] Returns *only* offline users if true, returns only online and active users if false\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getFriends: function (offset, n, offline, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    localVarPath = \"/auth/user/friends\";\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication apiKeyCookie required\n                    // authentication authCookie required\n                    if (offset !== undefined) {\n                        localVarQueryParameter['offset'] = offset;\n                    }\n                    if (n !== undefined) {\n                        localVarQueryParameter['n'] = n;\n                    }\n                    if (offline !== undefined) {\n                        localVarQueryParameter['offline'] = offline;\n                    }\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Unfriend a user by ID.\n         * @summary Unfriend\n         * @param {string} userId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        unfriend: function (userId, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'userId' is not null or undefined\n                    common_1.assertParamExists('unfriend', 'userId', userId);\n                    localVarPath = \"/auth/user/friends/{userId}\"\n                        .replace(\"{\" + \"userId\" + \"}\", encodeURIComponent(String(userId)));\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'DELETE' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication apiKeyCookie required\n                    // authentication authCookie required\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n    };\n};\n/**\n * FriendsApi - functional programming interface\n * @export\n */\nexports.FriendsApiFp = function (configuration) {\n    var localVarAxiosParamCreator = exports.FriendsApiAxiosParamCreator(configuration);\n    return {\n        /**\n         * Deletes an outgoing pending friend request to another user. To delete an incoming friend request, use the `deleteNotification` endpoint instead.\n         * @summary Delete Friend Request\n         * @param {string} userId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteFriendRequest: function (userId, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.deleteFriendRequest(userId, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n        /**\n         * Send a friend request to another user.\n         * @summary Send Friend Request\n         * @param {string} userId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        friend: function (userId, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.friend(userId, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n        /**\n         * Retrieve if the user is currently a friend with a given user, if they have an outgoing friend request, and if they have an incoming friend request. The proper way to receive and accept friend request is by checking if the user has an incoming `Notification` of type `friendRequest`, and then accepting that notification.\n         * @summary Check Friend Status\n         * @param {string} userId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getFriendStatus: function (userId, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.getFriendStatus(userId, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n        /**\n         * List information about friends.\n         * @summary List Friends\n         * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n         * @param {number} [n] The number of objects to return.\n         * @param {boolean} [offline] Returns *only* offline users if true, returns only online and active users if false\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getFriends: function (offset, n, offline, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.getFriends(offset, n, offline, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n        /**\n         * Unfriend a user by ID.\n         * @summary Unfriend\n         * @param {string} userId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        unfriend: function (userId, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.unfriend(userId, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n    };\n};\n/**\n * FriendsApi - factory interface\n * @export\n */\nexports.FriendsApiFactory = function (configuration, basePath, axios) {\n    var localVarFp = exports.FriendsApiFp(configuration);\n    return {\n        /**\n         * Deletes an outgoing pending friend request to another user. To delete an incoming friend request, use the `deleteNotification` endpoint instead.\n         * @summary Delete Friend Request\n         * @param {string} userId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteFriendRequest: function (userId, options) {\n            return localVarFp.deleteFriendRequest(userId, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Send a friend request to another user.\n         * @summary Send Friend Request\n         * @param {string} userId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        friend: function (userId, options) {\n            return localVarFp.friend(userId, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Retrieve if the user is currently a friend with a given user, if they have an outgoing friend request, and if they have an incoming friend request. The proper way to receive and accept friend request is by checking if the user has an incoming `Notification` of type `friendRequest`, and then accepting that notification.\n         * @summary Check Friend Status\n         * @param {string} userId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getFriendStatus: function (userId, options) {\n            return localVarFp.getFriendStatus(userId, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * List information about friends.\n         * @summary List Friends\n         * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n         * @param {number} [n] The number of objects to return.\n         * @param {boolean} [offline] Returns *only* offline users if true, returns only online and active users if false\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getFriends: function (offset, n, offline, options) {\n            return localVarFp.getFriends(offset, n, offline, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Unfriend a user by ID.\n         * @summary Unfriend\n         * @param {string} userId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        unfriend: function (userId, options) {\n            return localVarFp.unfriend(userId, options).then(function (request) { return request(axios, basePath); });\n        },\n    };\n};\n/**\n * FriendsApi - object-oriented interface\n * @export\n * @class FriendsApi\n * @extends {BaseAPI}\n */\nvar FriendsApi = /** @class */ (function (_super) {\n    __extends(FriendsApi, _super);\n    function FriendsApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Deletes an outgoing pending friend request to another user. To delete an incoming friend request, use the `deleteNotification` endpoint instead.\n     * @summary Delete Friend Request\n     * @param {string} userId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof FriendsApi\n     */\n    FriendsApi.prototype.deleteFriendRequest = function (userId, options) {\n        var _this = this;\n        return exports.FriendsApiFp(this.configuration).deleteFriendRequest(userId, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Send a friend request to another user.\n     * @summary Send Friend Request\n     * @param {string} userId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof FriendsApi\n     */\n    FriendsApi.prototype.friend = function (userId, options) {\n        var _this = this;\n        return exports.FriendsApiFp(this.configuration).friend(userId, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Retrieve if the user is currently a friend with a given user, if they have an outgoing friend request, and if they have an incoming friend request. The proper way to receive and accept friend request is by checking if the user has an incoming `Notification` of type `friendRequest`, and then accepting that notification.\n     * @summary Check Friend Status\n     * @param {string} userId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof FriendsApi\n     */\n    FriendsApi.prototype.getFriendStatus = function (userId, options) {\n        var _this = this;\n        return exports.FriendsApiFp(this.configuration).getFriendStatus(userId, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * List information about friends.\n     * @summary List Friends\n     * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n     * @param {number} [n] The number of objects to return.\n     * @param {boolean} [offline] Returns *only* offline users if true, returns only online and active users if false\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof FriendsApi\n     */\n    FriendsApi.prototype.getFriends = function (offset, n, offline, options) {\n        var _this = this;\n        return exports.FriendsApiFp(this.configuration).getFriends(offset, n, offline, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Unfriend a user by ID.\n     * @summary Unfriend\n     * @param {string} userId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof FriendsApi\n     */\n    FriendsApi.prototype.unfriend = function (userId, options) {\n        var _this = this;\n        return exports.FriendsApiFp(this.configuration).unfriend(userId, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    return FriendsApi;\n}(base_1.BaseAPI));\nexports.FriendsApi = FriendsApi;\n/**\n * InstancesApi - axios parameter creator\n * @export\n */\nexports.InstancesApiAxiosParamCreator = function (configuration) {\n    var _this = this;\n    return {\n        /**\n         * Returns an instance. Please read [Instances Tutorial](https://vrchatapi.github.io/tutorials/instances/) for more information on Instances.  If an invalid instanceId is provided, this endpoint will simply return \\\"null\\\"!\n         * @summary Get Instance\n         * @param {string} worldId\n         * @param {string} instanceId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getInstance: function (worldId, instanceId, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'worldId' is not null or undefined\n                    common_1.assertParamExists('getInstance', 'worldId', worldId);\n                    // verify required parameter 'instanceId' is not null or undefined\n                    common_1.assertParamExists('getInstance', 'instanceId', instanceId);\n                    localVarPath = \"/instances/{worldId}:{instanceId}\"\n                        .replace(\"{\" + \"worldId\" + \"}\", encodeURIComponent(String(worldId)))\n                        .replace(\"{\" + \"instanceId\" + \"}\", encodeURIComponent(String(instanceId)));\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication apiKeyCookie required\n                    // authentication authCookie required\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Returns an instance short name.\n         * @summary Get Instance Short Name\n         * @param {string} worldId\n         * @param {string} instanceId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getShortName: function (worldId, instanceId, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'worldId' is not null or undefined\n                    common_1.assertParamExists('getShortName', 'worldId', worldId);\n                    // verify required parameter 'instanceId' is not null or undefined\n                    common_1.assertParamExists('getShortName', 'instanceId', instanceId);\n                    localVarPath = \"/instances/{worldId}:{instanceId}/shortName\"\n                        .replace(\"{\" + \"worldId\" + \"}\", encodeURIComponent(String(worldId)))\n                        .replace(\"{\" + \"instanceId\" + \"}\", encodeURIComponent(String(instanceId)));\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication apiKeyCookie required\n                    // authentication authCookie required\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Sends an invite to the instance to yourself.\n         * @summary Send Self Invite\n         * @param {string} worldId\n         * @param {string} instanceId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        sendSelfInvite: function (worldId, instanceId, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'worldId' is not null or undefined\n                    common_1.assertParamExists('sendSelfInvite', 'worldId', worldId);\n                    // verify required parameter 'instanceId' is not null or undefined\n                    common_1.assertParamExists('sendSelfInvite', 'instanceId', instanceId);\n                    localVarPath = \"/instances/{worldId}:{instanceId}/invite\"\n                        .replace(\"{\" + \"worldId\" + \"}\", encodeURIComponent(String(worldId)))\n                        .replace(\"{\" + \"instanceId\" + \"}\", encodeURIComponent(String(instanceId)));\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication apiKeyCookie required\n                    // authentication authCookie required\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n    };\n};\n/**\n * InstancesApi - functional programming interface\n * @export\n */\nexports.InstancesApiFp = function (configuration) {\n    var localVarAxiosParamCreator = exports.InstancesApiAxiosParamCreator(configuration);\n    return {\n        /**\n         * Returns an instance. Please read [Instances Tutorial](https://vrchatapi.github.io/tutorials/instances/) for more information on Instances.  If an invalid instanceId is provided, this endpoint will simply return \\\"null\\\"!\n         * @summary Get Instance\n         * @param {string} worldId\n         * @param {string} instanceId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getInstance: function (worldId, instanceId, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.getInstance(worldId, instanceId, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n        /**\n         * Returns an instance short name.\n         * @summary Get Instance Short Name\n         * @param {string} worldId\n         * @param {string} instanceId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getShortName: function (worldId, instanceId, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.getShortName(worldId, instanceId, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n        /**\n         * Sends an invite to the instance to yourself.\n         * @summary Send Self Invite\n         * @param {string} worldId\n         * @param {string} instanceId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        sendSelfInvite: function (worldId, instanceId, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.sendSelfInvite(worldId, instanceId, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n    };\n};\n/**\n * InstancesApi - factory interface\n * @export\n */\nexports.InstancesApiFactory = function (configuration, basePath, axios) {\n    var localVarFp = exports.InstancesApiFp(configuration);\n    return {\n        /**\n         * Returns an instance. Please read [Instances Tutorial](https://vrchatapi.github.io/tutorials/instances/) for more information on Instances.  If an invalid instanceId is provided, this endpoint will simply return \\\"null\\\"!\n         * @summary Get Instance\n         * @param {string} worldId\n         * @param {string} instanceId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getInstance: function (worldId, instanceId, options) {\n            return localVarFp.getInstance(worldId, instanceId, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Returns an instance short name.\n         * @summary Get Instance Short Name\n         * @param {string} worldId\n         * @param {string} instanceId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getShortName: function (worldId, instanceId, options) {\n            return localVarFp.getShortName(worldId, instanceId, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Sends an invite to the instance to yourself.\n         * @summary Send Self Invite\n         * @param {string} worldId\n         * @param {string} instanceId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        sendSelfInvite: function (worldId, instanceId, options) {\n            return localVarFp.sendSelfInvite(worldId, instanceId, options).then(function (request) { return request(axios, basePath); });\n        },\n    };\n};\n/**\n * InstancesApi - object-oriented interface\n * @export\n * @class InstancesApi\n * @extends {BaseAPI}\n */\nvar InstancesApi = /** @class */ (function (_super) {\n    __extends(InstancesApi, _super);\n    function InstancesApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Returns an instance. Please read [Instances Tutorial](https://vrchatapi.github.io/tutorials/instances/) for more information on Instances.  If an invalid instanceId is provided, this endpoint will simply return \\\"null\\\"!\n     * @summary Get Instance\n     * @param {string} worldId\n     * @param {string} instanceId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof InstancesApi\n     */\n    InstancesApi.prototype.getInstance = function (worldId, instanceId, options) {\n        var _this = this;\n        return exports.InstancesApiFp(this.configuration).getInstance(worldId, instanceId, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Returns an instance short name.\n     * @summary Get Instance Short Name\n     * @param {string} worldId\n     * @param {string} instanceId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof InstancesApi\n     */\n    InstancesApi.prototype.getShortName = function (worldId, instanceId, options) {\n        var _this = this;\n        return exports.InstancesApiFp(this.configuration).getShortName(worldId, instanceId, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Sends an invite to the instance to yourself.\n     * @summary Send Self Invite\n     * @param {string} worldId\n     * @param {string} instanceId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof InstancesApi\n     */\n    InstancesApi.prototype.sendSelfInvite = function (worldId, instanceId, options) {\n        var _this = this;\n        return exports.InstancesApiFp(this.configuration).sendSelfInvite(worldId, instanceId, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    return InstancesApi;\n}(base_1.BaseAPI));\nexports.InstancesApi = InstancesApi;\n/**\n * InviteApi - axios parameter creator\n * @export\n */\nexports.InviteApiAxiosParamCreator = function (configuration) {\n    var _this = this;\n    return {\n        /**\n         * Returns a single Invite Message. This returns the exact same information but less than `getInviteMessages`. Admin Credentials are required to view messages of other users!  Message type refers to a different collection of messages, used during different types of responses.  * `message` = Message during a normal invite * `response` = Message when replying to a message * `request` = Message when requesting an invite * `requestResponse` = Message when replying to a request for invite\n         * @summary Get Invite Message\n         * @param {string} userId\n         * @param {'message' | 'response' | 'request' | 'requestResponse'} messageType\n         * @param {number} slot\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getInviteMessage: function (userId, messageType, slot, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'userId' is not null or undefined\n                    common_1.assertParamExists('getInviteMessage', 'userId', userId);\n                    // verify required parameter 'messageType' is not null or undefined\n                    common_1.assertParamExists('getInviteMessage', 'messageType', messageType);\n                    // verify required parameter 'slot' is not null or undefined\n                    common_1.assertParamExists('getInviteMessage', 'slot', slot);\n                    localVarPath = \"/message/{userId}/{messageType}/{slot}\"\n                        .replace(\"{\" + \"userId\" + \"}\", encodeURIComponent(String(userId)))\n                        .replace(\"{\" + \"messageType\" + \"}\", encodeURIComponent(String(messageType)))\n                        .replace(\"{\" + \"slot\" + \"}\", encodeURIComponent(String(slot)));\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication apiKeyCookie required\n                    // authentication authCookie required\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Returns a list of all the users Invite Messages. Admin Credentials are required to view messages of other users!  Message type refers to a different collection of messages, used during different types of responses.  * `message` = Message during a normal invite * `response` = Message when replying to a message * `request` = Message when requesting an invite * `requestResponse` = Message when replying to a request for invite\n         * @summary List Invite Messages\n         * @param {string} userId\n         * @param {'message' | 'response' | 'request' | 'requestResponse'} messageType\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getInviteMessages: function (userId, messageType, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'userId' is not null or undefined\n                    common_1.assertParamExists('getInviteMessages', 'userId', userId);\n                    // verify required parameter 'messageType' is not null or undefined\n                    common_1.assertParamExists('getInviteMessages', 'messageType', messageType);\n                    localVarPath = \"/message/{userId}/{messageType}\"\n                        .replace(\"{\" + \"userId\" + \"}\", encodeURIComponent(String(userId)))\n                        .replace(\"{\" + \"messageType\" + \"}\", encodeURIComponent(String(messageType)));\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication apiKeyCookie required\n                    // authentication authCookie required\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Sends an invite to a user. Returns the Notification of type `invite` that was sent.\n         * @summary Invite User\n         * @param {string} userId\n         * @param {InviteRequest} [inviteRequest] Slot number of the Invite Message to use when inviting a user.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        inviteUser: function (userId, inviteRequest, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'userId' is not null or undefined\n                    common_1.assertParamExists('inviteUser', 'userId', userId);\n                    localVarPath = \"/invite/{userId}\"\n                        .replace(\"{\" + \"userId\" + \"}\", encodeURIComponent(String(userId)));\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication apiKeyCookie required\n                    // authentication authCookie required\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    localVarRequestOptions.data = common_1.serializeDataIfNeeded(inviteRequest, localVarRequestOptions, configuration);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Requests an invite from a user. Returns the Notification of type `requestInvite` that was sent.\n         * @summary Request Invite\n         * @param {string} userId\n         * @param {RequestInviteRequest} [requestInviteRequest] Slot number of the Request Message to use when request an invite.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        requestInvite: function (userId, requestInviteRequest, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'userId' is not null or undefined\n                    common_1.assertParamExists('requestInvite', 'userId', userId);\n                    localVarPath = \"/requestInvite/{userId}\"\n                        .replace(\"{\" + \"userId\" + \"}\", encodeURIComponent(String(userId)));\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication apiKeyCookie required\n                    // authentication authCookie required\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    localVarRequestOptions.data = common_1.serializeDataIfNeeded(requestInviteRequest, localVarRequestOptions, configuration);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Resets a single Invite Message back to its original message, and then returns a list of all of them. Admin Credentials are required to update messages of other users!  Resetting a message respects the rate-limit, so it is not possible to reset within the 60 minutes countdown. Resetting it does however not set the rate-limit to 60 like when editing it. It is possible to edit it right after resetting it. Trying to edit a message before the cooldown timer expires results in a 429 \\\"Too Fast Error\\\".  Message type refers to a different collection of messages, used during different types of responses.  * `message` = Message during a normal invite * `response` = Message when replying to a message * `request` = Message when requesting an invite * `requestResponse` = Message when replying to a request for invite  The DELETE endpoint does not have/require any request body.\n         * @summary Reset Invite Message\n         * @param {string} userId\n         * @param {'message' | 'response' | 'request' | 'requestResponse'} messageType\n         * @param {number} slot\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        resetInviteMessage: function (userId, messageType, slot, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'userId' is not null or undefined\n                    common_1.assertParamExists('resetInviteMessage', 'userId', userId);\n                    // verify required parameter 'messageType' is not null or undefined\n                    common_1.assertParamExists('resetInviteMessage', 'messageType', messageType);\n                    // verify required parameter 'slot' is not null or undefined\n                    common_1.assertParamExists('resetInviteMessage', 'slot', slot);\n                    localVarPath = \"/message/{userId}/{messageType}/{slot}\"\n                        .replace(\"{\" + \"userId\" + \"}\", encodeURIComponent(String(userId)))\n                        .replace(\"{\" + \"messageType\" + \"}\", encodeURIComponent(String(messageType)))\n                        .replace(\"{\" + \"slot\" + \"}\", encodeURIComponent(String(slot)));\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'DELETE' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication apiKeyCookie required\n                    // authentication authCookie required\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Respond to an invite request by sending a world invite to the requesting user. `:notificationId` is the ID of the requesting notification.\n         * @summary Respond Invite\n         * @param {string} notificationId\n         * @param {InviteResponse} [inviteResponse] Slot number of the Response Message to use when responding to a user.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        respondInvite: function (notificationId, inviteResponse, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'notificationId' is not null or undefined\n                    common_1.assertParamExists('respondInvite', 'notificationId', notificationId);\n                    localVarPath = \"/invite/{notificationId}/response\"\n                        .replace(\"{\" + \"notificationId\" + \"}\", encodeURIComponent(String(notificationId)));\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication apiKeyCookie required\n                    // authentication authCookie required\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    localVarRequestOptions.data = common_1.serializeDataIfNeeded(inviteResponse, localVarRequestOptions, configuration);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Updates a single Invite Message and then returns a list of all of them. Admin Credentials are required to update messages of other users!  Updating a message automatically sets the cooldown timer to 60 minutes. Trying to edit a message before the cooldown timer expires results in a 429 \\\"Too Fast Error\\\".  Message type refers to a different collection of messages, used during different types of responses.  * `message` = Message during a normal invite * `response` = Message when replying to a message * `request` = Message when requesting an invite * `requestResponse` = Message when replying to a request for invite\n         * @summary Update Invite Message\n         * @param {string} userId\n         * @param {'message' | 'response' | 'request' | 'requestResponse'} messageType\n         * @param {number} slot\n         * @param {UpdateInviteMessageRequest} [updateInviteMessageRequest] Message of what to set the invite message to.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateInviteMessage: function (userId, messageType, slot, updateInviteMessageRequest, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'userId' is not null or undefined\n                    common_1.assertParamExists('updateInviteMessage', 'userId', userId);\n                    // verify required parameter 'messageType' is not null or undefined\n                    common_1.assertParamExists('updateInviteMessage', 'messageType', messageType);\n                    // verify required parameter 'slot' is not null or undefined\n                    common_1.assertParamExists('updateInviteMessage', 'slot', slot);\n                    localVarPath = \"/message/{userId}/{messageType}/{slot}\"\n                        .replace(\"{\" + \"userId\" + \"}\", encodeURIComponent(String(userId)))\n                        .replace(\"{\" + \"messageType\" + \"}\", encodeURIComponent(String(messageType)))\n                        .replace(\"{\" + \"slot\" + \"}\", encodeURIComponent(String(slot)));\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'PUT' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication apiKeyCookie required\n                    // authentication authCookie required\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    localVarRequestOptions.data = common_1.serializeDataIfNeeded(updateInviteMessageRequest, localVarRequestOptions, configuration);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n    };\n};\n/**\n * InviteApi - functional programming interface\n * @export\n */\nexports.InviteApiFp = function (configuration) {\n    var localVarAxiosParamCreator = exports.InviteApiAxiosParamCreator(configuration);\n    return {\n        /**\n         * Returns a single Invite Message. This returns the exact same information but less than `getInviteMessages`. Admin Credentials are required to view messages of other users!  Message type refers to a different collection of messages, used during different types of responses.  * `message` = Message during a normal invite * `response` = Message when replying to a message * `request` = Message when requesting an invite * `requestResponse` = Message when replying to a request for invite\n         * @summary Get Invite Message\n         * @param {string} userId\n         * @param {'message' | 'response' | 'request' | 'requestResponse'} messageType\n         * @param {number} slot\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getInviteMessage: function (userId, messageType, slot, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.getInviteMessage(userId, messageType, slot, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n        /**\n         * Returns a list of all the users Invite Messages. Admin Credentials are required to view messages of other users!  Message type refers to a different collection of messages, used during different types of responses.  * `message` = Message during a normal invite * `response` = Message when replying to a message * `request` = Message when requesting an invite * `requestResponse` = Message when replying to a request for invite\n         * @summary List Invite Messages\n         * @param {string} userId\n         * @param {'message' | 'response' | 'request' | 'requestResponse'} messageType\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getInviteMessages: function (userId, messageType, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.getInviteMessages(userId, messageType, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n        /**\n         * Sends an invite to a user. Returns the Notification of type `invite` that was sent.\n         * @summary Invite User\n         * @param {string} userId\n         * @param {InviteRequest} [inviteRequest] Slot number of the Invite Message to use when inviting a user.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        inviteUser: function (userId, inviteRequest, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.inviteUser(userId, inviteRequest, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n        /**\n         * Requests an invite from a user. Returns the Notification of type `requestInvite` that was sent.\n         * @summary Request Invite\n         * @param {string} userId\n         * @param {RequestInviteRequest} [requestInviteRequest] Slot number of the Request Message to use when request an invite.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        requestInvite: function (userId, requestInviteRequest, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.requestInvite(userId, requestInviteRequest, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n        /**\n         * Resets a single Invite Message back to its original message, and then returns a list of all of them. Admin Credentials are required to update messages of other users!  Resetting a message respects the rate-limit, so it is not possible to reset within the 60 minutes countdown. Resetting it does however not set the rate-limit to 60 like when editing it. It is possible to edit it right after resetting it. Trying to edit a message before the cooldown timer expires results in a 429 \\\"Too Fast Error\\\".  Message type refers to a different collection of messages, used during different types of responses.  * `message` = Message during a normal invite * `response` = Message when replying to a message * `request` = Message when requesting an invite * `requestResponse` = Message when replying to a request for invite  The DELETE endpoint does not have/require any request body.\n         * @summary Reset Invite Message\n         * @param {string} userId\n         * @param {'message' | 'response' | 'request' | 'requestResponse'} messageType\n         * @param {number} slot\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        resetInviteMessage: function (userId, messageType, slot, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.resetInviteMessage(userId, messageType, slot, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n        /**\n         * Respond to an invite request by sending a world invite to the requesting user. `:notificationId` is the ID of the requesting notification.\n         * @summary Respond Invite\n         * @param {string} notificationId\n         * @param {InviteResponse} [inviteResponse] Slot number of the Response Message to use when responding to a user.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        respondInvite: function (notificationId, inviteResponse, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.respondInvite(notificationId, inviteResponse, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n        /**\n         * Updates a single Invite Message and then returns a list of all of them. Admin Credentials are required to update messages of other users!  Updating a message automatically sets the cooldown timer to 60 minutes. Trying to edit a message before the cooldown timer expires results in a 429 \\\"Too Fast Error\\\".  Message type refers to a different collection of messages, used during different types of responses.  * `message` = Message during a normal invite * `response` = Message when replying to a message * `request` = Message when requesting an invite * `requestResponse` = Message when replying to a request for invite\n         * @summary Update Invite Message\n         * @param {string} userId\n         * @param {'message' | 'response' | 'request' | 'requestResponse'} messageType\n         * @param {number} slot\n         * @param {UpdateInviteMessageRequest} [updateInviteMessageRequest] Message of what to set the invite message to.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateInviteMessage: function (userId, messageType, slot, updateInviteMessageRequest, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.updateInviteMessage(userId, messageType, slot, updateInviteMessageRequest, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n    };\n};\n/**\n * InviteApi - factory interface\n * @export\n */\nexports.InviteApiFactory = function (configuration, basePath, axios) {\n    var localVarFp = exports.InviteApiFp(configuration);\n    return {\n        /**\n         * Returns a single Invite Message. This returns the exact same information but less than `getInviteMessages`. Admin Credentials are required to view messages of other users!  Message type refers to a different collection of messages, used during different types of responses.  * `message` = Message during a normal invite * `response` = Message when replying to a message * `request` = Message when requesting an invite * `requestResponse` = Message when replying to a request for invite\n         * @summary Get Invite Message\n         * @param {string} userId\n         * @param {'message' | 'response' | 'request' | 'requestResponse'} messageType\n         * @param {number} slot\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getInviteMessage: function (userId, messageType, slot, options) {\n            return localVarFp.getInviteMessage(userId, messageType, slot, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Returns a list of all the users Invite Messages. Admin Credentials are required to view messages of other users!  Message type refers to a different collection of messages, used during different types of responses.  * `message` = Message during a normal invite * `response` = Message when replying to a message * `request` = Message when requesting an invite * `requestResponse` = Message when replying to a request for invite\n         * @summary List Invite Messages\n         * @param {string} userId\n         * @param {'message' | 'response' | 'request' | 'requestResponse'} messageType\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getInviteMessages: function (userId, messageType, options) {\n            return localVarFp.getInviteMessages(userId, messageType, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Sends an invite to a user. Returns the Notification of type `invite` that was sent.\n         * @summary Invite User\n         * @param {string} userId\n         * @param {InviteRequest} [inviteRequest] Slot number of the Invite Message to use when inviting a user.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        inviteUser: function (userId, inviteRequest, options) {\n            return localVarFp.inviteUser(userId, inviteRequest, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Requests an invite from a user. Returns the Notification of type `requestInvite` that was sent.\n         * @summary Request Invite\n         * @param {string} userId\n         * @param {RequestInviteRequest} [requestInviteRequest] Slot number of the Request Message to use when request an invite.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        requestInvite: function (userId, requestInviteRequest, options) {\n            return localVarFp.requestInvite(userId, requestInviteRequest, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Resets a single Invite Message back to its original message, and then returns a list of all of them. Admin Credentials are required to update messages of other users!  Resetting a message respects the rate-limit, so it is not possible to reset within the 60 minutes countdown. Resetting it does however not set the rate-limit to 60 like when editing it. It is possible to edit it right after resetting it. Trying to edit a message before the cooldown timer expires results in a 429 \\\"Too Fast Error\\\".  Message type refers to a different collection of messages, used during different types of responses.  * `message` = Message during a normal invite * `response` = Message when replying to a message * `request` = Message when requesting an invite * `requestResponse` = Message when replying to a request for invite  The DELETE endpoint does not have/require any request body.\n         * @summary Reset Invite Message\n         * @param {string} userId\n         * @param {'message' | 'response' | 'request' | 'requestResponse'} messageType\n         * @param {number} slot\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        resetInviteMessage: function (userId, messageType, slot, options) {\n            return localVarFp.resetInviteMessage(userId, messageType, slot, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Respond to an invite request by sending a world invite to the requesting user. `:notificationId` is the ID of the requesting notification.\n         * @summary Respond Invite\n         * @param {string} notificationId\n         * @param {InviteResponse} [inviteResponse] Slot number of the Response Message to use when responding to a user.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        respondInvite: function (notificationId, inviteResponse, options) {\n            return localVarFp.respondInvite(notificationId, inviteResponse, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Updates a single Invite Message and then returns a list of all of them. Admin Credentials are required to update messages of other users!  Updating a message automatically sets the cooldown timer to 60 minutes. Trying to edit a message before the cooldown timer expires results in a 429 \\\"Too Fast Error\\\".  Message type refers to a different collection of messages, used during different types of responses.  * `message` = Message during a normal invite * `response` = Message when replying to a message * `request` = Message when requesting an invite * `requestResponse` = Message when replying to a request for invite\n         * @summary Update Invite Message\n         * @param {string} userId\n         * @param {'message' | 'response' | 'request' | 'requestResponse'} messageType\n         * @param {number} slot\n         * @param {UpdateInviteMessageRequest} [updateInviteMessageRequest] Message of what to set the invite message to.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateInviteMessage: function (userId, messageType, slot, updateInviteMessageRequest, options) {\n            return localVarFp.updateInviteMessage(userId, messageType, slot, updateInviteMessageRequest, options).then(function (request) { return request(axios, basePath); });\n        },\n    };\n};\n/**\n * InviteApi - object-oriented interface\n * @export\n * @class InviteApi\n * @extends {BaseAPI}\n */\nvar InviteApi = /** @class */ (function (_super) {\n    __extends(InviteApi, _super);\n    function InviteApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Returns a single Invite Message. This returns the exact same information but less than `getInviteMessages`. Admin Credentials are required to view messages of other users!  Message type refers to a different collection of messages, used during different types of responses.  * `message` = Message during a normal invite * `response` = Message when replying to a message * `request` = Message when requesting an invite * `requestResponse` = Message when replying to a request for invite\n     * @summary Get Invite Message\n     * @param {string} userId\n     * @param {'message' | 'response' | 'request' | 'requestResponse'} messageType\n     * @param {number} slot\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof InviteApi\n     */\n    InviteApi.prototype.getInviteMessage = function (userId, messageType, slot, options) {\n        var _this = this;\n        return exports.InviteApiFp(this.configuration).getInviteMessage(userId, messageType, slot, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Returns a list of all the users Invite Messages. Admin Credentials are required to view messages of other users!  Message type refers to a different collection of messages, used during different types of responses.  * `message` = Message during a normal invite * `response` = Message when replying to a message * `request` = Message when requesting an invite * `requestResponse` = Message when replying to a request for invite\n     * @summary List Invite Messages\n     * @param {string} userId\n     * @param {'message' | 'response' | 'request' | 'requestResponse'} messageType\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof InviteApi\n     */\n    InviteApi.prototype.getInviteMessages = function (userId, messageType, options) {\n        var _this = this;\n        return exports.InviteApiFp(this.configuration).getInviteMessages(userId, messageType, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Sends an invite to a user. Returns the Notification of type `invite` that was sent.\n     * @summary Invite User\n     * @param {string} userId\n     * @param {InviteRequest} [inviteRequest] Slot number of the Invite Message to use when inviting a user.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof InviteApi\n     */\n    InviteApi.prototype.inviteUser = function (userId, inviteRequest, options) {\n        var _this = this;\n        return exports.InviteApiFp(this.configuration).inviteUser(userId, inviteRequest, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Requests an invite from a user. Returns the Notification of type `requestInvite` that was sent.\n     * @summary Request Invite\n     * @param {string} userId\n     * @param {RequestInviteRequest} [requestInviteRequest] Slot number of the Request Message to use when request an invite.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof InviteApi\n     */\n    InviteApi.prototype.requestInvite = function (userId, requestInviteRequest, options) {\n        var _this = this;\n        return exports.InviteApiFp(this.configuration).requestInvite(userId, requestInviteRequest, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Resets a single Invite Message back to its original message, and then returns a list of all of them. Admin Credentials are required to update messages of other users!  Resetting a message respects the rate-limit, so it is not possible to reset within the 60 minutes countdown. Resetting it does however not set the rate-limit to 60 like when editing it. It is possible to edit it right after resetting it. Trying to edit a message before the cooldown timer expires results in a 429 \\\"Too Fast Error\\\".  Message type refers to a different collection of messages, used during different types of responses.  * `message` = Message during a normal invite * `response` = Message when replying to a message * `request` = Message when requesting an invite * `requestResponse` = Message when replying to a request for invite  The DELETE endpoint does not have/require any request body.\n     * @summary Reset Invite Message\n     * @param {string} userId\n     * @param {'message' | 'response' | 'request' | 'requestResponse'} messageType\n     * @param {number} slot\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof InviteApi\n     */\n    InviteApi.prototype.resetInviteMessage = function (userId, messageType, slot, options) {\n        var _this = this;\n        return exports.InviteApiFp(this.configuration).resetInviteMessage(userId, messageType, slot, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Respond to an invite request by sending a world invite to the requesting user. `:notificationId` is the ID of the requesting notification.\n     * @summary Respond Invite\n     * @param {string} notificationId\n     * @param {InviteResponse} [inviteResponse] Slot number of the Response Message to use when responding to a user.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof InviteApi\n     */\n    InviteApi.prototype.respondInvite = function (notificationId, inviteResponse, options) {\n        var _this = this;\n        return exports.InviteApiFp(this.configuration).respondInvite(notificationId, inviteResponse, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Updates a single Invite Message and then returns a list of all of them. Admin Credentials are required to update messages of other users!  Updating a message automatically sets the cooldown timer to 60 minutes. Trying to edit a message before the cooldown timer expires results in a 429 \\\"Too Fast Error\\\".  Message type refers to a different collection of messages, used during different types of responses.  * `message` = Message during a normal invite * `response` = Message when replying to a message * `request` = Message when requesting an invite * `requestResponse` = Message when replying to a request for invite\n     * @summary Update Invite Message\n     * @param {string} userId\n     * @param {'message' | 'response' | 'request' | 'requestResponse'} messageType\n     * @param {number} slot\n     * @param {UpdateInviteMessageRequest} [updateInviteMessageRequest] Message of what to set the invite message to.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof InviteApi\n     */\n    InviteApi.prototype.updateInviteMessage = function (userId, messageType, slot, updateInviteMessageRequest, options) {\n        var _this = this;\n        return exports.InviteApiFp(this.configuration).updateInviteMessage(userId, messageType, slot, updateInviteMessageRequest, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    return InviteApi;\n}(base_1.BaseAPI));\nexports.InviteApi = InviteApi;\n/**\n * NotificationsApi - axios parameter creator\n * @export\n */\nexports.NotificationsApiAxiosParamCreator = function (configuration) {\n    var _this = this;\n    return {\n        /**\n         * Accept a friend request by notification `frq_` ID. Friend requests can be found using the NotificationsAPI `getNotifications` by filtering of type `friendRequest`.\n         * @summary Accept Friend Request\n         * @param {string} notificationId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        acceptFriendRequest: function (notificationId, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'notificationId' is not null or undefined\n                    common_1.assertParamExists('acceptFriendRequest', 'notificationId', notificationId);\n                    localVarPath = \"/auth/user/notifications/{notificationId}/accept\"\n                        .replace(\"{\" + \"notificationId\" + \"}\", encodeURIComponent(String(notificationId)));\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'PUT' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication apiKeyCookie required\n                    // authentication authCookie required\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Clear **all** notifications.\n         * @summary Clear All Notifications\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        clearNotifications: function (options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    localVarPath = \"/auth/user/notifications/clear\";\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'PUT' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication apiKeyCookie required\n                    // authentication authCookie required\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Delete a notification.\n         * @summary Delete Notification\n         * @param {string} notificationId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteNotification: function (notificationId, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'notificationId' is not null or undefined\n                    common_1.assertParamExists('deleteNotification', 'notificationId', notificationId);\n                    localVarPath = \"/auth/user/notifications/{notificationId}/hide\"\n                        .replace(\"{\" + \"notificationId\" + \"}\", encodeURIComponent(String(notificationId)));\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'PUT' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication apiKeyCookie required\n                    // authentication authCookie required\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Retrieve all of the current user\\'s notifications.\n         * @summary List Notifications\n         * @param {string} [type] Only send notifications of this type (can use &#x60;all&#x60; for all).\n         * @param {boolean} [sent] Return notifications sent by the user. Must be false or omitted.\n         * @param {boolean} [hidden] Whether to return hidden or non-hidden notifications. True only allowed on type &#x60;friendRequest&#x60;.\n         * @param {string} [after] Only return notifications sent after this Date. Ignored if type is &#x60;friendRequest&#x60;.\n         * @param {number} [n] The number of objects to return.\n         * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getNotifications: function (type, sent, hidden, after, n, offset, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    localVarPath = \"/auth/user/notifications\";\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication apiKeyCookie required\n                    // authentication authCookie required\n                    if (type !== undefined) {\n                        localVarQueryParameter['type'] = type;\n                    }\n                    if (sent !== undefined) {\n                        localVarQueryParameter['sent'] = sent;\n                    }\n                    if (hidden !== undefined) {\n                        localVarQueryParameter['hidden'] = hidden;\n                    }\n                    if (after !== undefined) {\n                        localVarQueryParameter['after'] = after;\n                    }\n                    if (n !== undefined) {\n                        localVarQueryParameter['n'] = n;\n                    }\n                    if (offset !== undefined) {\n                        localVarQueryParameter['offset'] = offset;\n                    }\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Mark a notification as seen.\n         * @summary Mark Notification As Read\n         * @param {string} notificationId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        markNotificationAsRead: function (notificationId, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'notificationId' is not null or undefined\n                    common_1.assertParamExists('markNotificationAsRead', 'notificationId', notificationId);\n                    localVarPath = \"/auth/user/notifications/{notificationId}/see\"\n                        .replace(\"{\" + \"notificationId\" + \"}\", encodeURIComponent(String(notificationId)));\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'PUT' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication apiKeyCookie required\n                    // authentication authCookie required\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n    };\n};\n/**\n * NotificationsApi - functional programming interface\n * @export\n */\nexports.NotificationsApiFp = function (configuration) {\n    var localVarAxiosParamCreator = exports.NotificationsApiAxiosParamCreator(configuration);\n    return {\n        /**\n         * Accept a friend request by notification `frq_` ID. Friend requests can be found using the NotificationsAPI `getNotifications` by filtering of type `friendRequest`.\n         * @summary Accept Friend Request\n         * @param {string} notificationId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        acceptFriendRequest: function (notificationId, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.acceptFriendRequest(notificationId, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n        /**\n         * Clear **all** notifications.\n         * @summary Clear All Notifications\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        clearNotifications: function (options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.clearNotifications(options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n        /**\n         * Delete a notification.\n         * @summary Delete Notification\n         * @param {string} notificationId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteNotification: function (notificationId, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.deleteNotification(notificationId, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n        /**\n         * Retrieve all of the current user\\'s notifications.\n         * @summary List Notifications\n         * @param {string} [type] Only send notifications of this type (can use &#x60;all&#x60; for all).\n         * @param {boolean} [sent] Return notifications sent by the user. Must be false or omitted.\n         * @param {boolean} [hidden] Whether to return hidden or non-hidden notifications. True only allowed on type &#x60;friendRequest&#x60;.\n         * @param {string} [after] Only return notifications sent after this Date. Ignored if type is &#x60;friendRequest&#x60;.\n         * @param {number} [n] The number of objects to return.\n         * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getNotifications: function (type, sent, hidden, after, n, offset, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.getNotifications(type, sent, hidden, after, n, offset, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n        /**\n         * Mark a notification as seen.\n         * @summary Mark Notification As Read\n         * @param {string} notificationId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        markNotificationAsRead: function (notificationId, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.markNotificationAsRead(notificationId, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n    };\n};\n/**\n * NotificationsApi - factory interface\n * @export\n */\nexports.NotificationsApiFactory = function (configuration, basePath, axios) {\n    var localVarFp = exports.NotificationsApiFp(configuration);\n    return {\n        /**\n         * Accept a friend request by notification `frq_` ID. Friend requests can be found using the NotificationsAPI `getNotifications` by filtering of type `friendRequest`.\n         * @summary Accept Friend Request\n         * @param {string} notificationId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        acceptFriendRequest: function (notificationId, options) {\n            return localVarFp.acceptFriendRequest(notificationId, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Clear **all** notifications.\n         * @summary Clear All Notifications\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        clearNotifications: function (options) {\n            return localVarFp.clearNotifications(options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Delete a notification.\n         * @summary Delete Notification\n         * @param {string} notificationId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteNotification: function (notificationId, options) {\n            return localVarFp.deleteNotification(notificationId, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Retrieve all of the current user\\'s notifications.\n         * @summary List Notifications\n         * @param {string} [type] Only send notifications of this type (can use &#x60;all&#x60; for all).\n         * @param {boolean} [sent] Return notifications sent by the user. Must be false or omitted.\n         * @param {boolean} [hidden] Whether to return hidden or non-hidden notifications. True only allowed on type &#x60;friendRequest&#x60;.\n         * @param {string} [after] Only return notifications sent after this Date. Ignored if type is &#x60;friendRequest&#x60;.\n         * @param {number} [n] The number of objects to return.\n         * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getNotifications: function (type, sent, hidden, after, n, offset, options) {\n            return localVarFp.getNotifications(type, sent, hidden, after, n, offset, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Mark a notification as seen.\n         * @summary Mark Notification As Read\n         * @param {string} notificationId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        markNotificationAsRead: function (notificationId, options) {\n            return localVarFp.markNotificationAsRead(notificationId, options).then(function (request) { return request(axios, basePath); });\n        },\n    };\n};\n/**\n * NotificationsApi - object-oriented interface\n * @export\n * @class NotificationsApi\n * @extends {BaseAPI}\n */\nvar NotificationsApi = /** @class */ (function (_super) {\n    __extends(NotificationsApi, _super);\n    function NotificationsApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Accept a friend request by notification `frq_` ID. Friend requests can be found using the NotificationsAPI `getNotifications` by filtering of type `friendRequest`.\n     * @summary Accept Friend Request\n     * @param {string} notificationId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof NotificationsApi\n     */\n    NotificationsApi.prototype.acceptFriendRequest = function (notificationId, options) {\n        var _this = this;\n        return exports.NotificationsApiFp(this.configuration).acceptFriendRequest(notificationId, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Clear **all** notifications.\n     * @summary Clear All Notifications\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof NotificationsApi\n     */\n    NotificationsApi.prototype.clearNotifications = function (options) {\n        var _this = this;\n        return exports.NotificationsApiFp(this.configuration).clearNotifications(options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Delete a notification.\n     * @summary Delete Notification\n     * @param {string} notificationId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof NotificationsApi\n     */\n    NotificationsApi.prototype.deleteNotification = function (notificationId, options) {\n        var _this = this;\n        return exports.NotificationsApiFp(this.configuration).deleteNotification(notificationId, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Retrieve all of the current user\\'s notifications.\n     * @summary List Notifications\n     * @param {string} [type] Only send notifications of this type (can use &#x60;all&#x60; for all).\n     * @param {boolean} [sent] Return notifications sent by the user. Must be false or omitted.\n     * @param {boolean} [hidden] Whether to return hidden or non-hidden notifications. True only allowed on type &#x60;friendRequest&#x60;.\n     * @param {string} [after] Only return notifications sent after this Date. Ignored if type is &#x60;friendRequest&#x60;.\n     * @param {number} [n] The number of objects to return.\n     * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof NotificationsApi\n     */\n    NotificationsApi.prototype.getNotifications = function (type, sent, hidden, after, n, offset, options) {\n        var _this = this;\n        return exports.NotificationsApiFp(this.configuration).getNotifications(type, sent, hidden, after, n, offset, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Mark a notification as seen.\n     * @summary Mark Notification As Read\n     * @param {string} notificationId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof NotificationsApi\n     */\n    NotificationsApi.prototype.markNotificationAsRead = function (notificationId, options) {\n        var _this = this;\n        return exports.NotificationsApiFp(this.configuration).markNotificationAsRead(notificationId, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    return NotificationsApi;\n}(base_1.BaseAPI));\nexports.NotificationsApi = NotificationsApi;\n/**\n * PermissionsApi - axios parameter creator\n * @export\n */\nexports.PermissionsApiAxiosParamCreator = function (configuration) {\n    var _this = this;\n    return {\n        /**\n         * Returns a list of all permissions currently granted by the user. Permissions are assigned e.g. by subscribing to VRC+.\n         * @summary Get Assigned Permissions\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getAssignedPermissions: function (options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    localVarPath = \"/auth/permissions\";\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication apiKeyCookie required\n                    // authentication authCookie required\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Returns a single permission. This endpoint is pretty useless, as it returns the exact same information as `/auth/permissions`.\n         * @summary Get Permission\n         * @param {string} permissionId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getPermission: function (permissionId, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'permissionId' is not null or undefined\n                    common_1.assertParamExists('getPermission', 'permissionId', permissionId);\n                    localVarPath = \"/permissions/{permissionId}\"\n                        .replace(\"{\" + \"permissionId\" + \"}\", encodeURIComponent(String(permissionId)));\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication apiKeyCookie required\n                    // authentication authCookie required\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n    };\n};\n/**\n * PermissionsApi - functional programming interface\n * @export\n */\nexports.PermissionsApiFp = function (configuration) {\n    var localVarAxiosParamCreator = exports.PermissionsApiAxiosParamCreator(configuration);\n    return {\n        /**\n         * Returns a list of all permissions currently granted by the user. Permissions are assigned e.g. by subscribing to VRC+.\n         * @summary Get Assigned Permissions\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getAssignedPermissions: function (options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.getAssignedPermissions(options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n        /**\n         * Returns a single permission. This endpoint is pretty useless, as it returns the exact same information as `/auth/permissions`.\n         * @summary Get Permission\n         * @param {string} permissionId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getPermission: function (permissionId, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.getPermission(permissionId, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n    };\n};\n/**\n * PermissionsApi - factory interface\n * @export\n */\nexports.PermissionsApiFactory = function (configuration, basePath, axios) {\n    var localVarFp = exports.PermissionsApiFp(configuration);\n    return {\n        /**\n         * Returns a list of all permissions currently granted by the user. Permissions are assigned e.g. by subscribing to VRC+.\n         * @summary Get Assigned Permissions\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getAssignedPermissions: function (options) {\n            return localVarFp.getAssignedPermissions(options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Returns a single permission. This endpoint is pretty useless, as it returns the exact same information as `/auth/permissions`.\n         * @summary Get Permission\n         * @param {string} permissionId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getPermission: function (permissionId, options) {\n            return localVarFp.getPermission(permissionId, options).then(function (request) { return request(axios, basePath); });\n        },\n    };\n};\n/**\n * PermissionsApi - object-oriented interface\n * @export\n * @class PermissionsApi\n * @extends {BaseAPI}\n */\nvar PermissionsApi = /** @class */ (function (_super) {\n    __extends(PermissionsApi, _super);\n    function PermissionsApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Returns a list of all permissions currently granted by the user. Permissions are assigned e.g. by subscribing to VRC+.\n     * @summary Get Assigned Permissions\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PermissionsApi\n     */\n    PermissionsApi.prototype.getAssignedPermissions = function (options) {\n        var _this = this;\n        return exports.PermissionsApiFp(this.configuration).getAssignedPermissions(options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Returns a single permission. This endpoint is pretty useless, as it returns the exact same information as `/auth/permissions`.\n     * @summary Get Permission\n     * @param {string} permissionId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PermissionsApi\n     */\n    PermissionsApi.prototype.getPermission = function (permissionId, options) {\n        var _this = this;\n        return exports.PermissionsApiFp(this.configuration).getPermission(permissionId, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    return PermissionsApi;\n}(base_1.BaseAPI));\nexports.PermissionsApi = PermissionsApi;\n/**\n * PlayermoderationApi - axios parameter creator\n * @export\n */\nexports.PlayermoderationApiAxiosParamCreator = function (configuration) {\n    var _this = this;\n    return {\n        /**\n         * ⚠️ **This will delete every single player moderation you\\'ve ever made.**\n         * @summary Clear All Player Moderations\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        clearAllPlayerModerations: function (options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    localVarPath = \"/auth/user/playermoderations\";\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'DELETE' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication apiKeyCookie required\n                    // authentication authCookie required\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Deletes a specific player moderation based on it\\'s `pmod_` ID. The website uses `unmoderateUser` instead. You can delete the same player moderation multiple times successfully.\n         * @summary Delete Player Moderation\n         * @param {string} playerModerationId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deletePlayerModeration: function (playerModerationId, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'playerModerationId' is not null or undefined\n                    common_1.assertParamExists('deletePlayerModeration', 'playerModerationId', playerModerationId);\n                    localVarPath = \"/auth/user/playermoderations/{playerModerationId}\"\n                        .replace(\"{\" + \"playerModerationId\" + \"}\", encodeURIComponent(String(playerModerationId)));\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'DELETE' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication apiKeyCookie required\n                    // authentication authCookie required\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Returns a single Player Moderation. This returns the exact same amount of information as the more generalised `getPlayerModerations`.\n         * @summary Get Player Moderation\n         * @param {string} playerModerationId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getPlayerModeration: function (playerModerationId, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'playerModerationId' is not null or undefined\n                    common_1.assertParamExists('getPlayerModeration', 'playerModerationId', playerModerationId);\n                    localVarPath = \"/auth/user/playermoderations/{playerModerationId}\"\n                        .replace(\"{\" + \"playerModerationId\" + \"}\", encodeURIComponent(String(playerModerationId)));\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication apiKeyCookie required\n                    // authentication authCookie required\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Returns a list of all player moderations made by **you**.  This endpoint does not have pagination, and will return *all* results. Use query parameters to limit your query if needed.\n         * @summary Search Player Moderations\n         * @param {string} [type] Must be one of PlayerModerationType, except unblock. Unblocking simply removes a block.\n         * @param {string} [targetUserId] Must be valid UserID.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getPlayerModerations: function (type, targetUserId, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    localVarPath = \"/auth/user/playermoderations\";\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication apiKeyCookie required\n                    // authentication authCookie required\n                    if (type !== undefined) {\n                        localVarQueryParameter['type'] = type;\n                    }\n                    if (targetUserId !== undefined) {\n                        localVarQueryParameter['targetUserId'] = targetUserId;\n                    }\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Moderate a user, e.g. unmute them or show their avatar.  Please see the [Player Moderation docs](https://vrchatapi.github.io/docs/api/#tag--playermoderation) on what playerModerations are, and how they differ from staff moderations.\n         * @summary Moderate User\n         * @param {ModerateUserRequest} [moderateUserRequest]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        moderateUser: function (moderateUserRequest, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    localVarPath = \"/auth/user/playermoderations\";\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication apiKeyCookie required\n                    // authentication authCookie required\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    localVarRequestOptions.data = common_1.serializeDataIfNeeded(moderateUserRequest, localVarRequestOptions, configuration);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Removes a player moderation previously added through `moderateUser`. E.g if you previously have shown their avatar, but now want to reset it to default.\n         * @summary Unmoderate User\n         * @param {ModerateUserRequest} [moderateUserRequest]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        unmoderateUser: function (moderateUserRequest, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    localVarPath = \"/auth/user/unplayermoderate\";\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'PUT' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication apiKeyCookie required\n                    // authentication authCookie required\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    localVarRequestOptions.data = common_1.serializeDataIfNeeded(moderateUserRequest, localVarRequestOptions, configuration);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n    };\n};\n/**\n * PlayermoderationApi - functional programming interface\n * @export\n */\nexports.PlayermoderationApiFp = function (configuration) {\n    var localVarAxiosParamCreator = exports.PlayermoderationApiAxiosParamCreator(configuration);\n    return {\n        /**\n         * ⚠️ **This will delete every single player moderation you\\'ve ever made.**\n         * @summary Clear All Player Moderations\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        clearAllPlayerModerations: function (options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.clearAllPlayerModerations(options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n        /**\n         * Deletes a specific player moderation based on it\\'s `pmod_` ID. The website uses `unmoderateUser` instead. You can delete the same player moderation multiple times successfully.\n         * @summary Delete Player Moderation\n         * @param {string} playerModerationId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deletePlayerModeration: function (playerModerationId, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.deletePlayerModeration(playerModerationId, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n        /**\n         * Returns a single Player Moderation. This returns the exact same amount of information as the more generalised `getPlayerModerations`.\n         * @summary Get Player Moderation\n         * @param {string} playerModerationId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getPlayerModeration: function (playerModerationId, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.getPlayerModeration(playerModerationId, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n        /**\n         * Returns a list of all player moderations made by **you**.  This endpoint does not have pagination, and will return *all* results. Use query parameters to limit your query if needed.\n         * @summary Search Player Moderations\n         * @param {string} [type] Must be one of PlayerModerationType, except unblock. Unblocking simply removes a block.\n         * @param {string} [targetUserId] Must be valid UserID.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getPlayerModerations: function (type, targetUserId, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.getPlayerModerations(type, targetUserId, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n        /**\n         * Moderate a user, e.g. unmute them or show their avatar.  Please see the [Player Moderation docs](https://vrchatapi.github.io/docs/api/#tag--playermoderation) on what playerModerations are, and how they differ from staff moderations.\n         * @summary Moderate User\n         * @param {ModerateUserRequest} [moderateUserRequest]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        moderateUser: function (moderateUserRequest, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.moderateUser(moderateUserRequest, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n        /**\n         * Removes a player moderation previously added through `moderateUser`. E.g if you previously have shown their avatar, but now want to reset it to default.\n         * @summary Unmoderate User\n         * @param {ModerateUserRequest} [moderateUserRequest]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        unmoderateUser: function (moderateUserRequest, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.unmoderateUser(moderateUserRequest, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n    };\n};\n/**\n * PlayermoderationApi - factory interface\n * @export\n */\nexports.PlayermoderationApiFactory = function (configuration, basePath, axios) {\n    var localVarFp = exports.PlayermoderationApiFp(configuration);\n    return {\n        /**\n         * ⚠️ **This will delete every single player moderation you\\'ve ever made.**\n         * @summary Clear All Player Moderations\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        clearAllPlayerModerations: function (options) {\n            return localVarFp.clearAllPlayerModerations(options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Deletes a specific player moderation based on it\\'s `pmod_` ID. The website uses `unmoderateUser` instead. You can delete the same player moderation multiple times successfully.\n         * @summary Delete Player Moderation\n         * @param {string} playerModerationId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deletePlayerModeration: function (playerModerationId, options) {\n            return localVarFp.deletePlayerModeration(playerModerationId, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Returns a single Player Moderation. This returns the exact same amount of information as the more generalised `getPlayerModerations`.\n         * @summary Get Player Moderation\n         * @param {string} playerModerationId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getPlayerModeration: function (playerModerationId, options) {\n            return localVarFp.getPlayerModeration(playerModerationId, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Returns a list of all player moderations made by **you**.  This endpoint does not have pagination, and will return *all* results. Use query parameters to limit your query if needed.\n         * @summary Search Player Moderations\n         * @param {string} [type] Must be one of PlayerModerationType, except unblock. Unblocking simply removes a block.\n         * @param {string} [targetUserId] Must be valid UserID.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getPlayerModerations: function (type, targetUserId, options) {\n            return localVarFp.getPlayerModerations(type, targetUserId, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Moderate a user, e.g. unmute them or show their avatar.  Please see the [Player Moderation docs](https://vrchatapi.github.io/docs/api/#tag--playermoderation) on what playerModerations are, and how they differ from staff moderations.\n         * @summary Moderate User\n         * @param {ModerateUserRequest} [moderateUserRequest]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        moderateUser: function (moderateUserRequest, options) {\n            return localVarFp.moderateUser(moderateUserRequest, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Removes a player moderation previously added through `moderateUser`. E.g if you previously have shown their avatar, but now want to reset it to default.\n         * @summary Unmoderate User\n         * @param {ModerateUserRequest} [moderateUserRequest]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        unmoderateUser: function (moderateUserRequest, options) {\n            return localVarFp.unmoderateUser(moderateUserRequest, options).then(function (request) { return request(axios, basePath); });\n        },\n    };\n};\n/**\n * PlayermoderationApi - object-oriented interface\n * @export\n * @class PlayermoderationApi\n * @extends {BaseAPI}\n */\nvar PlayermoderationApi = /** @class */ (function (_super) {\n    __extends(PlayermoderationApi, _super);\n    function PlayermoderationApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * ⚠️ **This will delete every single player moderation you\\'ve ever made.**\n     * @summary Clear All Player Moderations\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PlayermoderationApi\n     */\n    PlayermoderationApi.prototype.clearAllPlayerModerations = function (options) {\n        var _this = this;\n        return exports.PlayermoderationApiFp(this.configuration).clearAllPlayerModerations(options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Deletes a specific player moderation based on it\\'s `pmod_` ID. The website uses `unmoderateUser` instead. You can delete the same player moderation multiple times successfully.\n     * @summary Delete Player Moderation\n     * @param {string} playerModerationId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PlayermoderationApi\n     */\n    PlayermoderationApi.prototype.deletePlayerModeration = function (playerModerationId, options) {\n        var _this = this;\n        return exports.PlayermoderationApiFp(this.configuration).deletePlayerModeration(playerModerationId, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Returns a single Player Moderation. This returns the exact same amount of information as the more generalised `getPlayerModerations`.\n     * @summary Get Player Moderation\n     * @param {string} playerModerationId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PlayermoderationApi\n     */\n    PlayermoderationApi.prototype.getPlayerModeration = function (playerModerationId, options) {\n        var _this = this;\n        return exports.PlayermoderationApiFp(this.configuration).getPlayerModeration(playerModerationId, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Returns a list of all player moderations made by **you**.  This endpoint does not have pagination, and will return *all* results. Use query parameters to limit your query if needed.\n     * @summary Search Player Moderations\n     * @param {string} [type] Must be one of PlayerModerationType, except unblock. Unblocking simply removes a block.\n     * @param {string} [targetUserId] Must be valid UserID.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PlayermoderationApi\n     */\n    PlayermoderationApi.prototype.getPlayerModerations = function (type, targetUserId, options) {\n        var _this = this;\n        return exports.PlayermoderationApiFp(this.configuration).getPlayerModerations(type, targetUserId, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Moderate a user, e.g. unmute them or show their avatar.  Please see the [Player Moderation docs](https://vrchatapi.github.io/docs/api/#tag--playermoderation) on what playerModerations are, and how they differ from staff moderations.\n     * @summary Moderate User\n     * @param {ModerateUserRequest} [moderateUserRequest]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PlayermoderationApi\n     */\n    PlayermoderationApi.prototype.moderateUser = function (moderateUserRequest, options) {\n        var _this = this;\n        return exports.PlayermoderationApiFp(this.configuration).moderateUser(moderateUserRequest, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Removes a player moderation previously added through `moderateUser`. E.g if you previously have shown their avatar, but now want to reset it to default.\n     * @summary Unmoderate User\n     * @param {ModerateUserRequest} [moderateUserRequest]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PlayermoderationApi\n     */\n    PlayermoderationApi.prototype.unmoderateUser = function (moderateUserRequest, options) {\n        var _this = this;\n        return exports.PlayermoderationApiFp(this.configuration).unmoderateUser(moderateUserRequest, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    return PlayermoderationApi;\n}(base_1.BaseAPI));\nexports.PlayermoderationApi = PlayermoderationApi;\n/**\n * SystemApi - axios parameter creator\n * @export\n */\nexports.SystemApiAxiosParamCreator = function (configuration) {\n    var _this = this;\n    return {\n        /**\n         * Fetches the CSS code to the frontend React website.\n         * @summary Download CSS\n         * @param {'public' | 'internal'} [variant] Specifies which &#x60;variant&#x60; of the site. Public is the end-user site, while &#x60;internal&#x60; is the staff-only site with special pages for moderation and management.\n         * @param {string} [branch] Specifies which git branch the site should load frontend source code from.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getCSS: function (variant, branch, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    localVarPath = \"/css/app.css\";\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    if (variant !== undefined) {\n                        localVarQueryParameter['variant'] = variant;\n                    }\n                    if (branch !== undefined) {\n                        localVarQueryParameter['branch'] = branch;\n                    }\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * API config contains configuration that the clients needs to work properly.  Currently the most important value here is `clientApiKey` which is used for all other API endpoints.\n         * @summary Fetch API Config\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getConfig: function (options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    localVarPath = \"/config\";\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Returns the current number of online users.  **NOTE:** The response type is not a JSON object, but a simple JSON integer.\n         * @summary Current Online Users\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getCurrentOnlineUsers: function (options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    localVarPath = \"/visits\";\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * ~~Gets the overall health status, the server name, and the current build version tag of the API.~~  **DEPRECATED:** VRChat has suddenly restricted this endpoint for unknown reasons, and now always return 401 Unauthorized.\n         * @summary Check API Health\n         * @param {*} [options] Override http request option.\n         * @deprecated\n         * @throws {RequiredError}\n         */\n        getHealth: function (options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    localVarPath = \"/health\";\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * IPS (Info Push System) is a system for VRChat to push out dynamic information to the client. This is primarily used by the Quick-Menu info banners, but can also be used to e.g. alert you to update your game to the latest version.  `include` is used to query what Information Pushes should be included in the response. If include is missing or empty, then no notices will normally be returned. This is an \\\"any of\\\" search.  `require` is used to limit what Information Pushes should be included in the response. This is usually used in combination with `include`, and is an \\\"all of\\\" search.\n         * @summary Show Information Notices\n         * @param {string} [require] Tags to include (comma-separated). All of the tags needs to be present.\n         * @param {string} [include] Tags to include (comma-separated). Any of the tags needs to be present.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getInfoPush: function (require, include, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    localVarPath = \"/infoPush\";\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    if (require !== undefined) {\n                        localVarQueryParameter['require'] = require;\n                    }\n                    if (include !== undefined) {\n                        localVarQueryParameter['include'] = include;\n                    }\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Fetches the JavaScript code to the frontend React website.\n         * @summary Download JavaScript\n         * @param {'public' | 'internal'} [variant] Specifies which &#x60;variant&#x60; of the site. Public is the end-user site, while &#x60;internal&#x60; is the staff-only site with special pages for moderation and management.\n         * @param {string} [branch] Specifies which git branch the site should load frontend source code from.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getJavaScript: function (variant, branch, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    localVarPath = \"/js/app.js\";\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    if (variant !== undefined) {\n                        localVarQueryParameter['variant'] = variant;\n                    }\n                    if (branch !== undefined) {\n                        localVarQueryParameter['branch'] = branch;\n                    }\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Returns the current time of the API server.  **NOTE:** The response type is not a JSON object, but a simple JSON string.\n         * @summary Current System Time\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getSystemTime: function (options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    localVarPath = \"/time\";\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n    };\n};\n/**\n * SystemApi - functional programming interface\n * @export\n */\nexports.SystemApiFp = function (configuration) {\n    var localVarAxiosParamCreator = exports.SystemApiAxiosParamCreator(configuration);\n    return {\n        /**\n         * Fetches the CSS code to the frontend React website.\n         * @summary Download CSS\n         * @param {'public' | 'internal'} [variant] Specifies which &#x60;variant&#x60; of the site. Public is the end-user site, while &#x60;internal&#x60; is the staff-only site with special pages for moderation and management.\n         * @param {string} [branch] Specifies which git branch the site should load frontend source code from.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getCSS: function (variant, branch, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.getCSS(variant, branch, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n        /**\n         * API config contains configuration that the clients needs to work properly.  Currently the most important value here is `clientApiKey` which is used for all other API endpoints.\n         * @summary Fetch API Config\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getConfig: function (options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.getConfig(options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n        /**\n         * Returns the current number of online users.  **NOTE:** The response type is not a JSON object, but a simple JSON integer.\n         * @summary Current Online Users\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getCurrentOnlineUsers: function (options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.getCurrentOnlineUsers(options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n        /**\n         * ~~Gets the overall health status, the server name, and the current build version tag of the API.~~  **DEPRECATED:** VRChat has suddenly restricted this endpoint for unknown reasons, and now always return 401 Unauthorized.\n         * @summary Check API Health\n         * @param {*} [options] Override http request option.\n         * @deprecated\n         * @throws {RequiredError}\n         */\n        getHealth: function (options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.getHealth(options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n        /**\n         * IPS (Info Push System) is a system for VRChat to push out dynamic information to the client. This is primarily used by the Quick-Menu info banners, but can also be used to e.g. alert you to update your game to the latest version.  `include` is used to query what Information Pushes should be included in the response. If include is missing or empty, then no notices will normally be returned. This is an \\\"any of\\\" search.  `require` is used to limit what Information Pushes should be included in the response. This is usually used in combination with `include`, and is an \\\"all of\\\" search.\n         * @summary Show Information Notices\n         * @param {string} [require] Tags to include (comma-separated). All of the tags needs to be present.\n         * @param {string} [include] Tags to include (comma-separated). Any of the tags needs to be present.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getInfoPush: function (require, include, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.getInfoPush(require, include, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n        /**\n         * Fetches the JavaScript code to the frontend React website.\n         * @summary Download JavaScript\n         * @param {'public' | 'internal'} [variant] Specifies which &#x60;variant&#x60; of the site. Public is the end-user site, while &#x60;internal&#x60; is the staff-only site with special pages for moderation and management.\n         * @param {string} [branch] Specifies which git branch the site should load frontend source code from.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getJavaScript: function (variant, branch, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.getJavaScript(variant, branch, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n        /**\n         * Returns the current time of the API server.  **NOTE:** The response type is not a JSON object, but a simple JSON string.\n         * @summary Current System Time\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getSystemTime: function (options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.getSystemTime(options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n    };\n};\n/**\n * SystemApi - factory interface\n * @export\n */\nexports.SystemApiFactory = function (configuration, basePath, axios) {\n    var localVarFp = exports.SystemApiFp(configuration);\n    return {\n        /**\n         * Fetches the CSS code to the frontend React website.\n         * @summary Download CSS\n         * @param {'public' | 'internal'} [variant] Specifies which &#x60;variant&#x60; of the site. Public is the end-user site, while &#x60;internal&#x60; is the staff-only site with special pages for moderation and management.\n         * @param {string} [branch] Specifies which git branch the site should load frontend source code from.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getCSS: function (variant, branch, options) {\n            return localVarFp.getCSS(variant, branch, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * API config contains configuration that the clients needs to work properly.  Currently the most important value here is `clientApiKey` which is used for all other API endpoints.\n         * @summary Fetch API Config\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getConfig: function (options) {\n            return localVarFp.getConfig(options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Returns the current number of online users.  **NOTE:** The response type is not a JSON object, but a simple JSON integer.\n         * @summary Current Online Users\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getCurrentOnlineUsers: function (options) {\n            return localVarFp.getCurrentOnlineUsers(options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * ~~Gets the overall health status, the server name, and the current build version tag of the API.~~  **DEPRECATED:** VRChat has suddenly restricted this endpoint for unknown reasons, and now always return 401 Unauthorized.\n         * @summary Check API Health\n         * @param {*} [options] Override http request option.\n         * @deprecated\n         * @throws {RequiredError}\n         */\n        getHealth: function (options) {\n            return localVarFp.getHealth(options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * IPS (Info Push System) is a system for VRChat to push out dynamic information to the client. This is primarily used by the Quick-Menu info banners, but can also be used to e.g. alert you to update your game to the latest version.  `include` is used to query what Information Pushes should be included in the response. If include is missing or empty, then no notices will normally be returned. This is an \\\"any of\\\" search.  `require` is used to limit what Information Pushes should be included in the response. This is usually used in combination with `include`, and is an \\\"all of\\\" search.\n         * @summary Show Information Notices\n         * @param {string} [require] Tags to include (comma-separated). All of the tags needs to be present.\n         * @param {string} [include] Tags to include (comma-separated). Any of the tags needs to be present.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getInfoPush: function (require, include, options) {\n            return localVarFp.getInfoPush(require, include, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Fetches the JavaScript code to the frontend React website.\n         * @summary Download JavaScript\n         * @param {'public' | 'internal'} [variant] Specifies which &#x60;variant&#x60; of the site. Public is the end-user site, while &#x60;internal&#x60; is the staff-only site with special pages for moderation and management.\n         * @param {string} [branch] Specifies which git branch the site should load frontend source code from.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getJavaScript: function (variant, branch, options) {\n            return localVarFp.getJavaScript(variant, branch, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Returns the current time of the API server.  **NOTE:** The response type is not a JSON object, but a simple JSON string.\n         * @summary Current System Time\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getSystemTime: function (options) {\n            return localVarFp.getSystemTime(options).then(function (request) { return request(axios, basePath); });\n        },\n    };\n};\n/**\n * SystemApi - object-oriented interface\n * @export\n * @class SystemApi\n * @extends {BaseAPI}\n */\nvar SystemApi = /** @class */ (function (_super) {\n    __extends(SystemApi, _super);\n    function SystemApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Fetches the CSS code to the frontend React website.\n     * @summary Download CSS\n     * @param {'public' | 'internal'} [variant] Specifies which &#x60;variant&#x60; of the site. Public is the end-user site, while &#x60;internal&#x60; is the staff-only site with special pages for moderation and management.\n     * @param {string} [branch] Specifies which git branch the site should load frontend source code from.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof SystemApi\n     */\n    SystemApi.prototype.getCSS = function (variant, branch, options) {\n        var _this = this;\n        return exports.SystemApiFp(this.configuration).getCSS(variant, branch, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * API config contains configuration that the clients needs to work properly.  Currently the most important value here is `clientApiKey` which is used for all other API endpoints.\n     * @summary Fetch API Config\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof SystemApi\n     */\n    SystemApi.prototype.getConfig = function (options) {\n        var _this = this;\n        return exports.SystemApiFp(this.configuration).getConfig(options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Returns the current number of online users.  **NOTE:** The response type is not a JSON object, but a simple JSON integer.\n     * @summary Current Online Users\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof SystemApi\n     */\n    SystemApi.prototype.getCurrentOnlineUsers = function (options) {\n        var _this = this;\n        return exports.SystemApiFp(this.configuration).getCurrentOnlineUsers(options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * ~~Gets the overall health status, the server name, and the current build version tag of the API.~~  **DEPRECATED:** VRChat has suddenly restricted this endpoint for unknown reasons, and now always return 401 Unauthorized.\n     * @summary Check API Health\n     * @param {*} [options] Override http request option.\n     * @deprecated\n     * @throws {RequiredError}\n     * @memberof SystemApi\n     */\n    SystemApi.prototype.getHealth = function (options) {\n        var _this = this;\n        return exports.SystemApiFp(this.configuration).getHealth(options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * IPS (Info Push System) is a system for VRChat to push out dynamic information to the client. This is primarily used by the Quick-Menu info banners, but can also be used to e.g. alert you to update your game to the latest version.  `include` is used to query what Information Pushes should be included in the response. If include is missing or empty, then no notices will normally be returned. This is an \\\"any of\\\" search.  `require` is used to limit what Information Pushes should be included in the response. This is usually used in combination with `include`, and is an \\\"all of\\\" search.\n     * @summary Show Information Notices\n     * @param {string} [require] Tags to include (comma-separated). All of the tags needs to be present.\n     * @param {string} [include] Tags to include (comma-separated). Any of the tags needs to be present.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof SystemApi\n     */\n    SystemApi.prototype.getInfoPush = function (require, include, options) {\n        var _this = this;\n        return exports.SystemApiFp(this.configuration).getInfoPush(require, include, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Fetches the JavaScript code to the frontend React website.\n     * @summary Download JavaScript\n     * @param {'public' | 'internal'} [variant] Specifies which &#x60;variant&#x60; of the site. Public is the end-user site, while &#x60;internal&#x60; is the staff-only site with special pages for moderation and management.\n     * @param {string} [branch] Specifies which git branch the site should load frontend source code from.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof SystemApi\n     */\n    SystemApi.prototype.getJavaScript = function (variant, branch, options) {\n        var _this = this;\n        return exports.SystemApiFp(this.configuration).getJavaScript(variant, branch, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Returns the current time of the API server.  **NOTE:** The response type is not a JSON object, but a simple JSON string.\n     * @summary Current System Time\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof SystemApi\n     */\n    SystemApi.prototype.getSystemTime = function (options) {\n        var _this = this;\n        return exports.SystemApiFp(this.configuration).getSystemTime(options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    return SystemApi;\n}(base_1.BaseAPI));\nexports.SystemApi = SystemApi;\n/**\n * UsersApi - axios parameter creator\n * @export\n */\nexports.UsersApiAxiosParamCreator = function (configuration) {\n    var _this = this;\n    return {\n        /**\n         * Get public user information about a specific user using their ID.\n         * @summary Get User by ID\n         * @param {string} userId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getUser: function (userId, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'userId' is not null or undefined\n                    common_1.assertParamExists('getUser', 'userId', userId);\n                    localVarPath = \"/users/{userId}\"\n                        .replace(\"{\" + \"userId\" + \"}\", encodeURIComponent(String(userId)));\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication apiKeyCookie required\n                    // authentication authCookie required\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Get public user information about a specific user using their name.\n         * @summary Get User by Username\n         * @param {string} username\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getUserByName: function (username, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'username' is not null or undefined\n                    common_1.assertParamExists('getUserByName', 'username', username);\n                    localVarPath = \"/users/{username}/name\"\n                        .replace(\"{\" + \"username\" + \"}\", encodeURIComponent(String(username)));\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication apiKeyCookie required\n                    // authentication authCookie required\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Search and list any users by text query\n         * @summary Search All Users\n         * @param {string} [search] Searches by &#x60;displayName&#x60;. Will return empty array if search query is empty or missing.\n         * @param {string} [developerType] Active user by developer type, none for normal users and internal for moderators\n         * @param {number} [n] The number of objects to return.\n         * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        searchUsers: function (search, developerType, n, offset, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    localVarPath = \"/users\";\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication apiKeyCookie required\n                    // authentication authCookie required\n                    if (search !== undefined) {\n                        localVarQueryParameter['search'] = search;\n                    }\n                    if (developerType !== undefined) {\n                        localVarQueryParameter['developerType'] = developerType;\n                    }\n                    if (n !== undefined) {\n                        localVarQueryParameter['n'] = n;\n                    }\n                    if (offset !== undefined) {\n                        localVarQueryParameter['offset'] = offset;\n                    }\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Update a users information such as the email and birthday.\n         * @summary Update User Info\n         * @param {string} userId\n         * @param {UpdateUserRequest} [updateUserRequest]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateUser: function (userId, updateUserRequest, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'userId' is not null or undefined\n                    common_1.assertParamExists('updateUser', 'userId', userId);\n                    localVarPath = \"/users/{userId}\"\n                        .replace(\"{\" + \"userId\" + \"}\", encodeURIComponent(String(userId)));\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'PUT' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication apiKeyCookie required\n                    // authentication authCookie required\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    localVarRequestOptions.data = common_1.serializeDataIfNeeded(updateUserRequest, localVarRequestOptions, configuration);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n    };\n};\n/**\n * UsersApi - functional programming interface\n * @export\n */\nexports.UsersApiFp = function (configuration) {\n    var localVarAxiosParamCreator = exports.UsersApiAxiosParamCreator(configuration);\n    return {\n        /**\n         * Get public user information about a specific user using their ID.\n         * @summary Get User by ID\n         * @param {string} userId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getUser: function (userId, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.getUser(userId, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n        /**\n         * Get public user information about a specific user using their name.\n         * @summary Get User by Username\n         * @param {string} username\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getUserByName: function (username, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.getUserByName(username, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n        /**\n         * Search and list any users by text query\n         * @summary Search All Users\n         * @param {string} [search] Searches by &#x60;displayName&#x60;. Will return empty array if search query is empty or missing.\n         * @param {string} [developerType] Active user by developer type, none for normal users and internal for moderators\n         * @param {number} [n] The number of objects to return.\n         * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        searchUsers: function (search, developerType, n, offset, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.searchUsers(search, developerType, n, offset, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n        /**\n         * Update a users information such as the email and birthday.\n         * @summary Update User Info\n         * @param {string} userId\n         * @param {UpdateUserRequest} [updateUserRequest]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateUser: function (userId, updateUserRequest, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.updateUser(userId, updateUserRequest, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n    };\n};\n/**\n * UsersApi - factory interface\n * @export\n */\nexports.UsersApiFactory = function (configuration, basePath, axios) {\n    var localVarFp = exports.UsersApiFp(configuration);\n    return {\n        /**\n         * Get public user information about a specific user using their ID.\n         * @summary Get User by ID\n         * @param {string} userId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getUser: function (userId, options) {\n            return localVarFp.getUser(userId, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Get public user information about a specific user using their name.\n         * @summary Get User by Username\n         * @param {string} username\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getUserByName: function (username, options) {\n            return localVarFp.getUserByName(username, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Search and list any users by text query\n         * @summary Search All Users\n         * @param {string} [search] Searches by &#x60;displayName&#x60;. Will return empty array if search query is empty or missing.\n         * @param {string} [developerType] Active user by developer type, none for normal users and internal for moderators\n         * @param {number} [n] The number of objects to return.\n         * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        searchUsers: function (search, developerType, n, offset, options) {\n            return localVarFp.searchUsers(search, developerType, n, offset, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Update a users information such as the email and birthday.\n         * @summary Update User Info\n         * @param {string} userId\n         * @param {UpdateUserRequest} [updateUserRequest]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateUser: function (userId, updateUserRequest, options) {\n            return localVarFp.updateUser(userId, updateUserRequest, options).then(function (request) { return request(axios, basePath); });\n        },\n    };\n};\n/**\n * UsersApi - object-oriented interface\n * @export\n * @class UsersApi\n * @extends {BaseAPI}\n */\nvar UsersApi = /** @class */ (function (_super) {\n    __extends(UsersApi, _super);\n    function UsersApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Get public user information about a specific user using their ID.\n     * @summary Get User by ID\n     * @param {string} userId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof UsersApi\n     */\n    UsersApi.prototype.getUser = function (userId, options) {\n        var _this = this;\n        return exports.UsersApiFp(this.configuration).getUser(userId, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Get public user information about a specific user using their name.\n     * @summary Get User by Username\n     * @param {string} username\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof UsersApi\n     */\n    UsersApi.prototype.getUserByName = function (username, options) {\n        var _this = this;\n        return exports.UsersApiFp(this.configuration).getUserByName(username, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Search and list any users by text query\n     * @summary Search All Users\n     * @param {string} [search] Searches by &#x60;displayName&#x60;. Will return empty array if search query is empty or missing.\n     * @param {string} [developerType] Active user by developer type, none for normal users and internal for moderators\n     * @param {number} [n] The number of objects to return.\n     * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof UsersApi\n     */\n    UsersApi.prototype.searchUsers = function (search, developerType, n, offset, options) {\n        var _this = this;\n        return exports.UsersApiFp(this.configuration).searchUsers(search, developerType, n, offset, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Update a users information such as the email and birthday.\n     * @summary Update User Info\n     * @param {string} userId\n     * @param {UpdateUserRequest} [updateUserRequest]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof UsersApi\n     */\n    UsersApi.prototype.updateUser = function (userId, updateUserRequest, options) {\n        var _this = this;\n        return exports.UsersApiFp(this.configuration).updateUser(userId, updateUserRequest, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    return UsersApi;\n}(base_1.BaseAPI));\nexports.UsersApi = UsersApi;\n/**\n * WorldsApi - axios parameter creator\n * @export\n */\nexports.WorldsApiAxiosParamCreator = function (configuration) {\n    var _this = this;\n    return {\n        /**\n         * Create a new world. This endpoint requires `assetUrl` to be a valid File object with `.vrcw` file extension, and `imageUrl` to be a valid File object with an image file extension.\n         * @summary Create World\n         * @param {CreateWorldRequest} [createWorldRequest]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createWorld: function (createWorldRequest, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    localVarPath = \"/worlds\";\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    localVarRequestOptions.data = common_1.serializeDataIfNeeded(createWorldRequest, localVarRequestOptions, configuration);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Delete a world. Notice a world is never fully \\\"deleted\\\", only its ReleaseStatus is set to \\\"hidden\\\" and the linked Files are deleted. The WorldID is permanently reserved.\n         * @summary Delete World\n         * @param {string} worldId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteWorld: function (worldId, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'worldId' is not null or undefined\n                    common_1.assertParamExists('deleteWorld', 'worldId', worldId);\n                    localVarPath = \"/worlds/{worldId}\"\n                        .replace(\"{\" + \"worldId\" + \"}\", encodeURIComponent(String(worldId)));\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'DELETE' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication apiKeyCookie required\n                    // authentication authCookie required\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Search and list currently Active worlds by query filters.\n         * @summary List Active Worlds\n         * @param {boolean} [featured] Filters on featured results.\n         * @param {'popularity' | 'heat' | 'trust' | 'shuffle' | 'random' | 'favorites' | 'reportScore' | 'reportCount' | 'publicationDate' | 'labsPublicationDate' | 'created' | '_created_at' | 'updated' | '_updated_at' | 'order' | 'relevance' | 'magic' | 'name'} [sort]\n         * @param {number} [n] The number of objects to return.\n         * @param {'ascending' | 'descending'} [order]\n         * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n         * @param {string} [search] Filters by world name.\n         * @param {string} [tag] Tags to include (comma-separated). Any of the tags needs to be present.\n         * @param {string} [notag] Tags to exclude (comma-separated).\n         * @param {'public' | 'private' | 'hidden' | 'all'} [releaseStatus] Filter by ReleaseStatus.\n         * @param {string} [maxUnityVersion] The maximum Unity version supported by the asset.\n         * @param {string} [minUnityVersion] The minimum Unity version supported by the asset.\n         * @param {string} [platform] The platform the asset supports.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getActiveWorlds: function (featured, sort, n, order, offset, search, tag, notag, releaseStatus, maxUnityVersion, minUnityVersion, platform, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    localVarPath = \"/worlds/active\";\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication apiKeyCookie required\n                    // authentication authCookie required\n                    if (featured !== undefined) {\n                        localVarQueryParameter['featured'] = featured;\n                    }\n                    if (sort !== undefined) {\n                        localVarQueryParameter['sort'] = sort;\n                    }\n                    if (n !== undefined) {\n                        localVarQueryParameter['n'] = n;\n                    }\n                    if (order !== undefined) {\n                        localVarQueryParameter['order'] = order;\n                    }\n                    if (offset !== undefined) {\n                        localVarQueryParameter['offset'] = offset;\n                    }\n                    if (search !== undefined) {\n                        localVarQueryParameter['search'] = search;\n                    }\n                    if (tag !== undefined) {\n                        localVarQueryParameter['tag'] = tag;\n                    }\n                    if (notag !== undefined) {\n                        localVarQueryParameter['notag'] = notag;\n                    }\n                    if (releaseStatus !== undefined) {\n                        localVarQueryParameter['releaseStatus'] = releaseStatus;\n                    }\n                    if (maxUnityVersion !== undefined) {\n                        localVarQueryParameter['maxUnityVersion'] = maxUnityVersion;\n                    }\n                    if (minUnityVersion !== undefined) {\n                        localVarQueryParameter['minUnityVersion'] = minUnityVersion;\n                    }\n                    if (platform !== undefined) {\n                        localVarQueryParameter['platform'] = platform;\n                    }\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Search and list favorited worlds by query filters.\n         * @summary List Favorited Worlds\n         * @param {boolean} [featured] Filters on featured results.\n         * @param {'popularity' | 'heat' | 'trust' | 'shuffle' | 'random' | 'favorites' | 'reportScore' | 'reportCount' | 'publicationDate' | 'labsPublicationDate' | 'created' | '_created_at' | 'updated' | '_updated_at' | 'order' | 'relevance' | 'magic' | 'name'} [sort]\n         * @param {number} [n] The number of objects to return.\n         * @param {'ascending' | 'descending'} [order]\n         * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n         * @param {string} [search] Filters by world name.\n         * @param {string} [tag] Tags to include (comma-separated). Any of the tags needs to be present.\n         * @param {string} [notag] Tags to exclude (comma-separated).\n         * @param {'public' | 'private' | 'hidden' | 'all'} [releaseStatus] Filter by ReleaseStatus.\n         * @param {string} [maxUnityVersion] The maximum Unity version supported by the asset.\n         * @param {string} [minUnityVersion] The minimum Unity version supported by the asset.\n         * @param {string} [platform] The platform the asset supports.\n         * @param {string} [userId] Target user to see information on, admin-only.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getFavoritedWorlds: function (featured, sort, n, order, offset, search, tag, notag, releaseStatus, maxUnityVersion, minUnityVersion, platform, userId, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    localVarPath = \"/worlds/favorites\";\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication apiKeyCookie required\n                    // authentication authCookie required\n                    if (featured !== undefined) {\n                        localVarQueryParameter['featured'] = featured;\n                    }\n                    if (sort !== undefined) {\n                        localVarQueryParameter['sort'] = sort;\n                    }\n                    if (n !== undefined) {\n                        localVarQueryParameter['n'] = n;\n                    }\n                    if (order !== undefined) {\n                        localVarQueryParameter['order'] = order;\n                    }\n                    if (offset !== undefined) {\n                        localVarQueryParameter['offset'] = offset;\n                    }\n                    if (search !== undefined) {\n                        localVarQueryParameter['search'] = search;\n                    }\n                    if (tag !== undefined) {\n                        localVarQueryParameter['tag'] = tag;\n                    }\n                    if (notag !== undefined) {\n                        localVarQueryParameter['notag'] = notag;\n                    }\n                    if (releaseStatus !== undefined) {\n                        localVarQueryParameter['releaseStatus'] = releaseStatus;\n                    }\n                    if (maxUnityVersion !== undefined) {\n                        localVarQueryParameter['maxUnityVersion'] = maxUnityVersion;\n                    }\n                    if (minUnityVersion !== undefined) {\n                        localVarQueryParameter['minUnityVersion'] = minUnityVersion;\n                    }\n                    if (platform !== undefined) {\n                        localVarQueryParameter['platform'] = platform;\n                    }\n                    if (userId !== undefined) {\n                        localVarQueryParameter['userId'] = userId;\n                    }\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Search and list recently visited worlds by query filters.\n         * @summary List Recent Worlds\n         * @param {boolean} [featured] Filters on featured results.\n         * @param {'popularity' | 'heat' | 'trust' | 'shuffle' | 'random' | 'favorites' | 'reportScore' | 'reportCount' | 'publicationDate' | 'labsPublicationDate' | 'created' | '_created_at' | 'updated' | '_updated_at' | 'order' | 'relevance' | 'magic' | 'name'} [sort]\n         * @param {number} [n] The number of objects to return.\n         * @param {'ascending' | 'descending'} [order]\n         * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n         * @param {string} [search] Filters by world name.\n         * @param {string} [tag] Tags to include (comma-separated). Any of the tags needs to be present.\n         * @param {string} [notag] Tags to exclude (comma-separated).\n         * @param {'public' | 'private' | 'hidden' | 'all'} [releaseStatus] Filter by ReleaseStatus.\n         * @param {string} [maxUnityVersion] The maximum Unity version supported by the asset.\n         * @param {string} [minUnityVersion] The minimum Unity version supported by the asset.\n         * @param {string} [platform] The platform the asset supports.\n         * @param {string} [userId] Target user to see information on, admin-only.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getRecentWorlds: function (featured, sort, n, order, offset, search, tag, notag, releaseStatus, maxUnityVersion, minUnityVersion, platform, userId, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    localVarPath = \"/worlds/recent\";\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication apiKeyCookie required\n                    // authentication authCookie required\n                    if (featured !== undefined) {\n                        localVarQueryParameter['featured'] = featured;\n                    }\n                    if (sort !== undefined) {\n                        localVarQueryParameter['sort'] = sort;\n                    }\n                    if (n !== undefined) {\n                        localVarQueryParameter['n'] = n;\n                    }\n                    if (order !== undefined) {\n                        localVarQueryParameter['order'] = order;\n                    }\n                    if (offset !== undefined) {\n                        localVarQueryParameter['offset'] = offset;\n                    }\n                    if (search !== undefined) {\n                        localVarQueryParameter['search'] = search;\n                    }\n                    if (tag !== undefined) {\n                        localVarQueryParameter['tag'] = tag;\n                    }\n                    if (notag !== undefined) {\n                        localVarQueryParameter['notag'] = notag;\n                    }\n                    if (releaseStatus !== undefined) {\n                        localVarQueryParameter['releaseStatus'] = releaseStatus;\n                    }\n                    if (maxUnityVersion !== undefined) {\n                        localVarQueryParameter['maxUnityVersion'] = maxUnityVersion;\n                    }\n                    if (minUnityVersion !== undefined) {\n                        localVarQueryParameter['minUnityVersion'] = minUnityVersion;\n                    }\n                    if (platform !== undefined) {\n                        localVarQueryParameter['platform'] = platform;\n                    }\n                    if (userId !== undefined) {\n                        localVarQueryParameter['userId'] = userId;\n                    }\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Get information about a specific World.\n         * @summary Get World by ID\n         * @param {string} worldId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getWorld: function (worldId, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'worldId' is not null or undefined\n                    common_1.assertParamExists('getWorld', 'worldId', worldId);\n                    localVarPath = \"/worlds/{worldId}\"\n                        .replace(\"{\" + \"worldId\" + \"}\", encodeURIComponent(String(worldId)));\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication apiKeyCookie required\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Returns a worlds instance.\n         * @summary Get World Instance\n         * @param {string} worldId\n         * @param {string} instanceId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getWorldInstance: function (worldId, instanceId, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'worldId' is not null or undefined\n                    common_1.assertParamExists('getWorldInstance', 'worldId', worldId);\n                    // verify required parameter 'instanceId' is not null or undefined\n                    common_1.assertParamExists('getWorldInstance', 'instanceId', instanceId);\n                    localVarPath = \"/worlds/{worldId}/{instanceId}\"\n                        .replace(\"{\" + \"worldId\" + \"}\", encodeURIComponent(String(worldId)))\n                        .replace(\"{\" + \"instanceId\" + \"}\", encodeURIComponent(String(instanceId)));\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication apiKeyCookie required\n                    // authentication authCookie required\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Return a worlds custom metadata. This is currently believed to be unused. Metadata can be set with `updateWorld` and can be any arbitrary object.\n         * @summary Get World Metadata\n         * @param {string} worldId\n         * @param {*} [options] Override http request option.\n         * @deprecated\n         * @throws {RequiredError}\n         */\n        getWorldMetadata: function (worldId, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'worldId' is not null or undefined\n                    common_1.assertParamExists('getWorldMetadata', 'worldId', worldId);\n                    localVarPath = \"/worlds/{worldId}/metadata\"\n                        .replace(\"{\" + \"worldId\" + \"}\", encodeURIComponent(String(worldId)));\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication apiKeyCookie required\n                    // authentication authCookie required\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Returns a worlds publish status.\n         * @summary Get World Publish Status\n         * @param {string} worldId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getWorldPublishStatus: function (worldId, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'worldId' is not null or undefined\n                    common_1.assertParamExists('getWorldPublishStatus', 'worldId', worldId);\n                    localVarPath = \"/worlds/{worldId}/publish\"\n                        .replace(\"{\" + \"worldId\" + \"}\", encodeURIComponent(String(worldId)));\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication apiKeyCookie required\n                    // authentication authCookie required\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Publish a world. You can only publish one world per week.\n         * @summary Publish World\n         * @param {string} worldId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        publishWorld: function (worldId, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'worldId' is not null or undefined\n                    common_1.assertParamExists('publishWorld', 'worldId', worldId);\n                    localVarPath = \"/worlds/{worldId}/publish\"\n                        .replace(\"{\" + \"worldId\" + \"}\", encodeURIComponent(String(worldId)));\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'PUT' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication apiKeyCookie required\n                    // authentication authCookie required\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Search and list any worlds by query filters.\n         * @summary Search All Worlds\n         * @param {boolean} [featured] Filters on featured results.\n         * @param {'popularity' | 'heat' | 'trust' | 'shuffle' | 'random' | 'favorites' | 'reportScore' | 'reportCount' | 'publicationDate' | 'labsPublicationDate' | 'created' | '_created_at' | 'updated' | '_updated_at' | 'order' | 'relevance' | 'magic' | 'name'} [sort]\n         * @param {'me'} [user] Set to &#x60;me&#x60; for searching own worlds.\n         * @param {string} [userId] Filter by UserID.\n         * @param {number} [n] The number of objects to return.\n         * @param {'ascending' | 'descending'} [order]\n         * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n         * @param {string} [search] Filters by world name.\n         * @param {string} [tag] Tags to include (comma-separated). Any of the tags needs to be present.\n         * @param {string} [notag] Tags to exclude (comma-separated).\n         * @param {'public' | 'private' | 'hidden' | 'all'} [releaseStatus] Filter by ReleaseStatus.\n         * @param {string} [maxUnityVersion] The maximum Unity version supported by the asset.\n         * @param {string} [minUnityVersion] The minimum Unity version supported by the asset.\n         * @param {string} [platform] The platform the asset supports.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        searchWorlds: function (featured, sort, user, userId, n, order, offset, search, tag, notag, releaseStatus, maxUnityVersion, minUnityVersion, platform, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    localVarPath = \"/worlds\";\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication apiKeyCookie required\n                    // authentication authCookie required\n                    if (featured !== undefined) {\n                        localVarQueryParameter['featured'] = featured;\n                    }\n                    if (sort !== undefined) {\n                        localVarQueryParameter['sort'] = sort;\n                    }\n                    if (user !== undefined) {\n                        localVarQueryParameter['user'] = user;\n                    }\n                    if (userId !== undefined) {\n                        localVarQueryParameter['userId'] = userId;\n                    }\n                    if (n !== undefined) {\n                        localVarQueryParameter['n'] = n;\n                    }\n                    if (order !== undefined) {\n                        localVarQueryParameter['order'] = order;\n                    }\n                    if (offset !== undefined) {\n                        localVarQueryParameter['offset'] = offset;\n                    }\n                    if (search !== undefined) {\n                        localVarQueryParameter['search'] = search;\n                    }\n                    if (tag !== undefined) {\n                        localVarQueryParameter['tag'] = tag;\n                    }\n                    if (notag !== undefined) {\n                        localVarQueryParameter['notag'] = notag;\n                    }\n                    if (releaseStatus !== undefined) {\n                        localVarQueryParameter['releaseStatus'] = releaseStatus;\n                    }\n                    if (maxUnityVersion !== undefined) {\n                        localVarQueryParameter['maxUnityVersion'] = maxUnityVersion;\n                    }\n                    if (minUnityVersion !== undefined) {\n                        localVarQueryParameter['minUnityVersion'] = minUnityVersion;\n                    }\n                    if (platform !== undefined) {\n                        localVarQueryParameter['platform'] = platform;\n                    }\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Unpublish a world.\n         * @summary Unpublish World\n         * @param {string} worldId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        unpublishWorld: function (worldId, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'worldId' is not null or undefined\n                    common_1.assertParamExists('unpublishWorld', 'worldId', worldId);\n                    localVarPath = \"/worlds/{worldId}/publish\"\n                        .replace(\"{\" + \"worldId\" + \"}\", encodeURIComponent(String(worldId)));\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'DELETE' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication apiKeyCookie required\n                    // authentication authCookie required\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n        /**\n         * Update information about a specific World.\n         * @summary Update World\n         * @param {string} worldId\n         * @param {UpdateWorldRequest} [updateWorldRequest]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateWorld: function (worldId, updateWorldRequest, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, headersFromBaseOptions;\n                return __generator(this, function (_a) {\n                    // verify required parameter 'worldId' is not null or undefined\n                    common_1.assertParamExists('updateWorld', 'worldId', worldId);\n                    localVarPath = \"/worlds/{worldId}\"\n                        .replace(\"{\" + \"worldId\" + \"}\", encodeURIComponent(String(worldId)));\n                    localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n                    if (configuration) {\n                        baseOptions = configuration.baseOptions;\n                    }\n                    localVarRequestOptions = __assign(__assign({ method: 'PUT' }, baseOptions), options);\n                    localVarHeaderParameter = {};\n                    localVarQueryParameter = {};\n                    // authentication apiKeyCookie required\n                    // authentication authCookie required\n                    localVarHeaderParameter['Content-Type'] = 'application/json';\n                    common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n                    headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                    localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                    localVarRequestOptions.data = common_1.serializeDataIfNeeded(updateWorldRequest, localVarRequestOptions, configuration);\n                    return [2 /*return*/, {\n                            url: common_1.toPathString(localVarUrlObj),\n                            options: localVarRequestOptions,\n                        }];\n                });\n            });\n        },\n    };\n};\n/**\n * WorldsApi - functional programming interface\n * @export\n */\nexports.WorldsApiFp = function (configuration) {\n    var localVarAxiosParamCreator = exports.WorldsApiAxiosParamCreator(configuration);\n    return {\n        /**\n         * Create a new world. This endpoint requires `assetUrl` to be a valid File object with `.vrcw` file extension, and `imageUrl` to be a valid File object with an image file extension.\n         * @summary Create World\n         * @param {CreateWorldRequest} [createWorldRequest]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createWorld: function (createWorldRequest, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.createWorld(createWorldRequest, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n        /**\n         * Delete a world. Notice a world is never fully \\\"deleted\\\", only its ReleaseStatus is set to \\\"hidden\\\" and the linked Files are deleted. The WorldID is permanently reserved.\n         * @summary Delete World\n         * @param {string} worldId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteWorld: function (worldId, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.deleteWorld(worldId, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n        /**\n         * Search and list currently Active worlds by query filters.\n         * @summary List Active Worlds\n         * @param {boolean} [featured] Filters on featured results.\n         * @param {'popularity' | 'heat' | 'trust' | 'shuffle' | 'random' | 'favorites' | 'reportScore' | 'reportCount' | 'publicationDate' | 'labsPublicationDate' | 'created' | '_created_at' | 'updated' | '_updated_at' | 'order' | 'relevance' | 'magic' | 'name'} [sort]\n         * @param {number} [n] The number of objects to return.\n         * @param {'ascending' | 'descending'} [order]\n         * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n         * @param {string} [search] Filters by world name.\n         * @param {string} [tag] Tags to include (comma-separated). Any of the tags needs to be present.\n         * @param {string} [notag] Tags to exclude (comma-separated).\n         * @param {'public' | 'private' | 'hidden' | 'all'} [releaseStatus] Filter by ReleaseStatus.\n         * @param {string} [maxUnityVersion] The maximum Unity version supported by the asset.\n         * @param {string} [minUnityVersion] The minimum Unity version supported by the asset.\n         * @param {string} [platform] The platform the asset supports.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getActiveWorlds: function (featured, sort, n, order, offset, search, tag, notag, releaseStatus, maxUnityVersion, minUnityVersion, platform, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.getActiveWorlds(featured, sort, n, order, offset, search, tag, notag, releaseStatus, maxUnityVersion, minUnityVersion, platform, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n        /**\n         * Search and list favorited worlds by query filters.\n         * @summary List Favorited Worlds\n         * @param {boolean} [featured] Filters on featured results.\n         * @param {'popularity' | 'heat' | 'trust' | 'shuffle' | 'random' | 'favorites' | 'reportScore' | 'reportCount' | 'publicationDate' | 'labsPublicationDate' | 'created' | '_created_at' | 'updated' | '_updated_at' | 'order' | 'relevance' | 'magic' | 'name'} [sort]\n         * @param {number} [n] The number of objects to return.\n         * @param {'ascending' | 'descending'} [order]\n         * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n         * @param {string} [search] Filters by world name.\n         * @param {string} [tag] Tags to include (comma-separated). Any of the tags needs to be present.\n         * @param {string} [notag] Tags to exclude (comma-separated).\n         * @param {'public' | 'private' | 'hidden' | 'all'} [releaseStatus] Filter by ReleaseStatus.\n         * @param {string} [maxUnityVersion] The maximum Unity version supported by the asset.\n         * @param {string} [minUnityVersion] The minimum Unity version supported by the asset.\n         * @param {string} [platform] The platform the asset supports.\n         * @param {string} [userId] Target user to see information on, admin-only.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getFavoritedWorlds: function (featured, sort, n, order, offset, search, tag, notag, releaseStatus, maxUnityVersion, minUnityVersion, platform, userId, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.getFavoritedWorlds(featured, sort, n, order, offset, search, tag, notag, releaseStatus, maxUnityVersion, minUnityVersion, platform, userId, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n        /**\n         * Search and list recently visited worlds by query filters.\n         * @summary List Recent Worlds\n         * @param {boolean} [featured] Filters on featured results.\n         * @param {'popularity' | 'heat' | 'trust' | 'shuffle' | 'random' | 'favorites' | 'reportScore' | 'reportCount' | 'publicationDate' | 'labsPublicationDate' | 'created' | '_created_at' | 'updated' | '_updated_at' | 'order' | 'relevance' | 'magic' | 'name'} [sort]\n         * @param {number} [n] The number of objects to return.\n         * @param {'ascending' | 'descending'} [order]\n         * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n         * @param {string} [search] Filters by world name.\n         * @param {string} [tag] Tags to include (comma-separated). Any of the tags needs to be present.\n         * @param {string} [notag] Tags to exclude (comma-separated).\n         * @param {'public' | 'private' | 'hidden' | 'all'} [releaseStatus] Filter by ReleaseStatus.\n         * @param {string} [maxUnityVersion] The maximum Unity version supported by the asset.\n         * @param {string} [minUnityVersion] The minimum Unity version supported by the asset.\n         * @param {string} [platform] The platform the asset supports.\n         * @param {string} [userId] Target user to see information on, admin-only.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getRecentWorlds: function (featured, sort, n, order, offset, search, tag, notag, releaseStatus, maxUnityVersion, minUnityVersion, platform, userId, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.getRecentWorlds(featured, sort, n, order, offset, search, tag, notag, releaseStatus, maxUnityVersion, minUnityVersion, platform, userId, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n        /**\n         * Get information about a specific World.\n         * @summary Get World by ID\n         * @param {string} worldId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getWorld: function (worldId, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.getWorld(worldId, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n        /**\n         * Returns a worlds instance.\n         * @summary Get World Instance\n         * @param {string} worldId\n         * @param {string} instanceId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getWorldInstance: function (worldId, instanceId, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.getWorldInstance(worldId, instanceId, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n        /**\n         * Return a worlds custom metadata. This is currently believed to be unused. Metadata can be set with `updateWorld` and can be any arbitrary object.\n         * @summary Get World Metadata\n         * @param {string} worldId\n         * @param {*} [options] Override http request option.\n         * @deprecated\n         * @throws {RequiredError}\n         */\n        getWorldMetadata: function (worldId, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.getWorldMetadata(worldId, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n        /**\n         * Returns a worlds publish status.\n         * @summary Get World Publish Status\n         * @param {string} worldId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getWorldPublishStatus: function (worldId, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.getWorldPublishStatus(worldId, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n        /**\n         * Publish a world. You can only publish one world per week.\n         * @summary Publish World\n         * @param {string} worldId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        publishWorld: function (worldId, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.publishWorld(worldId, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n        /**\n         * Search and list any worlds by query filters.\n         * @summary Search All Worlds\n         * @param {boolean} [featured] Filters on featured results.\n         * @param {'popularity' | 'heat' | 'trust' | 'shuffle' | 'random' | 'favorites' | 'reportScore' | 'reportCount' | 'publicationDate' | 'labsPublicationDate' | 'created' | '_created_at' | 'updated' | '_updated_at' | 'order' | 'relevance' | 'magic' | 'name'} [sort]\n         * @param {'me'} [user] Set to &#x60;me&#x60; for searching own worlds.\n         * @param {string} [userId] Filter by UserID.\n         * @param {number} [n] The number of objects to return.\n         * @param {'ascending' | 'descending'} [order]\n         * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n         * @param {string} [search] Filters by world name.\n         * @param {string} [tag] Tags to include (comma-separated). Any of the tags needs to be present.\n         * @param {string} [notag] Tags to exclude (comma-separated).\n         * @param {'public' | 'private' | 'hidden' | 'all'} [releaseStatus] Filter by ReleaseStatus.\n         * @param {string} [maxUnityVersion] The maximum Unity version supported by the asset.\n         * @param {string} [minUnityVersion] The minimum Unity version supported by the asset.\n         * @param {string} [platform] The platform the asset supports.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        searchWorlds: function (featured, sort, user, userId, n, order, offset, search, tag, notag, releaseStatus, maxUnityVersion, minUnityVersion, platform, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.searchWorlds(featured, sort, user, userId, n, order, offset, search, tag, notag, releaseStatus, maxUnityVersion, minUnityVersion, platform, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n        /**\n         * Unpublish a world.\n         * @summary Unpublish World\n         * @param {string} worldId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        unpublishWorld: function (worldId, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.unpublishWorld(worldId, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n        /**\n         * Update information about a specific World.\n         * @summary Update World\n         * @param {string} worldId\n         * @param {UpdateWorldRequest} [updateWorldRequest]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateWorld: function (worldId, updateWorldRequest, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, localVarAxiosParamCreator.updateWorld(worldId, updateWorldRequest, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration)];\n                    }\n                });\n            });\n        },\n    };\n};\n/**\n * WorldsApi - factory interface\n * @export\n */\nexports.WorldsApiFactory = function (configuration, basePath, axios) {\n    var localVarFp = exports.WorldsApiFp(configuration);\n    return {\n        /**\n         * Create a new world. This endpoint requires `assetUrl` to be a valid File object with `.vrcw` file extension, and `imageUrl` to be a valid File object with an image file extension.\n         * @summary Create World\n         * @param {CreateWorldRequest} [createWorldRequest]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createWorld: function (createWorldRequest, options) {\n            return localVarFp.createWorld(createWorldRequest, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Delete a world. Notice a world is never fully \\\"deleted\\\", only its ReleaseStatus is set to \\\"hidden\\\" and the linked Files are deleted. The WorldID is permanently reserved.\n         * @summary Delete World\n         * @param {string} worldId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteWorld: function (worldId, options) {\n            return localVarFp.deleteWorld(worldId, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Search and list currently Active worlds by query filters.\n         * @summary List Active Worlds\n         * @param {boolean} [featured] Filters on featured results.\n         * @param {'popularity' | 'heat' | 'trust' | 'shuffle' | 'random' | 'favorites' | 'reportScore' | 'reportCount' | 'publicationDate' | 'labsPublicationDate' | 'created' | '_created_at' | 'updated' | '_updated_at' | 'order' | 'relevance' | 'magic' | 'name'} [sort]\n         * @param {number} [n] The number of objects to return.\n         * @param {'ascending' | 'descending'} [order]\n         * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n         * @param {string} [search] Filters by world name.\n         * @param {string} [tag] Tags to include (comma-separated). Any of the tags needs to be present.\n         * @param {string} [notag] Tags to exclude (comma-separated).\n         * @param {'public' | 'private' | 'hidden' | 'all'} [releaseStatus] Filter by ReleaseStatus.\n         * @param {string} [maxUnityVersion] The maximum Unity version supported by the asset.\n         * @param {string} [minUnityVersion] The minimum Unity version supported by the asset.\n         * @param {string} [platform] The platform the asset supports.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getActiveWorlds: function (featured, sort, n, order, offset, search, tag, notag, releaseStatus, maxUnityVersion, minUnityVersion, platform, options) {\n            return localVarFp.getActiveWorlds(featured, sort, n, order, offset, search, tag, notag, releaseStatus, maxUnityVersion, minUnityVersion, platform, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Search and list favorited worlds by query filters.\n         * @summary List Favorited Worlds\n         * @param {boolean} [featured] Filters on featured results.\n         * @param {'popularity' | 'heat' | 'trust' | 'shuffle' | 'random' | 'favorites' | 'reportScore' | 'reportCount' | 'publicationDate' | 'labsPublicationDate' | 'created' | '_created_at' | 'updated' | '_updated_at' | 'order' | 'relevance' | 'magic' | 'name'} [sort]\n         * @param {number} [n] The number of objects to return.\n         * @param {'ascending' | 'descending'} [order]\n         * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n         * @param {string} [search] Filters by world name.\n         * @param {string} [tag] Tags to include (comma-separated). Any of the tags needs to be present.\n         * @param {string} [notag] Tags to exclude (comma-separated).\n         * @param {'public' | 'private' | 'hidden' | 'all'} [releaseStatus] Filter by ReleaseStatus.\n         * @param {string} [maxUnityVersion] The maximum Unity version supported by the asset.\n         * @param {string} [minUnityVersion] The minimum Unity version supported by the asset.\n         * @param {string} [platform] The platform the asset supports.\n         * @param {string} [userId] Target user to see information on, admin-only.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getFavoritedWorlds: function (featured, sort, n, order, offset, search, tag, notag, releaseStatus, maxUnityVersion, minUnityVersion, platform, userId, options) {\n            return localVarFp.getFavoritedWorlds(featured, sort, n, order, offset, search, tag, notag, releaseStatus, maxUnityVersion, minUnityVersion, platform, userId, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Search and list recently visited worlds by query filters.\n         * @summary List Recent Worlds\n         * @param {boolean} [featured] Filters on featured results.\n         * @param {'popularity' | 'heat' | 'trust' | 'shuffle' | 'random' | 'favorites' | 'reportScore' | 'reportCount' | 'publicationDate' | 'labsPublicationDate' | 'created' | '_created_at' | 'updated' | '_updated_at' | 'order' | 'relevance' | 'magic' | 'name'} [sort]\n         * @param {number} [n] The number of objects to return.\n         * @param {'ascending' | 'descending'} [order]\n         * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n         * @param {string} [search] Filters by world name.\n         * @param {string} [tag] Tags to include (comma-separated). Any of the tags needs to be present.\n         * @param {string} [notag] Tags to exclude (comma-separated).\n         * @param {'public' | 'private' | 'hidden' | 'all'} [releaseStatus] Filter by ReleaseStatus.\n         * @param {string} [maxUnityVersion] The maximum Unity version supported by the asset.\n         * @param {string} [minUnityVersion] The minimum Unity version supported by the asset.\n         * @param {string} [platform] The platform the asset supports.\n         * @param {string} [userId] Target user to see information on, admin-only.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getRecentWorlds: function (featured, sort, n, order, offset, search, tag, notag, releaseStatus, maxUnityVersion, minUnityVersion, platform, userId, options) {\n            return localVarFp.getRecentWorlds(featured, sort, n, order, offset, search, tag, notag, releaseStatus, maxUnityVersion, minUnityVersion, platform, userId, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Get information about a specific World.\n         * @summary Get World by ID\n         * @param {string} worldId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getWorld: function (worldId, options) {\n            return localVarFp.getWorld(worldId, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Returns a worlds instance.\n         * @summary Get World Instance\n         * @param {string} worldId\n         * @param {string} instanceId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getWorldInstance: function (worldId, instanceId, options) {\n            return localVarFp.getWorldInstance(worldId, instanceId, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Return a worlds custom metadata. This is currently believed to be unused. Metadata can be set with `updateWorld` and can be any arbitrary object.\n         * @summary Get World Metadata\n         * @param {string} worldId\n         * @param {*} [options] Override http request option.\n         * @deprecated\n         * @throws {RequiredError}\n         */\n        getWorldMetadata: function (worldId, options) {\n            return localVarFp.getWorldMetadata(worldId, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Returns a worlds publish status.\n         * @summary Get World Publish Status\n         * @param {string} worldId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getWorldPublishStatus: function (worldId, options) {\n            return localVarFp.getWorldPublishStatus(worldId, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Publish a world. You can only publish one world per week.\n         * @summary Publish World\n         * @param {string} worldId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        publishWorld: function (worldId, options) {\n            return localVarFp.publishWorld(worldId, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Search and list any worlds by query filters.\n         * @summary Search All Worlds\n         * @param {boolean} [featured] Filters on featured results.\n         * @param {'popularity' | 'heat' | 'trust' | 'shuffle' | 'random' | 'favorites' | 'reportScore' | 'reportCount' | 'publicationDate' | 'labsPublicationDate' | 'created' | '_created_at' | 'updated' | '_updated_at' | 'order' | 'relevance' | 'magic' | 'name'} [sort]\n         * @param {'me'} [user] Set to &#x60;me&#x60; for searching own worlds.\n         * @param {string} [userId] Filter by UserID.\n         * @param {number} [n] The number of objects to return.\n         * @param {'ascending' | 'descending'} [order]\n         * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n         * @param {string} [search] Filters by world name.\n         * @param {string} [tag] Tags to include (comma-separated). Any of the tags needs to be present.\n         * @param {string} [notag] Tags to exclude (comma-separated).\n         * @param {'public' | 'private' | 'hidden' | 'all'} [releaseStatus] Filter by ReleaseStatus.\n         * @param {string} [maxUnityVersion] The maximum Unity version supported by the asset.\n         * @param {string} [minUnityVersion] The minimum Unity version supported by the asset.\n         * @param {string} [platform] The platform the asset supports.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        searchWorlds: function (featured, sort, user, userId, n, order, offset, search, tag, notag, releaseStatus, maxUnityVersion, minUnityVersion, platform, options) {\n            return localVarFp.searchWorlds(featured, sort, user, userId, n, order, offset, search, tag, notag, releaseStatus, maxUnityVersion, minUnityVersion, platform, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Unpublish a world.\n         * @summary Unpublish World\n         * @param {string} worldId\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        unpublishWorld: function (worldId, options) {\n            return localVarFp.unpublishWorld(worldId, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Update information about a specific World.\n         * @summary Update World\n         * @param {string} worldId\n         * @param {UpdateWorldRequest} [updateWorldRequest]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateWorld: function (worldId, updateWorldRequest, options) {\n            return localVarFp.updateWorld(worldId, updateWorldRequest, options).then(function (request) { return request(axios, basePath); });\n        },\n    };\n};\n/**\n * WorldsApi - object-oriented interface\n * @export\n * @class WorldsApi\n * @extends {BaseAPI}\n */\nvar WorldsApi = /** @class */ (function (_super) {\n    __extends(WorldsApi, _super);\n    function WorldsApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Create a new world. This endpoint requires `assetUrl` to be a valid File object with `.vrcw` file extension, and `imageUrl` to be a valid File object with an image file extension.\n     * @summary Create World\n     * @param {CreateWorldRequest} [createWorldRequest]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof WorldsApi\n     */\n    WorldsApi.prototype.createWorld = function (createWorldRequest, options) {\n        var _this = this;\n        return exports.WorldsApiFp(this.configuration).createWorld(createWorldRequest, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Delete a world. Notice a world is never fully \\\"deleted\\\", only its ReleaseStatus is set to \\\"hidden\\\" and the linked Files are deleted. The WorldID is permanently reserved.\n     * @summary Delete World\n     * @param {string} worldId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof WorldsApi\n     */\n    WorldsApi.prototype.deleteWorld = function (worldId, options) {\n        var _this = this;\n        return exports.WorldsApiFp(this.configuration).deleteWorld(worldId, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Search and list currently Active worlds by query filters.\n     * @summary List Active Worlds\n     * @param {boolean} [featured] Filters on featured results.\n     * @param {'popularity' | 'heat' | 'trust' | 'shuffle' | 'random' | 'favorites' | 'reportScore' | 'reportCount' | 'publicationDate' | 'labsPublicationDate' | 'created' | '_created_at' | 'updated' | '_updated_at' | 'order' | 'relevance' | 'magic' | 'name'} [sort]\n     * @param {number} [n] The number of objects to return.\n     * @param {'ascending' | 'descending'} [order]\n     * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n     * @param {string} [search] Filters by world name.\n     * @param {string} [tag] Tags to include (comma-separated). Any of the tags needs to be present.\n     * @param {string} [notag] Tags to exclude (comma-separated).\n     * @param {'public' | 'private' | 'hidden' | 'all'} [releaseStatus] Filter by ReleaseStatus.\n     * @param {string} [maxUnityVersion] The maximum Unity version supported by the asset.\n     * @param {string} [minUnityVersion] The minimum Unity version supported by the asset.\n     * @param {string} [platform] The platform the asset supports.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof WorldsApi\n     */\n    WorldsApi.prototype.getActiveWorlds = function (featured, sort, n, order, offset, search, tag, notag, releaseStatus, maxUnityVersion, minUnityVersion, platform, options) {\n        var _this = this;\n        return exports.WorldsApiFp(this.configuration).getActiveWorlds(featured, sort, n, order, offset, search, tag, notag, releaseStatus, maxUnityVersion, minUnityVersion, platform, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Search and list favorited worlds by query filters.\n     * @summary List Favorited Worlds\n     * @param {boolean} [featured] Filters on featured results.\n     * @param {'popularity' | 'heat' | 'trust' | 'shuffle' | 'random' | 'favorites' | 'reportScore' | 'reportCount' | 'publicationDate' | 'labsPublicationDate' | 'created' | '_created_at' | 'updated' | '_updated_at' | 'order' | 'relevance' | 'magic' | 'name'} [sort]\n     * @param {number} [n] The number of objects to return.\n     * @param {'ascending' | 'descending'} [order]\n     * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n     * @param {string} [search] Filters by world name.\n     * @param {string} [tag] Tags to include (comma-separated). Any of the tags needs to be present.\n     * @param {string} [notag] Tags to exclude (comma-separated).\n     * @param {'public' | 'private' | 'hidden' | 'all'} [releaseStatus] Filter by ReleaseStatus.\n     * @param {string} [maxUnityVersion] The maximum Unity version supported by the asset.\n     * @param {string} [minUnityVersion] The minimum Unity version supported by the asset.\n     * @param {string} [platform] The platform the asset supports.\n     * @param {string} [userId] Target user to see information on, admin-only.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof WorldsApi\n     */\n    WorldsApi.prototype.getFavoritedWorlds = function (featured, sort, n, order, offset, search, tag, notag, releaseStatus, maxUnityVersion, minUnityVersion, platform, userId, options) {\n        var _this = this;\n        return exports.WorldsApiFp(this.configuration).getFavoritedWorlds(featured, sort, n, order, offset, search, tag, notag, releaseStatus, maxUnityVersion, minUnityVersion, platform, userId, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Search and list recently visited worlds by query filters.\n     * @summary List Recent Worlds\n     * @param {boolean} [featured] Filters on featured results.\n     * @param {'popularity' | 'heat' | 'trust' | 'shuffle' | 'random' | 'favorites' | 'reportScore' | 'reportCount' | 'publicationDate' | 'labsPublicationDate' | 'created' | '_created_at' | 'updated' | '_updated_at' | 'order' | 'relevance' | 'magic' | 'name'} [sort]\n     * @param {number} [n] The number of objects to return.\n     * @param {'ascending' | 'descending'} [order]\n     * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n     * @param {string} [search] Filters by world name.\n     * @param {string} [tag] Tags to include (comma-separated). Any of the tags needs to be present.\n     * @param {string} [notag] Tags to exclude (comma-separated).\n     * @param {'public' | 'private' | 'hidden' | 'all'} [releaseStatus] Filter by ReleaseStatus.\n     * @param {string} [maxUnityVersion] The maximum Unity version supported by the asset.\n     * @param {string} [minUnityVersion] The minimum Unity version supported by the asset.\n     * @param {string} [platform] The platform the asset supports.\n     * @param {string} [userId] Target user to see information on, admin-only.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof WorldsApi\n     */\n    WorldsApi.prototype.getRecentWorlds = function (featured, sort, n, order, offset, search, tag, notag, releaseStatus, maxUnityVersion, minUnityVersion, platform, userId, options) {\n        var _this = this;\n        return exports.WorldsApiFp(this.configuration).getRecentWorlds(featured, sort, n, order, offset, search, tag, notag, releaseStatus, maxUnityVersion, minUnityVersion, platform, userId, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Get information about a specific World.\n     * @summary Get World by ID\n     * @param {string} worldId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof WorldsApi\n     */\n    WorldsApi.prototype.getWorld = function (worldId, options) {\n        var _this = this;\n        return exports.WorldsApiFp(this.configuration).getWorld(worldId, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Returns a worlds instance.\n     * @summary Get World Instance\n     * @param {string} worldId\n     * @param {string} instanceId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof WorldsApi\n     */\n    WorldsApi.prototype.getWorldInstance = function (worldId, instanceId, options) {\n        var _this = this;\n        return exports.WorldsApiFp(this.configuration).getWorldInstance(worldId, instanceId, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Return a worlds custom metadata. This is currently believed to be unused. Metadata can be set with `updateWorld` and can be any arbitrary object.\n     * @summary Get World Metadata\n     * @param {string} worldId\n     * @param {*} [options] Override http request option.\n     * @deprecated\n     * @throws {RequiredError}\n     * @memberof WorldsApi\n     */\n    WorldsApi.prototype.getWorldMetadata = function (worldId, options) {\n        var _this = this;\n        return exports.WorldsApiFp(this.configuration).getWorldMetadata(worldId, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Returns a worlds publish status.\n     * @summary Get World Publish Status\n     * @param {string} worldId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof WorldsApi\n     */\n    WorldsApi.prototype.getWorldPublishStatus = function (worldId, options) {\n        var _this = this;\n        return exports.WorldsApiFp(this.configuration).getWorldPublishStatus(worldId, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Publish a world. You can only publish one world per week.\n     * @summary Publish World\n     * @param {string} worldId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof WorldsApi\n     */\n    WorldsApi.prototype.publishWorld = function (worldId, options) {\n        var _this = this;\n        return exports.WorldsApiFp(this.configuration).publishWorld(worldId, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Search and list any worlds by query filters.\n     * @summary Search All Worlds\n     * @param {boolean} [featured] Filters on featured results.\n     * @param {'popularity' | 'heat' | 'trust' | 'shuffle' | 'random' | 'favorites' | 'reportScore' | 'reportCount' | 'publicationDate' | 'labsPublicationDate' | 'created' | '_created_at' | 'updated' | '_updated_at' | 'order' | 'relevance' | 'magic' | 'name'} [sort]\n     * @param {'me'} [user] Set to &#x60;me&#x60; for searching own worlds.\n     * @param {string} [userId] Filter by UserID.\n     * @param {number} [n] The number of objects to return.\n     * @param {'ascending' | 'descending'} [order]\n     * @param {number} [offset] A zero-based offset from the default object sorting from where search results start.\n     * @param {string} [search] Filters by world name.\n     * @param {string} [tag] Tags to include (comma-separated). Any of the tags needs to be present.\n     * @param {string} [notag] Tags to exclude (comma-separated).\n     * @param {'public' | 'private' | 'hidden' | 'all'} [releaseStatus] Filter by ReleaseStatus.\n     * @param {string} [maxUnityVersion] The maximum Unity version supported by the asset.\n     * @param {string} [minUnityVersion] The minimum Unity version supported by the asset.\n     * @param {string} [platform] The platform the asset supports.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof WorldsApi\n     */\n    WorldsApi.prototype.searchWorlds = function (featured, sort, user, userId, n, order, offset, search, tag, notag, releaseStatus, maxUnityVersion, minUnityVersion, platform, options) {\n        var _this = this;\n        return exports.WorldsApiFp(this.configuration).searchWorlds(featured, sort, user, userId, n, order, offset, search, tag, notag, releaseStatus, maxUnityVersion, minUnityVersion, platform, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Unpublish a world.\n     * @summary Unpublish World\n     * @param {string} worldId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof WorldsApi\n     */\n    WorldsApi.prototype.unpublishWorld = function (worldId, options) {\n        var _this = this;\n        return exports.WorldsApiFp(this.configuration).unpublishWorld(worldId, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Update information about a specific World.\n     * @summary Update World\n     * @param {string} worldId\n     * @param {UpdateWorldRequest} [updateWorldRequest]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof WorldsApi\n     */\n    WorldsApi.prototype.updateWorld = function (worldId, updateWorldRequest, options) {\n        var _this = this;\n        return exports.WorldsApiFp(this.configuration).updateWorld(worldId, updateWorldRequest, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    return WorldsApi;\n}(base_1.BaseAPI));\nexports.WorldsApi = WorldsApi;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}