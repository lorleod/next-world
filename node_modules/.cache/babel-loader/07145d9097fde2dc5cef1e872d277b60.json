{"ast":null,"code":"var _jsxFileName = \"/Users/Taylor/lighthouse/next-world/src/App.js\";\n\nconst vrchat = require(\"vrchat\");\n\nrequire('dotenv').config();\n\nconsole.log(process.env);\nimport { Routes, Route } from \"react-router-dom\";\nimport \"./App.scss\";\nimport Nav from \"./components/partials/Nav\";\nimport Home from \"./components/Home\";\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport AddWorld from \"./components/AddWorld\";\nimport User from \"./components/User\"; // API Step 1. We begin with creating a Configuration, which contains the username and password for authentication.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst configuration = new vrchat.Configuration({\n  username: USERNAME,\n  password: PASSWORD\n}); // API Step 2. Use configuration to authenticate\n\nconst AuthenticationApi = new vrchat.AuthenticationApi(configuration); // Step 3. Calling getCurrentUser on Authentication API logs you in if the user isn't already logged in.\n\nAuthenticationApi.getCurrentUser().then(resp => {\n  const currentUser = resp.data;\n  console.log(`Logged in as: ${currentUser.displayName}`);\n});\nconsole.log(\"VRCHAT: \", vrchat);\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/user\",\n        element: /*#__PURE__*/_jsxDEV(User, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/register\",\n        element: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/addworld\",\n        element: /*#__PURE__*/_jsxDEV(AddWorld, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["vrchat","require","config","console","log","process","env","Routes","Route","Nav","Home","Login","Register","AddWorld","User","configuration","Configuration","username","USERNAME","password","PASSWORD","AuthenticationApi","getCurrentUser","then","resp","currentUser","data","displayName","App"],"sources":["/Users/Taylor/lighthouse/next-world/src/App.js"],"sourcesContent":["const vrchat = require(\"vrchat\");\nrequire('dotenv').config()\nconsole.log(process.env)\n\nimport { Routes, Route } from \"react-router-dom\";\n\nimport \"./App.scss\";\nimport Nav from \"./components/partials/Nav\";\nimport Home from \"./components/Home\";\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport AddWorld from \"./components/AddWorld\";\nimport User from \"./components/User\";\n\n\n// API Step 1. We begin with creating a Configuration, which contains the username and password for authentication.\nconst configuration = new vrchat.Configuration({\n    username: USERNAME,\n    password: PASSWORD\n});\n\n// API Step 2. Use configuration to authenticate\nconst AuthenticationApi = new vrchat.AuthenticationApi(configuration);\n\n// Step 3. Calling getCurrentUser on Authentication API logs you in if the user isn't already logged in.\nAuthenticationApi.getCurrentUser()\n  .then(resp => {\n    const currentUser = resp.data;\n    console.log(`Logged in as: ${currentUser.displayName}`);\n  });\n\n  console.log(\"VRCHAT: \", vrchat);\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Nav />\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/user\" element={<User />} />\n        <Route path=\"/login\" element={<Login />} />\n        <Route path=\"/register\" element={<Register />} />\n        <Route path=\"/addworld\" element={<AddWorld />} />\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AACAC,OAAO,CAACC,GAAR,CAAYC,OAAO,CAACC,GAApB;AAEA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,kBAA9B;AAEA,OAAO,YAAP;AACA,OAAOC,GAAP,MAAgB,2BAAhB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,IAAP,MAAiB,mBAAjB,C,CAGA;;;AACA,MAAMC,aAAa,GAAG,IAAIf,MAAM,CAACgB,aAAX,CAAyB;EAC3CC,QAAQ,EAAEC,QADiC;EAE3CC,QAAQ,EAAEC;AAFiC,CAAzB,CAAtB,C,CAKA;;AACA,MAAMC,iBAAiB,GAAG,IAAIrB,MAAM,CAACqB,iBAAX,CAA6BN,aAA7B,CAA1B,C,CAEA;;AACAM,iBAAiB,CAACC,cAAlB,GACGC,IADH,CACQC,IAAI,IAAI;EACZ,MAAMC,WAAW,GAAGD,IAAI,CAACE,IAAzB;EACAvB,OAAO,CAACC,GAAR,CAAa,iBAAgBqB,WAAW,CAACE,WAAY,EAArD;AACD,CAJH;AAMExB,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBJ,MAAxB;;AAGF,SAAS4B,GAAT,GAAe;EACb,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE,QAAC,GAAD;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,MAAD;MAAA,wBACE,QAAC,KAAD;QAAO,IAAI,EAAC,GAAZ;QAAgB,OAAO,eAAE,QAAC,IAAD;UAAA;UAAA;UAAA;QAAA;MAAzB;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,KAAD;QAAO,IAAI,EAAC,OAAZ;QAAoB,OAAO,eAAE,QAAC,IAAD;UAAA;UAAA;UAAA;QAAA;MAA7B;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE,QAAC,KAAD;QAAO,IAAI,EAAC,QAAZ;QAAqB,OAAO,eAAE,QAAC,KAAD;UAAA;UAAA;UAAA;QAAA;MAA9B;QAAA;QAAA;QAAA;MAAA,QAHF,eAIE,QAAC,KAAD;QAAO,IAAI,EAAC,WAAZ;QAAwB,OAAO,eAAE,QAAC,QAAD;UAAA;UAAA;UAAA;QAAA;MAAjC;QAAA;QAAA;QAAA;MAAA,QAJF,eAKE,QAAC,KAAD;QAAO,IAAI,EAAC,WAAZ;QAAwB,OAAO,eAAE,QAAC,QAAD;UAAA;UAAA;UAAA;QAAA;MAAjC;QAAA;QAAA;QAAA;MAAA,QALF;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAYD;;KAbQA,G;AAeT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}